package se.lnu.siq.s4rdm3x.experiments.regression.dumps;
import se.lnu.siq.s4rdm3x.model.CGraph;
import se.lnu.siq.s4rdm3x.model.cmd.mapper.ArchDef;
import se.lnu.siq.s4rdm3x.model.CNode;
import se.lnu.siq.s4rdm3x.dmodel.dmClass;
import se.lnu.siq.s4rdm3x.dmodel.dmDependency;
import java.util.HashMap;
public class CommonsImagingDump extends DumpBase {
	public CommonsImagingDump() {
		createNodes();
		createArch();
	}
	public HuGMeParams getHuGMeParams(int a_index) {
		HuGMeParams r = null;
		switch (a_index) {
			case 0: {
				r = new HuGMeParams();
				r.m_omega = 0.5904661218932129;
				r.m_phi = 0.4460207191377288;
				r.m_weights[0] = 0.15749016986027253;
				r.m_weights[1] = 0.1732388147238011;
				r.m_weights[2] = 0.29961538190594705;
				r.m_weights[3] = 0.13048634967514372;
				r.m_weights[4] = 0.8791197548240298;
				r.m_weights[5] = 0.6118446998768333;
				r.m_weights[6] = 0.4737233666244387;
				r.m_weights[7] = 0.6016147527016733;
				r.m_weights[8] = 0.9684922888926506;
				r.m_weights[9] = 0.20485347972387502;
				r.m_weights[10] = 0.551208521845968;
				r.m_weights[11] = 0.9072829561101808;
				r.m_f1 = 0.25263157894736843;
				r.m_doManualMapping = false;
				break;
			}
			case 1: {
				r = new HuGMeParams();
				r.m_omega = 0.595785053674361;
				r.m_phi = 0.5851403502797796;
				r.m_weights[0] = 0.19591330370354576;
				r.m_weights[1] = 0.8657025259498891;
				r.m_weights[2] = 0.2771497923252637;
				r.m_weights[3] = 0.2003324595102004;
				r.m_weights[4] = 0.7053972338453938;
				r.m_weights[5] = 0.7843719607571148;
				r.m_weights[6] = 0.39522684568430533;
				r.m_weights[7] = 0.602706937644477;
				r.m_weights[8] = 0.6004794213670446;
				r.m_weights[9] = 0.7004696569954424;
				r.m_weights[10] = 0.2640553136466155;
				r.m_weights[11] = 0.7851617049421101;
				r.m_f1 = 0.288659793814433;
				r.m_doManualMapping = false;
				break;
			}
			case 2: {
				r = new HuGMeParams();
				r.m_omega = 0.6460985346559934;
				r.m_phi = 0.9244648740658021;
				r.m_weights[0] = 0.1813198635896628;
				r.m_weights[1] = 0.02270564320112911;
				r.m_weights[2] = 0.9481574071122937;
				r.m_weights[3] = 0.3280733616960072;
				r.m_weights[4] = 0.39306401377816813;
				r.m_weights[5] = 0.3659906579237022;
				r.m_weights[6] = 0.3223557497928786;
				r.m_weights[7] = 0.4106649555432348;
				r.m_weights[8] = 0.8834937709251198;
				r.m_weights[9] = 0.41933379423282824;
				r.m_weights[10] = 0.25629607961702017;
				r.m_weights[11] = 0.524233375456878;
				r.m_f1 = 0.7681159420289854;
				r.m_doManualMapping = false;
				break;
			}
		}
		return r;
	}
	public NBParams getNBParams(int a_index) {
		NBParams r = null;
		switch (a_index) {
			case 0: {
				r = new NBParams();
				r.m_doWordCount = false;
				r.m_threshold = 0.9263723631828762;
				r.m_doStemming = false;
				r.m_doUseCDA = false;
				r.m_doUseNodeText = false;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 4;
				r.m_f1 = 0.762589928057554;
				r.m_doManualMapping = false;
				break;
			}
			case 1: {
				r = new NBParams();
				r.m_doWordCount = true;
				r.m_threshold = 0.8773759325747129;
				r.m_doStemming = true;
				r.m_doUseCDA = true;
				r.m_doUseNodeText = false;
				r.m_doUseNodeName = false;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 1;
				r.m_f1 = 0.5694444444444444;
				r.m_doManualMapping = false;
				break;
			}
			case 2: {
				r = new NBParams();
				r.m_doWordCount = false;
				r.m_threshold = 0.9311492329296579;
				r.m_doStemming = false;
				r.m_doUseCDA = true;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = false;
				r.m_doUseArchComponentName = true;
				r.m_minWordSize = 3;
				r.m_f1 = 0.8074534161490683;
				r.m_doManualMapping = false;
				break;
			}
		}
		return r;
	}
	public IRParams getIRParams(int a_index) {
		IRParams r = null;
		switch (a_index) {
			case 0: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = false;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 2;
				r.m_f1 = 0.21505376344086022;
				r.m_doManualMapping = false;
				break;
			}
			case 1: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = false;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 2;
				r.m_f1 = 0.21505376344086022;
				r.m_doManualMapping = false;
				break;
			}
			case 2: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = true;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 2;
				r.m_f1 = 0.4587155963302752;
				r.m_doManualMapping = false;
				break;
			}
		}
		return r;
	}
	public IRParams getLSIParams(int a_index) {
		IRParams r = null;
		switch (a_index) {
			case 0: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = false;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 2;
				r.m_f1 = 0.13333333333333333;
				r.m_doManualMapping = false;
				break;
			}
			case 1: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = false;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 2;
				r.m_f1 = 0.13333333333333333;
				r.m_doManualMapping = false;
				break;
			}
			case 2: {
				r = new IRParams();
				r.m_doStemming = true;
				r.m_doUseCDA = true;
				r.m_doUseNodeText = true;
				r.m_doUseNodeName = true;
				r.m_doUseArchComponentName = false;
				r.m_minWordSize = 1;
				r.m_f1 = 0.4038461538461538;
				r.m_doManualMapping = false;
				break;
			}
		}
		return r;
	}
	public void createNodes() {

		CNode n0 = m_g.createNode("java/awt/Color.java");
		dmClass c0 = new dmClass("java.awt.Color");
		n0.addClass(c0);
		m_classes.put("java.awt.Color", c0);

		CNode n1 = m_g.createNode("java/io/RandomAccessFile.java");
		dmClass c1 = new dmClass("java.io.RandomAccessFile");
		n1.addClass(c1);
		m_classes.put("java.io.RandomAccessFile", c1);

		CNode n2 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/T4_T6_Tables.java");
		n2.setMapping("common");
		n2.setClustering("common", "Initial");
		dmClass c2 = new dmClass("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry");
		n2.addClass(c2);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry", c2);
		c2_texts(c2);
		dmClass c3 = new dmClass("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables");
		n2.addClass(c3);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables", c3);
		c3_texts(c3);

		CNode n3 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoFloats.java");
		n3.setMapping("tiff");
		n3.setClustering("tiff", "Initial");
		dmClass c4 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats");
		n3.addClass(c4);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats", c4);
		c4_texts(c4);

		CNode n4 = m_g.createNode("java/io/BufferedInputStream.java");
		dmClass c5 = new dmClass("java.io.BufferedInputStream");
		n4.addClass(c5);
		m_classes.put("java.io.BufferedInputStream", c5);

		CNode n5 = m_g.createNode("java/awt/image/RasterFormatException.java");
		dmClass c6 = new dmClass("java.awt.image.RasterFormatException");
		n5.addClass(c6);
		m_classes.put("java.awt.image.RasterFormatException", c6);

		CNode n6 = m_g.createNode("org/apache/commons/imaging/palette/ColorSpaceSubset.java");
		n6.setMapping("palette");
		n6.setClustering("palette", "Initial");
		dmClass c7 = new dmClass("org.apache.commons.imaging.palette.ColorSpaceSubset");
		n6.addClass(c7);
		m_classes.put("org.apache.commons.imaging.palette.ColorSpaceSubset", c7);
		c7_texts(c7);
		dmClass c8 = new dmClass("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator");
		n6.addClass(c8);
		m_classes.put("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator", c8);
		c8_texts(c8);

		CNode n7 = m_g.createNode("org/apache/commons/imaging/formats/xbm/XbmImageParser.java");
		n7.setMapping("xbm");
		n7.setClustering("xbm", "Initial");
		dmClass c9 = new dmClass("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult");
		n7.addClass(c9);
		m_classes.put("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult", c9);
		c9_texts(c9);
		dmClass c10 = new dmClass("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader");
		n7.addClass(c10);
		m_classes.put("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader", c10);
		c10_texts(c10);
		dmClass c11 = new dmClass("org.apache.commons.imaging.formats.xbm.XbmImageParser$1");
		n7.addClass(c11);
		m_classes.put("org.apache.commons.imaging.formats.xbm.XbmImageParser$1", c11);
		c11_texts(c11);
		dmClass c12 = new dmClass("org.apache.commons.imaging.formats.xbm.XbmImageParser");
		n7.addClass(c12);
		m_classes.put("org.apache.commons.imaging.formats.xbm.XbmImageParser", c12);
		c12_texts(c12);

		CNode n8 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForValue.java");
		n8.setMapping("tiff");
		n8.setClustering("tiff", "Initial");
		dmClass c13 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue");
		n8.addClass(c13);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue", c13);
		c13_texts(c13);

		CNode n9 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpImageContents.java");
		n9.setMapping("bmp");
		n9.setClustering("bmp", "Initial");
		dmClass c14 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpImageContents");
		n9.addClass(c14);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpImageContents", c14);
		c14_texts(c14);

		CNode n10 = m_g.createNode("org/apache/commons/imaging/common/mylzw/MyBitOutputStream.java");
		n10.setMapping("common");
		n10.setClustering("common", "Initial");
		dmClass c15 = new dmClass("org.apache.commons.imaging.common.mylzw.MyBitOutputStream");
		n10.addClass(c15);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyBitOutputStream", c15);
		c15_texts(c15);

		CNode n11 = m_g.createNode("java/awt/image/ColorConvertOp.java");
		dmClass c16 = new dmClass("java.awt.image.ColorConvertOp");
		n11.addClass(c16);
		m_classes.put("java.awt.image.ColorConvertOp", c16);

		CNode n12 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/SosSegment.java");
		n12.setMapping("jpeg");
		n12.setClustering("jpeg", "Initial");
		dmClass c17 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component");
		n12.addClass(c17);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component", c17);
		c17_texts(c17);
		dmClass c18 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.SosSegment");
		n12.addClass(c18);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.SosSegment", c18);
		c18_texts(c18);

		CNode n13 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoAsciiOrByte.java");
		n13.setMapping("tiff");
		n13.setClustering("tiff", "Initial");
		dmClass c19 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte");
		n13.addClass(c19);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte", c19);
		c19_texts(c19);

		CNode n14 = m_g.createNode("org/apache/commons/imaging/formats/png/PngWriter.java");
		n14.setMapping("png");
		n14.setClustering("png", "Initial");
		dmClass c20 = new dmClass("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader");
		n14.addClass(c20);
		m_classes.put("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader", c20);
		c20_texts(c20);
		dmClass c21 = new dmClass("org.apache.commons.imaging.formats.png.PngWriter");
		n14.addClass(c21);
		m_classes.put("org.apache.commons.imaging.formats.png.PngWriter", c21);
		c21_texts(c21);

		CNode n15 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForRange.java");
		n15.setMapping("tiff");
		n15.setClustering("tiff", "Initial");
		dmClass c22 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange");
		n15.addClass(c22);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange", c22);
		c22_texts(c22);

		CNode n16 = m_g.createNode("org/apache/commons/imaging/common/bytesource/ByteSourceInputStream.java");
		n16.setMapping("common");
		n16.setClustering("common", "Initial");
		dmClass c23 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream");
		n16.addClass(c23);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream", c23);
		c23_texts(c23);
		dmClass c24 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream");
		n16.addClass(c24);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream", c24);
		c24_texts(c24);
		dmClass c25 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock");
		n16.addClass(c25);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock", c25);
		c25_texts(c25);
		dmClass c26 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$1");
		n16.addClass(c26);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$1", c26);
		c26_texts(c26);

		CNode n17 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpHeaderInfo.java");
		n17.setMapping("bmp");
		n17.setClustering("bmp", "Initial");
		dmClass c27 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace");
		n17.addClass(c27);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace", c27);
		c27_texts(c27);
		dmClass c28 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpaceCoordinate");
		n17.addClass(c28);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpaceCoordinate", c28);
		c28_texts(c28);
		dmClass c29 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo");
		n17.addClass(c29);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo", c29);
		c29_texts(c29);

		CNode n18 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilter.java");
		n18.setMapping("png");
		n18.setClustering("png", "Initial");
		dmClass c30 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter");
		n18.addClass(c30);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter", c30);
		c30_texts(c30);

		CNode n19 = m_g.createNode("org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java");
		n19.setMapping("palette");
		n19.setClustering("palette", "Initial");
		dmClass c31 = new dmClass("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut");
		n19.addClass(c31);
		m_classes.put("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut", c31);
		c31_texts(c31);
		dmClass c32 = new dmClass("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut$1");
		n19.addClass(c32);
		m_classes.put("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut$1", c32);
		c32_texts(c32);

		CNode n20 = m_g.createNode("org/apache/commons/imaging/common/ImageBuilder.java");
		n20.setMapping("common");
		n20.setClustering("common", "Initial");
		dmClass c33 = new dmClass("org.apache.commons.imaging.common.ImageBuilder");
		n20.addClass(c33);
		m_classes.put("org.apache.commons.imaging.common.ImageBuilder", c33);
		c33_texts(c33);

		CNode n21 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifImageMetadataItem.java");
		n21.setMapping("gif");
		n21.setClustering("gif", "Initial");
		dmClass c34 = new dmClass("org.apache.commons.imaging.formats.gif.GifImageMetadataItem");
		n21.addClass(c34);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifImageMetadataItem", c34);
		c34_texts(c34);

		CNode n22 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/AdobePageMaker6TagConstants.java");
		n22.setMapping("tiff");
		n22.setClustering("tiff", "Initial");
		dmClass c35 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants");
		n22.addClass(c35);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants", c35);
		c35_texts(c35);

		CNode n23 = m_g.createNode("org/apache/commons/imaging/common/BinaryFunctions.java");
		n23.setMapping("common");
		dmClass c36 = new dmClass("org.apache.commons.imaging.common.BinaryFunctions");
		n23.addClass(c36);
		m_classes.put("org.apache.commons.imaging.common.BinaryFunctions", c36);
		c36_texts(c36);

		CNode n24 = m_g.createNode("org/apache/commons/imaging/formats/tiff/JpegImageData.java");
		n24.setMapping("tiff");
		dmClass c37 = new dmClass("org.apache.commons.imaging.formats.tiff.JpegImageData");
		n24.addClass(c37);
		m_classes.put("org.apache.commons.imaging.formats.tiff.JpegImageData", c37);
		c37_texts(c37);

		CNode n25 = m_g.createNode("org/apache/commons/imaging/formats/ico/IcoImageParser.java");
		n25.setMapping("ico");
		n25.setClustering("ico", "Initial");
		dmClass c38 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents");
		n25.addClass(c38);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents", c38);
		c38_texts(c38);
		dmClass c39 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData");
		n25.addClass(c39);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData", c39);
		c39_texts(c39);
		dmClass c40 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader");
		n25.addClass(c40);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader", c40);
		c40_texts(c40);
		dmClass c41 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader");
		n25.addClass(c41);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader", c41);
		c41_texts(c41);
		dmClass c42 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser");
		n25.addClass(c42);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser", c42);
		c42_texts(c42);
		dmClass c43 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo");
		n25.addClass(c43);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo", c43);
		c43_texts(c43);
		dmClass c44 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData");
		n25.addClass(c44);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData", c44);
		c44_texts(c44);
		dmClass c45 = new dmClass("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData");
		n25.addClass(c45);
		m_classes.put("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData", c45);
		c45_texts(c45);

		CNode n26 = m_g.createNode("org/apache/commons/imaging/formats/bmp/PixelParserBitFields.java");
		n26.setMapping("bmp");
		n26.setClustering("bmp", "Initial");
		dmClass c46 = new dmClass("org.apache.commons.imaging.formats.bmp.PixelParserBitFields");
		n26.addClass(c46);
		m_classes.put("org.apache.commons.imaging.formats.bmp.PixelParserBitFields", c46);
		c46_texts(c46);

		CNode n27 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpWriterRgb.java");
		n27.setMapping("bmp");
		n27.setClustering("bmp", "Initial");
		dmClass c47 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpWriterRgb");
		n27.addClass(c47);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpWriterRgb", c47);
		c47_texts(c47);

		CNode n28 = m_g.createNode("java/io/Serializable.java");
		dmClass c48 = new dmClass("java.io.Serializable");
		n28.addClass(c48);
		m_classes.put("java.io.Serializable", c48);

		CNode n29 = m_g.createNode("java/nio/ByteOrder.java");
		dmClass c49 = new dmClass("java.nio.ByteOrder");
		n29.addClass(c49);
		m_classes.put("java.nio.ByteOrder", c49);

		CNode n30 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/PhotoshopApp13Data.java");
		n30.setMapping("jpeg");
		n30.setClustering("jpeg", "Initial");
		dmClass c50 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data");
		n30.addClass(c50);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data", c50);
		c50_texts(c50);

		CNode n31 = m_g.createNode("org/apache/commons/imaging/ImageDump.java");
		n31.setMapping("base");
		n31.setClustering("base", "Initial");
		dmClass c51 = new dmClass("org.apache.commons.imaging.ImageDump");
		n31.addClass(c51);
		m_classes.put("org.apache.commons.imaging.ImageDump", c51);
		c51_texts(c51);

		CNode n32 = m_g.createNode("org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java");
		n32.setMapping("wbmp");
		n32.setClustering("wbmp", "Initial");
		dmClass c52 = new dmClass("org.apache.commons.imaging.formats.wbmp.WbmpImageParser");
		n32.addClass(c52);
		m_classes.put("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", c52);
		c52_texts(c52);
		dmClass c53 = new dmClass("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader");
		n32.addClass(c53);
		m_classes.put("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader", c53);
		c53_texts(c53);

		CNode n33 = m_g.createNode("org/apache/commons/imaging/color/ColorCieLch.java");
		n33.setMapping("color");
		n33.setClustering("color", "Initial");
		dmClass c54 = new dmClass("org.apache.commons.imaging.color.ColorCieLch");
		n33.addClass(c54);
		m_classes.put("org.apache.commons.imaging.color.ColorCieLch", c54);
		c54_texts(c54);

		CNode n34 = m_g.createNode("org/apache/commons/imaging/formats/png/ScanExpediterInterlaced.java");
		n34.setMapping("png");
		n34.setClustering("png", "Initial");
		dmClass c55 = new dmClass("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced");
		n34.addClass(c55);
		m_classes.put("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced", c55);
		c55_texts(c55);

		CNode n35 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeFloat.java");
		n35.setMapping("tiff");
		dmClass c56 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat");
		n35.addClass(c56);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat", c56);
		c56_texts(c56);

		CNode n36 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcBlock.java");
		n36.setMapping("jpeg");
		n36.setClustering("jpeg", "Initial");
		dmClass c57 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock");
		n36.addClass(c57);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock", c57);
		c57_texts(c57);

		CNode n37 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSShorts.java");
		n37.setMapping("tiff");
		n37.setClustering("tiff", "Initial");
		dmClass c58 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts");
		n37.addClass(c58);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts", c58);
		c58_texts(c58);

		CNode n38 = m_g.createNode("org/apache/commons/imaging/common/ZlibDeflate.java");
		n38.setMapping("common");
		n38.setClustering("common", "Initial");
		dmClass c59 = new dmClass("org.apache.commons.imaging.common.ZlibDeflate");
		n38.addClass(c59);
		m_classes.put("org.apache.commons.imaging.common.ZlibDeflate", c59);
		c59_texts(c59);

		CNode n39 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifImageContents.java");
		n39.setMapping("gif");
		n39.setClustering("gif", "Initial");
		dmClass c60 = new dmClass("org.apache.commons.imaging.formats.gif.GifImageContents");
		n39.addClass(c60);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifImageContents", c60);
		c60_texts(c60);

		CNode n40 = m_g.createNode("org/apache/commons/imaging/palette/ColorCountComparator.java");
		n40.setMapping("palette");
		n40.setClustering("palette", "Initial");
		dmClass c61 = new dmClass("org.apache.commons.imaging.palette.ColorCountComparator");
		n40.addClass(c61);
		m_classes.put("org.apache.commons.imaging.palette.ColorCountComparator", c61);
		c61_texts(c61);
		dmClass c62 = new dmClass("org.apache.commons.imaging.palette.ColorCountComparator$1");
		n40.addClass(c62);
		m_classes.put("org.apache.commons.imaging.palette.ColorCountComparator$1", c62);
		c62_texts(c62);

		CNode n41 = m_g.createNode("org/apache/commons/imaging/common/bytesource/ByteSourceArray.java");
		n41.setMapping("common");
		n41.setClustering("common", "Initial");
		dmClass c63 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceArray");
		n41.addClass(c63);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceArray", c63);
		c63_texts(c63);

		CNode n42 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterLogLuv.java");
		n42.setMapping("tiff");
		n42.setClustering("tiff", "Initial");
		dmClass c64 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv");
		n42.addClass(c64);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", c64);
		c64_texts(c64);
		dmClass c65 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues");
		n42.addClass(c65);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues", c65);
		c65_texts(c65);
		dmClass c66 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues");
		n42.addClass(c66);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues", c66);
		c66_texts(c66);

		CNode n43 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoLongOrIFD.java");
		n43.setMapping("tiff");
		dmClass c67 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD");
		n43.addClass(c67);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD", c67);
		c67_texts(c67);

		CNode n44 = m_g.createNode("java/io/ByteArrayOutputStream.java");
		dmClass c68 = new dmClass("java.io.ByteArrayOutputStream");
		n44.addClass(c68);
		m_classes.put("java.io.ByteArrayOutputStream", c68);

		CNode n45 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/WangTagConstants.java");
		n45.setMapping("tiff");
		dmClass c69 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants");
		n45.addClass(c69);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants", c69);
		c69_texts(c69);

		CNode n46 = m_g.createNode("org/apache/commons/imaging/icc/IccTagType.java");
		n46.setMapping("icc");
		n46.setClustering("icc", "Initial");
		dmClass c70 = new dmClass("org.apache.commons.imaging.icc.IccTagType");
		n46.addClass(c70);
		m_classes.put("org.apache.commons.imaging.icc.IccTagType", c70);
		c70_texts(c70);

		CNode n47 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoGpsText.java");
		n47.setMapping("tiff");
		n47.setClustering("tiff", "Initial");
		dmClass c71 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText");
		n47.addClass(c71);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", c71);
		c71_texts(c71);
		dmClass c72 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding");
		n47.addClass(c72);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding", c72);
		c72_texts(c72);

		CNode n48 = m_g.createNode("java/awt/image/DataBufferInt.java");
		dmClass c73 = new dmClass("java.awt.image.DataBufferInt");
		n48.addClass(c73);
		m_classes.put("java.awt.image.DataBufferInt", c73);

		CNode n49 = m_g.createNode("org/apache/commons/imaging/formats/psd/PsdHeaderInfo.java");
		n49.setMapping("psd");
		n49.setClustering("psd", "Initial");
		dmClass c74 = new dmClass("org.apache.commons.imaging.formats.psd.PsdHeaderInfo");
		n49.addClass(c74);
		m_classes.put("org.apache.commons.imaging.formats.psd.PsdHeaderInfo", c74);
		c74_texts(c74);

		CNode n50 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java");
		n50.setMapping("jpeg");
		n50.setClustering("jpeg", "Initial");
		dmClass c75 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces");
		n50.addClass(c75);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces", c75);
		c75_texts(c75);
		dmClass c76 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece");
		n50.addClass(c76);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece", c76);
		c76_texts(c76);
		dmClass c77 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException");
		n50.addClass(c77);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException", c77);
		c77_texts(c77);
		dmClass c78 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif");
		n50.addClass(c78);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif", c78);
		c78_texts(c78);
		dmClass c79 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter");
		n50.addClass(c79);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter", c79);
		c79_texts(c79);
		dmClass c80 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData");
		n50.addClass(c80);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData", c80);
		c80_texts(c80);
		dmClass c81 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment");
		n50.addClass(c81);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment", c81);
		c81_texts(c81);
		dmClass c82 = new dmClass("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1");
		n50.addClass(c82);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1", c82);
		c82_texts(c82);

		CNode n51 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoShortOrRational.java");
		n51.setMapping("tiff");
		dmClass c83 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational");
		n51.addClass(c83);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational", c83);
		c83_texts(c83);

		CNode n52 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java");
		n52.setMapping("jpeg");
		n52.setClustering("jpeg", "Initial");
		dmClass c84 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser");
		n52.addClass(c84);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser", c84);
		c84_texts(c84);

		CNode n53 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java");
		n53.setMapping("jpeg");
		n53.setClustering("jpeg", "Initial");
		dmClass c85 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces");
		n53.addClass(c85);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces", c85);
		c85_texts(c85);
		dmClass c86 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter");
		n53.addClass(c86);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter", c86);
		c86_texts(c86);
		dmClass c87 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece");
		n53.addClass(c87);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece", c87);
		c87_texts(c87);
		dmClass c88 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JpegSegmentOverflowException");
		n53.addClass(c88);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JpegSegmentOverflowException", c88);
		c88_texts(c88);
		dmClass c89 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter");
		n53.addClass(c89);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter", c89);
		c89_texts(c89);
		dmClass c90 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment");
		n53.addClass(c90);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment", c90);
		c90_texts(c90);
		dmClass c91 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1");
		n53.addClass(c91);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1", c91);
		c91_texts(c91);
		dmClass c92 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData");
		n53.addClass(c92);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData", c92);
		c92_texts(c92);

		CNode n54 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkIdat.java");
		n54.setMapping("png");
		dmClass c93 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat");
		n54.addClass(c93);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat", c93);
		c93_texts(c93);

		CNode n55 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PgmWriter.java");
		n55.setMapping("pnm");
		n55.setClustering("pnm", "Initial");
		dmClass c94 = new dmClass("org.apache.commons.imaging.formats.pnm.PgmWriter");
		n55.addClass(c94);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PgmWriter", c94);
		c94_texts(c94);

		CNode n56 = m_g.createNode("org/apache/commons/imaging/ImageReadException.java");
		n56.setMapping("base");
		n56.setClustering("base", "Initial");
		dmClass c95 = new dmClass("org.apache.commons.imaging.ImageReadException");
		n56.addClass(c95);
		m_classes.put("org.apache.commons.imaging.ImageReadException", c95);
		c95_texts(c95);

		CNode n57 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PamFileInfo.java");
		n57.setMapping("pnm");
		n57.setClustering("pnm", "Initial");
		dmClass c96 = new dmClass("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader");
		n57.addClass(c96);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader", c96);
		c96_texts(c96);
		dmClass c97 = new dmClass("org.apache.commons.imaging.formats.pnm.PamFileInfo");
		n57.addClass(c97);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamFileInfo", c97);
		c97_texts(c97);
		dmClass c98 = new dmClass("org.apache.commons.imaging.formats.pnm.PamFileInfo$1");
		n57.addClass(c98);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamFileInfo$1", c98);
		c98_texts(c98);
		dmClass c99 = new dmClass("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader");
		n57.addClass(c99);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader", c99);
		c99_texts(c99);
		dmClass c100 = new dmClass("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader");
		n57.addClass(c100);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader", c100);
		c100_texts(c100);

		CNode n58 = m_g.createNode("org/apache/commons/imaging/palette/SimplePalette.java");
		n58.setMapping("palette");
		n58.setClustering("palette", "Initial");
		dmClass c101 = new dmClass("org.apache.commons.imaging.palette.SimplePalette");
		n58.addClass(c101);
		m_classes.put("org.apache.commons.imaging.palette.SimplePalette", c101);
		c101_texts(c101);

		CNode n59 = m_g.createNode("org/apache/commons/imaging/formats/pcx/PcxWriter.java");
		n59.setMapping("pcx");
		n59.setClustering("pcx", "Initial");
		dmClass c102 = new dmClass("org.apache.commons.imaging.formats.pcx.PcxWriter");
		n59.addClass(c102);
		m_classes.put("org.apache.commons.imaging.formats.pcx.PcxWriter", c102);
		c102_texts(c102);

		CNode n60 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSByte.java");
		n60.setMapping("tiff");
		n60.setClustering("tiff", "Initial");
		dmClass c103 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte");
		n60.addClass(c103);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte", c103);
		c103_texts(c103);

		CNode n61 = m_g.createNode("org/apache/commons/imaging/formats/bmp/PixelParserRgb.java");
		n61.setMapping("bmp");
		n61.setClustering("bmp", "Initial");
		dmClass c104 = new dmClass("org.apache.commons.imaging.formats.bmp.PixelParserRgb");
		n61.addClass(c104);
		m_classes.put("org.apache.commons.imaging.formats.bmp.PixelParserRgb", c104);
		c104_texts(c104);

		CNode n62 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/TiffDirectoryType.java");
		n62.setMapping("tiff");
		n62.setClustering("tiff", "Initial");
		dmClass c105 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType");
		n62.addClass(c105);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType", c105);
		c105_texts(c105);

		CNode n63 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunk.java");
		n63.setMapping("png");
		n63.setClustering("png", "Initial");
		dmClass c106 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunk");
		n63.addClass(c106);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunk", c106);
		c106_texts(c106);

		CNode n64 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/JpegUtils.java");
		n64.setMapping("jpeg");
		dmClass c107 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegUtils");
		n64.addClass(c107);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegUtils", c107);
		c107_texts(c107);
		dmClass c108 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegUtils$1");
		n64.addClass(c108);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegUtils$1", c108);
		c108_texts(c108);
		dmClass c109 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor");
		n64.addClass(c109);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor", c109);
		c109_texts(c109);

		CNode n65 = m_g.createNode("org/apache/commons/imaging/formats/psd/datareaders/CompressedDataReader.java");
		n65.setMapping("psd");
		n65.setClustering("psd", "Initial");
		dmClass c110 = new dmClass("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader");
		n65.addClass(c110);
		m_classes.put("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader", c110);
		c110_texts(c110);

		CNode n66 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/TiffDirectoryConstants.java");
		n66.setMapping("tiff");
		n66.setClustering("tiff", "Initial");
		dmClass c111 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryConstants");
		n66.addClass(c111);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryConstants", c111);
		c111_texts(c111);

		CNode n67 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffDirectory.java");
		n67.setMapping("tiff");
		n67.setClustering("tiff", "Initial");
		dmClass c112 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement");
		n67.addClass(c112);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement", c112);
		c112_texts(c112);
		dmClass c113 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffDirectory");
		n67.addClass(c113);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffDirectory", c113);
		c113_texts(c113);

		CNode n68 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java");
		n68.setMapping("tiff");
		dmClass c114 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless");
		n68.addClass(c114);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless", c114);
		c114_texts(c114);
		dmClass c115 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream");
		n68.addClass(c115);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream", c115);
		c115_texts(c115);

		CNode n69 = m_g.createNode("org/apache/commons/imaging/formats/png/PngColorType.java");
		n69.setMapping("png");
		n69.setClustering("png", "Initial");
		dmClass c116 = new dmClass("org.apache.commons.imaging.formats.png.PngColorType");
		n69.addClass(c116);
		m_classes.put("org.apache.commons.imaging.formats.png.PngColorType", c116);
		c116_texts(c116);

		CNode n70 = m_g.createNode("org/apache/commons/imaging/internal/Debug.java");
		n70.setMapping("internal");
		n70.setClustering("internal", "Initial");
		dmClass c117 = new dmClass("org.apache.commons.imaging.internal.Debug");
		n70.addClass(c117);
		m_classes.put("org.apache.commons.imaging.internal.Debug", c117);
		c117_texts(c117);

		CNode n71 = m_g.createNode("org/apache/commons/imaging/common/mylzw/BitsToByteInputStream.java");
		n71.setMapping("common");
		n71.setClustering("common", "Initial");
		dmClass c118 = new dmClass("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream");
		n71.addClass(c118);
		m_classes.put("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream", c118);
		c118_texts(c118);

		CNode n72 = m_g.createNode("java/io/ByteArrayInputStream.java");
		dmClass c119 = new dmClass("java.io.ByteArrayInputStream");
		n72.addClass(c119);
		m_classes.put("java.io.ByteArrayInputStream", c119);

		CNode n73 = m_g.createNode("org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStrips.java");
		n73.setMapping("tiff");
		n73.setClustering("tiff", "Initial");
		dmClass c120 = new dmClass("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips");
		n73.addClass(c120);
		m_classes.put("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", c120);
		c120_texts(c120);

		CNode n74 = m_g.createNode("javax/imageio/ImageIO.java");
		dmClass c121 = new dmClass("javax.imageio.ImageIO");
		n74.addClass(c121);
		m_classes.put("javax.imageio.ImageIO", c121);

		CNode n75 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffOutputSummary.java");
		n75.setMapping("tiff");
		n75.setClustering("tiff", "Initial");
		dmClass c122 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem");
		n75.addClass(c122);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem", c122);
		c122_texts(c122);
		dmClass c123 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary");
		n75.addClass(c123);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary", c123);
		c123_texts(c123);

		CNode n76 = m_g.createNode("org/apache/commons/imaging/palette/Dithering.java");
		n76.setMapping("palette");
		n76.setClustering("palette", "Initial");
		dmClass c124 = new dmClass("org.apache.commons.imaging.palette.Dithering");
		n76.addClass(c124);
		m_classes.put("org.apache.commons.imaging.palette.Dithering", c124);
		c124_texts(c124);

		CNode n77 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/SofnSegment.java");
		n77.setMapping("jpeg");
		n77.setClustering("jpeg", "Initial");
		dmClass c125 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component");
		n77.addClass(c125);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component", c125);
		c125_texts(c125);
		dmClass c126 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment");
		n77.addClass(c126);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment", c126);
		c126_texts(c126);

		CNode n78 = m_g.createNode("org/apache/commons/imaging/ImagingException.java");
		n78.setMapping("base");
		n78.setClustering("base", "Initial");
		dmClass c127 = new dmClass("org.apache.commons.imaging.ImagingException");
		n78.addClass(c127);
		m_classes.put("org.apache.commons.imaging.ImagingException", c127);
		c127_texts(c127);

		CNode n79 = m_g.createNode("org/apache/commons/imaging/formats/icns/Rle24Compression.java");
		n79.setMapping("icns");
		n79.setClustering("icns", "Initial");
		dmClass c128 = new dmClass("org.apache.commons.imaging.formats.icns.Rle24Compression");
		n79.addClass(c128);
		m_classes.put("org.apache.commons.imaging.formats.icns.Rle24Compression", c128);
		c128_texts(c128);

		CNode n80 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriter.java");
		n80.setMapping("jpeg");
		dmClass c129 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter");
		n80.addClass(c129);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter", c129);
		c129_texts(c129);

		CNode n81 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffTags.java");
		n81.setMapping("tiff");
		n81.setClustering("tiff", "Initial");
		dmClass c130 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffTags");
		n81.addClass(c130);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffTags", c130);
		c130_texts(c130);

		CNode n82 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/DqtSegment.java");
		n82.setMapping("jpeg");
		dmClass c131 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment");
		n82.addClass(c131);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment", c131);
		c131_texts(c131);
		dmClass c132 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable");
		n82.addClass(c132);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable", c132);
		c132_texts(c132);

		CNode n83 = m_g.createNode("org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterTrueColor.java");
		n83.setMapping("png");
		dmClass c133 = new dmClass("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor");
		n83.addClass(c133);
		m_classes.put("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor", c133);
		c133_texts(c133);

		CNode n84 = m_g.createNode("org/apache/commons/imaging/formats/png/ScanExpediter.java");
		n84.setMapping("png");
		dmClass c134 = new dmClass("org.apache.commons.imaging.formats.png.ScanExpediter");
		n84.addClass(c134);
		m_classes.put("org.apache.commons.imaging.formats.png.ScanExpediter", c134);
		c134_texts(c134);
		dmClass c135 = new dmClass("org.apache.commons.imaging.formats.png.ScanExpediter$1");
		n84.addClass(c135);
		m_classes.put("org.apache.commons.imaging.formats.png.ScanExpediter$1", c135);
		c135_texts(c135);

		CNode n85 = m_g.createNode("org/apache/commons/imaging/common/GenericImageMetadata.java");
		n85.setMapping("common");
		n85.setClustering("common", "Initial");
		dmClass c136 = new dmClass("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem");
		n85.addClass(c136);
		m_classes.put("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem", c136);
		c136_texts(c136);
		dmClass c137 = new dmClass("org.apache.commons.imaging.common.GenericImageMetadata");
		n85.addClass(c137);
		m_classes.put("org.apache.commons.imaging.common.GenericImageMetadata", c137);
		c137_texts(c137);

		CNode n86 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoAscii.java");
		n86.setMapping("tiff");
		n86.setClustering("tiff", "Initial");
		dmClass c138 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii");
		n86.addClass(c138);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii", c138);
		c138_texts(c138);

		CNode n87 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffReader.java");
		n87.setMapping("tiff");
		n87.setClustering("tiff", "Initial");
		dmClass c139 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector");
		n87.addClass(c139);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector", c139);
		c139_texts(c139);
		dmClass c140 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffReader$Collector");
		n87.addClass(c140);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffReader$Collector", c140);
		c140_texts(c140);
		dmClass c141 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffReader$Listener");
		n87.addClass(c141);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffReader$Listener", c141);
		c141_texts(c141);
		dmClass c142 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffReader");
		n87.addClass(c142);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffReader", c142);
		c142_texts(c142);

		CNode n88 = m_g.createNode("org/apache/commons/imaging/formats/xpm/XpmImageParser.java");
		n88.setMapping("xpm");
		n88.setClustering("xpm", "Initial");
		dmClass c143 = new dmClass("org.apache.commons.imaging.formats.xpm.XpmImageParser");
		n88.addClass(c143);
		m_classes.put("org.apache.commons.imaging.formats.xpm.XpmImageParser", c143);
		c143_texts(c143);
		dmClass c144 = new dmClass("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader");
		n88.addClass(c144);
		m_classes.put("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader", c144);
		c144_texts(c144);
		dmClass c145 = new dmClass("org.apache.commons.imaging.formats.xpm.XpmImageParser$1");
		n88.addClass(c145);
		m_classes.put("org.apache.commons.imaging.formats.xpm.XpmImageParser$1", c145);
		c145_texts(c145);
		dmClass c146 = new dmClass("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry");
		n88.addClass(c146);
		m_classes.put("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry", c146);
		c146_texts(c146);
		dmClass c147 = new dmClass("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult");
		n88.addClass(c147);
		m_classes.put("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult", c147);
		c147_texts(c147);

		CNode n89 = m_g.createNode("org/apache/commons/imaging/ImageWriteException.java");
		n89.setMapping("base");
		n89.setClustering("base", "Initial");
		dmClass c148 = new dmClass("org.apache.commons.imaging.ImageWriteException");
		n89.addClass(c148);
		m_classes.put("org.apache.commons.imaging.ImageWriteException", c148);
		c148_texts(c148);

		CNode n90 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifImageData.java");
		n90.setMapping("gif");
		n90.setClustering("gif", "Initial");
		dmClass c149 = new dmClass("org.apache.commons.imaging.formats.gif.GifImageData");
		n90.addClass(c149);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifImageData", c149);
		c149_texts(c149);

		CNode n91 = m_g.createNode("org/apache/commons/imaging/common/XmpEmbeddable.java");
		n91.setMapping("common");
		dmClass c150 = new dmClass("org.apache.commons.imaging.common.XmpEmbeddable");
		n91.addClass(c150);
		m_classes.put("org.apache.commons.imaging.common.XmpEmbeddable", c150);
		c150_texts(c150);

		CNode n92 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffOutputField.java");
		n92.setMapping("tiff");
		n92.setClustering("tiff", "Initial");
		dmClass c151 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputField");
		n92.addClass(c151);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", c151);
		c151_texts(c151);

		CNode n93 = m_g.createNode("org/apache/commons/imaging/ImageFormats.java");
		n93.setMapping("base");
		n93.setClustering("base", "Initial");
		dmClass c152 = new dmClass("org.apache.commons.imaging.ImageFormats");
		n93.addClass(c152);
		m_classes.put("org.apache.commons.imaging.ImageFormats", c152);
		c152_texts(c152);

		CNode n94 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/AppnSegment.java");
		n94.setMapping("jpeg");
		n94.setClustering("jpeg", "Initial");
		dmClass c153 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment");
		n94.addClass(c153);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment", c153);
		c153_texts(c153);

		CNode n95 = m_g.createNode("java/awt/color/ICC_Profile.java");
		dmClass c154 = new dmClass("java.awt.color.ICC_Profile");
		n95.addClass(c154);
		m_classes.put("java.awt.color.ICC_Profile", c154);

		CNode n96 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoShort.java");
		n96.setMapping("tiff");
		n96.setClustering("tiff", "Initial");
		dmClass c155 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort");
		n96.addClass(c155);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort", c155);
		c155_texts(c155);

		CNode n97 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PbmFileInfo.java");
		n97.setMapping("pnm");
		n97.setClustering("pnm", "Initial");
		dmClass c156 = new dmClass("org.apache.commons.imaging.formats.pnm.PbmFileInfo");
		n97.addClass(c156);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PbmFileInfo", c156);
		c156_texts(c156);

		CNode n98 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/GeoTiffTagConstants.java");
		n98.setMapping("tiff");
		dmClass c157 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants");
		n98.addClass(c157);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants", c157);
		c157_texts(c157);

		CNode n99 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkPhys.java");
		n99.setMapping("png");
		n99.setClustering("png", "Initial");
		dmClass c158 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys");
		n99.addClass(c158);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys", c158);
		c158_texts(c158);
		nextNodes_0();
	}
	public void nextNodes_0() {

		CNode n100 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeRational.java");
		n100.setMapping("tiff");
		n100.setClustering("tiff", "Initial");
		dmClass c159 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational");
		n100.addClass(c159);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational", c159);
		c159_texts(c159);

		CNode n101 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/DcfTagConstants.java");
		n101.setMapping("tiff");
		dmClass c160 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants");
		n101.addClass(c160);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants", c160);
		c160_texts(c160);

		CNode n102 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkIccp.java");
		n102.setMapping("png");
		n102.setClustering("png", "Initial");
		dmClass c161 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp");
		n102.addClass(c161);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp", c161);
		c161_texts(c161);

		CNode n103 = m_g.createNode("org/apache/commons/imaging/palette/MedianCutPalette.java");
		n103.setMapping("palette");
		dmClass c162 = new dmClass("org.apache.commons.imaging.palette.MedianCutPalette");
		n103.addClass(c162);
		m_classes.put("org.apache.commons.imaging.palette.MedianCutPalette", c162);
		c162_texts(c162);

		CNode n104 = m_g.createNode("org/apache/commons/imaging/formats/pcx/PcxImageParser.java");
		n104.setMapping("pcx");
		n104.setClustering("pcx", "Initial");
		dmClass c163 = new dmClass("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader");
		n104.addClass(c163);
		m_classes.put("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader", c163);
		c163_texts(c163);
		dmClass c164 = new dmClass("org.apache.commons.imaging.formats.pcx.PcxImageParser");
		n104.addClass(c164);
		m_classes.put("org.apache.commons.imaging.formats.pcx.PcxImageParser", c164);
		c164_texts(c164);

		CNode n105 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/JpegConstants.java");
		n105.setMapping("jpeg");
		n105.setClustering("jpeg", "Initial");
		dmClass c165 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegConstants");
		n105.addClass(c165);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegConstants", c165);
		c165_texts(c165);

		CNode n106 = m_g.createNode("java/awt/image/DataBufferFloat.java");
		dmClass c166 = new dmClass("java.awt.image.DataBufferFloat");
		n106.addClass(c166);
		m_classes.put("java.awt.image.DataBufferFloat", c166);

		CNode n107 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeDouble.java");
		n107.setMapping("tiff");
		n107.setClustering("tiff", "Initial");
		dmClass c167 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble");
		n107.addClass(c167);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble", c167);
		c167_texts(c167);

		CNode n108 = m_g.createNode("org/apache/commons/imaging/formats/pcx/PcxConstants.java");
		n108.setMapping("pcx");
		n108.setClustering("pcx", "Initial");
		dmClass c168 = new dmClass("org.apache.commons.imaging.formats.pcx.PcxConstants");
		n108.addClass(c168);
		m_classes.put("org.apache.commons.imaging.formats.pcx.PcxConstants", c168);
		c168_texts(c168);

		CNode n109 = m_g.createNode("org/apache/commons/imaging/formats/png/InterlaceMethod.java");
		n109.setMapping("png");
		n109.setClustering("png", "Initial");
		dmClass c169 = new dmClass("org.apache.commons.imaging.formats.png.InterlaceMethod");
		n109.addClass(c169);
		m_classes.put("org.apache.commons.imaging.formats.png.InterlaceMethod", c169);
		c169_texts(c169);

		CNode n110 = m_g.createNode("java/awt/image/DataBufferByte.java");
		dmClass c170 = new dmClass("java.awt.image.DataBufferByte");
		n110.addClass(c170);
		m_classes.put("java.awt.image.DataBufferByte", c170);

		CNode n111 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkIhdr.java");
		n111.setMapping("png");
		n111.setClustering("png", "Initial");
		dmClass c171 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr");
		n111.addClass(c171);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr", c171);
		c171_texts(c171);

		CNode n112 = m_g.createNode("org/apache/commons/imaging/icc/IccTagDataTypes.java");
		n112.setMapping("icc");
		dmClass c172 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes");
		n112.addClass(c172);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes", c172);
		c172_texts(c172);
		dmClass c173 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes$5");
		n112.addClass(c173);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes$5", c173);
		c173_texts(c173);
		dmClass c174 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes$4");
		n112.addClass(c174);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes$4", c174);
		c174_texts(c174);
		dmClass c175 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes$3");
		n112.addClass(c175);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes$3", c175);
		c175_texts(c175);
		dmClass c176 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes$2");
		n112.addClass(c176);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes$2", c176);
		c176_texts(c176);
		dmClass c177 = new dmClass("org.apache.commons.imaging.icc.IccTagDataTypes$1");
		n112.addClass(c177);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataTypes$1", c177);
		c177_texts(c177);

		CNode n113 = m_g.createNode("org/apache/commons/imaging/formats/icns/IcnsDecoder.java");
		n113.setMapping("icns");
		dmClass c178 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsDecoder");
		n113.addClass(c178);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsDecoder", c178);
		c178_texts(c178);

		CNode n114 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PpmWriter.java");
		n114.setMapping("pnm");
		dmClass c179 = new dmClass("org.apache.commons.imaging.formats.pnm.PpmWriter");
		n114.addClass(c179);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PpmWriter", c179);
		c179_texts(c179);

		CNode n115 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoByte.java");
		n115.setMapping("tiff");
		dmClass c180 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte");
		n115.addClass(c180);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte", c180);
		c180_texts(c180);

		CNode n116 = m_g.createNode("org/apache/commons/imaging/icc/IccProfileParser.java");
		n116.setMapping("icc");
		n116.setClustering("icc", "Initial");
		dmClass c181 = new dmClass("org.apache.commons.imaging.icc.IccProfileParser");
		n116.addClass(c181);
		m_classes.put("org.apache.commons.imaging.icc.IccProfileParser", c181);
		c181_texts(c181);

		CNode n117 = m_g.createNode("org/apache/commons/imaging/icc/IccTag.java");
		n117.setMapping("icc");
		n117.setClustering("icc", "Initial");
		dmClass c182 = new dmClass("org.apache.commons.imaging.icc.IccTag");
		n117.addClass(c182);
		m_classes.put("org.apache.commons.imaging.icc.IccTag", c182);
		c182_texts(c182);

		CNode n118 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserIndexed.java");
		n118.setMapping("psd");
		n118.setClustering("psd", "Initial");
		dmClass c183 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed");
		n118.addClass(c183);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed", c183);
		c183_texts(c183);

		CNode n119 = m_g.createNode("org/apache/commons/imaging/ColorTools.java");
		n119.setMapping("base");
		dmClass c184 = new dmClass("org.apache.commons.imaging.ColorTools");
		n119.addClass(c184);
		m_classes.put("org.apache.commons.imaging.ColorTools", c184);
		c184_texts(c184);

		CNode n120 = m_g.createNode("org/apache/commons/imaging/formats/png/PngText.java");
		n120.setMapping("png");
		n120.setClustering("png", "Initial");
		dmClass c185 = new dmClass("org.apache.commons.imaging.formats.png.PngText$Text");
		n120.addClass(c185);
		m_classes.put("org.apache.commons.imaging.formats.png.PngText$Text", c185);
		c185_texts(c185);
		dmClass c186 = new dmClass("org.apache.commons.imaging.formats.png.PngText");
		n120.addClass(c186);
		m_classes.put("org.apache.commons.imaging.formats.png.PngText", c186);
		c186_texts(c186);
		dmClass c187 = new dmClass("org.apache.commons.imaging.formats.png.PngText$Itxt");
		n120.addClass(c187);
		m_classes.put("org.apache.commons.imaging.formats.png.PngText$Itxt", c187);
		c187_texts(c187);
		dmClass c188 = new dmClass("org.apache.commons.imaging.formats.png.PngText$Ztxt");
		n120.addClass(c188);
		m_classes.put("org.apache.commons.imaging.formats.png.PngText$Ztxt", c188);
		c188_texts(c188);

		CNode n121 = m_g.createNode("org/apache/commons/imaging/formats/psd/ImageResourceBlock.java");
		n121.setMapping("psd");
		n121.setClustering("psd", "Initial");
		dmClass c189 = new dmClass("org.apache.commons.imaging.formats.psd.ImageResourceBlock");
		n121.addClass(c189);
		m_classes.put("org.apache.commons.imaging.formats.psd.ImageResourceBlock", c189);
		c189_texts(c189);

		CNode n122 = m_g.createNode("org/apache/commons/imaging/common/mylzw/MyLzwCompressor.java");
		n122.setMapping("common");
		n122.setClustering("common", "Initial");
		dmClass c190 = new dmClass("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray");
		n122.addClass(c190);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray", c190);
		c190_texts(c190);
		dmClass c191 = new dmClass("org.apache.commons.imaging.common.mylzw.MyLzwCompressor");
		n122.addClass(c191);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", c191);
		c191_texts(c191);
		dmClass c192 = new dmClass("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener");
		n122.addClass(c192);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener", c192);
		c192_texts(c192);

		CNode n123 = m_g.createNode("byte.java");
		dmClass c193 = new dmClass("byte");
		n123.addClass(c193);
		m_classes.put("byte", c193);

		CNode n124 = m_g.createNode("org/apache/commons/imaging/palette/Palette.java");
		n124.setMapping("palette");
		dmClass c194 = new dmClass("org.apache.commons.imaging.palette.Palette");
		n124.addClass(c194);
		m_classes.put("org.apache.commons.imaging.palette.Palette", c194);
		c194_texts(c194);

		CNode n125 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcTypes.java");
		n125.setMapping("jpeg");
		dmClass c195 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes");
		n125.addClass(c195);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes", c195);
		c195_texts(c195);
		dmClass c196 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes$1");
		n125.addClass(c196);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes$1", c196);
		c196_texts(c196);

		CNode n126 = m_g.createNode("java/nio/charset/StandardCharsets.java");
		dmClass c197 = new dmClass("java.nio.charset.StandardCharsets");
		n126.addClass(c197);
		m_classes.put("java.nio.charset.StandardCharsets", c197);

		CNode n127 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/HuffmanTreeException.java");
		n127.setMapping("common");
		n127.setClustering("common", "Initial");
		dmClass c198 = new dmClass("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException");
		n127.addClass(c198);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException", c198);
		c198_texts(c198);

		CNode n128 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java");
		n128.setMapping("jpeg");
		n128.setClustering("jpeg", "Initial");
		dmClass c199 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment");
		n128.addClass(c199);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment", c199);
		c199_texts(c199);
		dmClass c200 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable");
		n128.addClass(c200);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable", c200);
		c200_texts(c200);

		CNode n129 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffOutputSet.java");
		n129.setMapping("tiff");
		dmClass c201 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet");
		n129.addClass(c201);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", c201);
		c201_texts(c201);

		CNode n130 = m_g.createNode("org/apache/commons/imaging/palette/QuantizedPalette.java");
		n130.setMapping("palette");
		n130.setClustering("palette", "Initial");
		dmClass c202 = new dmClass("org.apache.commons.imaging.palette.QuantizedPalette");
		n130.addClass(c202);
		m_classes.put("org.apache.commons.imaging.palette.QuantizedPalette", c202);
		c202_texts(c202);

		CNode n131 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/GdalLibraryTagConstants.java");
		n131.setMapping("tiff");
		n131.setClustering("tiff", "Initial");
		dmClass c203 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants");
		n131.addClass(c203);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants", c203);
		c203_texts(c203);

		CNode n132 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpWriter.java");
		n132.setMapping("bmp");
		n132.setClustering("bmp", "Initial");
		dmClass c204 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpWriter");
		n132.addClass(c204);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpWriter", c204);
		c204_texts(c204);

		CNode n133 = m_g.createNode("org/apache/commons/imaging/icc/IccConstants.java");
		n133.setMapping("icc");
		n133.setClustering("icc", "Initial");
		dmClass c205 = new dmClass("org.apache.commons.imaging.icc.IccConstants");
		n133.addClass(c205);
		m_classes.put("org.apache.commons.imaging.icc.IccConstants", c205);
		c205_texts(c205);

		CNode n134 = m_g.createNode("org/apache/commons/imaging/common/RationalNumber.java");
		n134.setMapping("common");
		dmClass c206 = new dmClass("org.apache.commons.imaging.common.RationalNumber$Option");
		n134.addClass(c206);
		m_classes.put("org.apache.commons.imaging.common.RationalNumber$Option", c206);
		c206_texts(c206);
		dmClass c207 = new dmClass("org.apache.commons.imaging.common.RationalNumber");
		n134.addClass(c207);
		m_classes.put("org.apache.commons.imaging.common.RationalNumber", c207);
		c207_texts(c207);

		CNode n135 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/HuffmanTree.java");
		n135.setMapping("common");
		dmClass c208 = new dmClass("org.apache.commons.imaging.common.itu_t4.HuffmanTree");
		n135.addClass(c208);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.HuffmanTree", c208);
		c208_texts(c208);
		dmClass c209 = new dmClass("org.apache.commons.imaging.common.itu_t4.HuffmanTree$1");
		n135.addClass(c209);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.HuffmanTree$1", c209);
		c209_texts(c209);
		dmClass c210 = new dmClass("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node");
		n135.addClass(c210);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node", c210);
		c210_texts(c210);

		CNode n136 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSLongs.java");
		n136.setMapping("tiff");
		n136.setClustering("tiff", "Initial");
		dmClass c211 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs");
		n136.addClass(c211);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs", c211);
		c211_texts(c211);

		CNode n137 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAscii.java");
		n137.setMapping("tiff");
		n137.setClustering("tiff", "Initial");
		dmClass c212 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii");
		n137.addClass(c212);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii", c212);
		c212_texts(c212);

		CNode n138 = m_g.createNode("org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterIndexedColor.java");
		n138.setMapping("png");
		dmClass c213 = new dmClass("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor");
		n138.addClass(c213);
		m_classes.put("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor", c213);
		c213_texts(c213);

		CNode n139 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffImageMetadata.java");
		n139.setMapping("tiff");
		n139.setClustering("tiff", "Initial");
		dmClass c214 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo");
		n139.addClass(c214);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo", c214);
		c214_texts(c214);
		dmClass c215 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory");
		n139.addClass(c215);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory", c215);
		c215_texts(c215);
		dmClass c216 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem");
		n139.addClass(c216);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem", c216);
		c216_texts(c216);
		dmClass c217 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageMetadata");
		n139.addClass(c217);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageMetadata", c217);
		c217_texts(c217);

		CNode n140 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoUndefineds.java");
		n140.setMapping("tiff");
		n140.setClustering("tiff", "Initial");
		dmClass c218 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds");
		n140.addClass(c218);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds", c218);
		c218_texts(c218);

		CNode n141 = m_g.createNode("java/text/NumberFormat.java");
		dmClass c219 = new dmClass("java.text.NumberFormat");
		n141.addClass(c219);
		m_classes.put("java.text.NumberFormat", c219);

		CNode n142 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffImageData.java");
		n142.setMapping("tiff");
		n142.setClustering("tiff", "Initial");
		dmClass c220 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles");
		n142.addClass(c220);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles", c220);
		c220_texts(c220);
		dmClass c221 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips");
		n142.addClass(c221);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", c221);
		c221_texts(c221);
		dmClass c222 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageData");
		n142.addClass(c222);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageData", c222);
		c222_texts(c222);
		dmClass c223 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageData$Data");
		n142.addClass(c223);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageData$Data", c223);
		c223_texts(c223);
		dmClass c224 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData");
		n142.addClass(c224);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData", c224);
		c224_texts(c224);

		CNode n143 = m_g.createNode("org/apache/commons/imaging/color/ColorHsl.java");
		n143.setMapping("color");
		dmClass c225 = new dmClass("org.apache.commons.imaging.color.ColorHsl");
		n143.addClass(c225);
		m_classes.put("org.apache.commons.imaging.color.ColorHsl", c225);
		c225_texts(c225);

		CNode n144 = m_g.createNode("java/awt/image/BandedSampleModel.java");
		dmClass c226 = new dmClass("java.awt.image.BandedSampleModel");
		n144.addClass(c226);
		m_classes.put("java.awt.image.BandedSampleModel", c226);

		CNode n145 = m_g.createNode("org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterGrayscale.java");
		n145.setMapping("png");
		dmClass c227 = new dmClass("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale");
		n145.addClass(c227);
		m_classes.put("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale", c227);
		c227_texts(c227);

		CNode n146 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PpmFileInfo.java");
		n146.setMapping("pnm");
		dmClass c228 = new dmClass("org.apache.commons.imaging.formats.pnm.PpmFileInfo");
		n146.addClass(c228);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PpmFileInfo", c228);
		c228_texts(c228);

		CNode n147 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoUndefined.java");
		n147.setMapping("tiff");
		dmClass c229 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined");
		n147.addClass(c229);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined", c229);
		c229_texts(c229);

		CNode n148 = m_g.createNode("org/apache/commons/imaging/formats/png/ScanExpediterSimple.java");
		n148.setMapping("png");
		n148.setClustering("png", "Initial");
		dmClass c230 = new dmClass("org.apache.commons.imaging.formats.png.ScanExpediterSimple");
		n148.addClass(c230);
		m_classes.put("org.apache.commons.imaging.formats.png.ScanExpediterSimple", c230);
		c230_texts(c230);

		CNode n149 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/JpegImageMetadata.java");
		n149.setMapping("jpeg");
		n149.setClustering("jpeg", "Initial");
		dmClass c231 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata");
		n149.addClass(c231);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata", c231);
		c231_texts(c231);

		CNode n150 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/UnknownSegment.java");
		n150.setMapping("jpeg");
		n150.setClustering("jpeg", "Initial");
		dmClass c232 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment");
		n150.addClass(c232);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment", c232);
		c232_texts(c232);

		CNode n151 = m_g.createNode("org/apache/commons/imaging/formats/pnm/WhiteSpaceReader.java");
		n151.setMapping("pnm");
		dmClass c233 = new dmClass("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader");
		n151.addClass(c233);
		m_classes.put("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", c233);
		c233_texts(c233);

		CNode n152 = m_g.createNode("java/io/StringWriter.java");
		dmClass c234 = new dmClass("java.io.StringWriter");
		n152.addClass(c234);
		m_classes.put("java.io.StringWriter", c234);

		CNode n153 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PnmConstants.java");
		n153.setMapping("pnm");
		n153.setClustering("pnm", "Initial");
		dmClass c235 = new dmClass("org.apache.commons.imaging.formats.pnm.PnmConstants");
		n153.addClass(c235);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PnmConstants", c235);
		c235_texts(c235);

		CNode n154 = m_g.createNode("org/apache/commons/imaging/common/ByteConversions.java");
		n154.setMapping("common");
		n154.setClustering("common", "Initial");
		dmClass c236 = new dmClass("org.apache.commons.imaging.common.ByteConversions");
		n154.addClass(c236);
		m_classes.put("org.apache.commons.imaging.common.ByteConversions", c236);
		c236_texts(c236);

		CNode n155 = m_g.createNode("org/apache/commons/imaging/color/ColorHsv.java");
		n155.setMapping("color");
		n155.setClustering("color", "Initial");
		dmClass c237 = new dmClass("org.apache.commons.imaging.color.ColorHsv");
		n155.addClass(c237);
		m_classes.put("org.apache.commons.imaging.color.ColorHsv", c237);
		c237_texts(c237);

		CNode n156 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoShortOrLong.java");
		n156.setMapping("tiff");
		n156.setClustering("tiff", "Initial");
		dmClass c238 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong");
		n156.addClass(c238);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong", c238);
		c238_texts(c238);

		CNode n157 = m_g.createNode("org/apache/commons/imaging/common/SimpleBufferedImageFactory.java");
		n157.setMapping("common");
		n157.setClustering("common", "Initial");
		dmClass c239 = new dmClass("org.apache.commons.imaging.common.SimpleBufferedImageFactory");
		n157.addClass(c239);
		m_classes.put("org.apache.commons.imaging.common.SimpleBufferedImageFactory", c239);
		c239_texts(c239);

		CNode n158 = m_g.createNode("org/apache/commons/imaging/formats/gif/DisposalMethod.java");
		n158.setMapping("gif");
		n158.setClustering("gif", "Initial");
		dmClass c240 = new dmClass("org.apache.commons.imaging.formats.gif.DisposalMethod");
		n158.addClass(c240);
		m_classes.put("org.apache.commons.imaging.formats.gif.DisposalMethod", c240);
		c240_texts(c240);

		CNode n159 = m_g.createNode("org/apache/commons/imaging/common/mylzw/MyLzwDecompressor.java");
		n159.setMapping("common");
		n159.setClustering("common", "Initial");
		dmClass c241 = new dmClass("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener");
		n159.addClass(c241);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener", c241);
		c241_texts(c241);
		dmClass c242 = new dmClass("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor");
		n159.addClass(c242);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor", c242);
		c242_texts(c242);

		CNode n160 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffImageParser.java");
		n160.setMapping("tiff");
		n160.setClustering("tiff", "Initial");
		dmClass c243 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffImageParser");
		n160.addClass(c243);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffImageParser", c243);
		c243_texts(c243);

		CNode n161 = m_g.createNode("org/apache/commons/imaging/PixelDensity.java");
		n161.setMapping("base");
		n161.setClustering("base", "Initial");
		dmClass c244 = new dmClass("org.apache.commons.imaging.PixelDensity");
		n161.addClass(c244);
		m_classes.put("org.apache.commons.imaging.PixelDensity", c244);
		c244_texts(c244);

		CNode n162 = m_g.createNode("org/apache/commons/imaging/common/BinaryFileParser.java");
		n162.setMapping("common");
		n162.setClustering("common", "Initial");
		dmClass c245 = new dmClass("org.apache.commons.imaging.common.BinaryFileParser");
		n162.addClass(c245);
		m_classes.put("org.apache.commons.imaging.common.BinaryFileParser", c245);
		c245_texts(c245);

		CNode n163 = m_g.createNode("org/apache/commons/imaging/ImageInfo.java");
		n163.setMapping("base");
		dmClass c246 = new dmClass("org.apache.commons.imaging.ImageInfo");
		n163.addClass(c246);
		m_classes.put("org.apache.commons.imaging.ImageInfo", c246);
		c246_texts(c246);
		dmClass c247 = new dmClass("org.apache.commons.imaging.ImageInfo$ColorType");
		n163.addClass(c247);
		m_classes.put("org.apache.commons.imaging.ImageInfo$ColorType", c247);
		c247_texts(c247);
		dmClass c248 = new dmClass("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm");
		n163.addClass(c248);
		m_classes.put("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm", c248);
		c248_texts(c248);

		CNode n164 = m_g.createNode("java/io/BufferedReader.java");
		dmClass c249 = new dmClass("java.io.BufferedReader");
		n164.addClass(c249);
		m_classes.put("java.io.BufferedReader", c249);

		CNode n165 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffRasterData.java");
		n165.setMapping("tiff");
		n165.setClustering("tiff", "Initial");
		dmClass c250 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffRasterData");
		n165.addClass(c250);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffRasterData", c250);
		c250_texts(c250);

		CNode n166 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkScal.java");
		n166.setMapping("png");
		n166.setClustering("png", "Initial");
		dmClass c251 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkScal");
		n166.addClass(c251);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkScal", c251);
		c251_texts(c251);

		CNode n167 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoAsciiOrRational.java");
		n167.setMapping("tiff");
		n167.setClustering("tiff", "Initial");
		dmClass c252 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational");
		n167.addClass(c252);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational", c252);
		c252_texts(c252);

		CNode n168 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoBytes.java");
		n168.setMapping("tiff");
		n168.setClustering("tiff", "Initial");
		dmClass c253 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes");
		n168.addClass(c253);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes", c253);
		c253_texts(c253);

		CNode n169 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeLong.java");
		n169.setMapping("tiff");
		n169.setClustering("tiff", "Initial");
		dmClass c254 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong");
		n169.addClass(c254);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", c254);
		c254_texts(c254);

		CNode n170 = m_g.createNode("java/awt/RenderingHints.java");
		dmClass c255 = new dmClass("java.awt.RenderingHints");
		n170.addClass(c255);
		m_classes.put("java.awt.RenderingHints", c255);

		CNode n171 = m_g.createNode("java/awt/Point.java");
		dmClass c256 = new dmClass("java.awt.Point");
		n171.addClass(c256);
		m_classes.put("java.awt.Point", c256);

		CNode n172 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterPaeth.java");
		n172.setMapping("png");
		dmClass c257 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth");
		n172.addClass(c257);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth", c257);
		c257_texts(c257);

		CNode n173 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterUp.java");
		n173.setMapping("png");
		n173.setClustering("png", "Initial");
		dmClass c258 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp");
		n173.addClass(c258);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp", c258);
		c258_texts(c258);

		CNode n174 = m_g.createNode("org/apache/commons/imaging/icc/CachingInputStream.java");
		n174.setMapping("icc");
		dmClass c259 = new dmClass("org.apache.commons.imaging.icc.CachingInputStream");
		n174.addClass(c259);
		m_classes.put("org.apache.commons.imaging.icc.CachingInputStream", c259);
		c259_texts(c259);

		CNode n175 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossy.java");
		n175.setMapping("tiff");
		n175.setClustering("tiff", "Initial");
		dmClass c260 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy");
		n175.addClass(c260);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy", c260);
		c260_texts(c260);

		CNode n176 = m_g.createNode("org/apache/commons/imaging/formats/psd/PsdImageParser.java");
		n176.setMapping("psd");
		n176.setClustering("psd", "Initial");
		dmClass c261 = new dmClass("org.apache.commons.imaging.formats.psd.PsdImageParser");
		n176.addClass(c261);
		m_classes.put("org.apache.commons.imaging.formats.psd.PsdImageParser", c261);
		c261_texts(c261);

		CNode n177 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcType.java");
		n177.setMapping("jpeg");
		dmClass c262 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcType");
		n177.addClass(c262);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcType", c262);
		c262_texts(c262);

		CNode n178 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoByteOrShort.java");
		n178.setMapping("tiff");
		n178.setClustering("tiff", "Initial");
		dmClass c263 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort");
		n178.addClass(c263);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort", c263);
		c263_texts(c263);

		CNode n179 = m_g.createNode("java/text/DateFormat.java");
		dmClass c264 = new dmClass("java.text.DateFormat");
		n179.addClass(c264);
		m_classes.put("java.text.DateFormat", c264);

		CNode n180 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoUnknown.java");
		n180.setMapping("tiff");
		n180.setClustering("tiff", "Initial");
		dmClass c265 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown");
		n180.addClass(c265);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown", c265);
		c265_texts(c265);

		CNode n181 = m_g.createNode("org/apache/commons/imaging/formats/png/ChunkType.java");
		n181.setMapping("png");
		dmClass c266 = new dmClass("org.apache.commons.imaging.formats.png.ChunkType");
		n181.addClass(c266);
		m_classes.put("org.apache.commons.imaging.formats.png.ChunkType", c266);
		c266_texts(c266);

		CNode n182 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/TiffEpTagConstants.java");
		n182.setMapping("tiff");
		n182.setClustering("tiff", "Initial");
		dmClass c267 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants");
		n182.addClass(c267);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants", c267);
		c267_texts(c267);

		CNode n183 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PhotometricInterpreterFloat.java");
		n183.setMapping("tiff");
		dmClass c268 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat");
		n183.addClass(c268);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat", c268);
		c268_texts(c268);

		CNode n184 = m_g.createNode("java/awt/image/ComponentColorModel.java");
		dmClass c269 = new dmClass("java.awt.image.ComponentColorModel");
		n184.addClass(c269);
		m_classes.put("java.awt.image.ComponentColorModel", c269);

		CNode n185 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSRational.java");
		n185.setMapping("tiff");
		n185.setClustering("tiff", "Initial");
		dmClass c270 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational");
		n185.addClass(c270);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational", c270);
		c270_texts(c270);

		CNode n186 = m_g.createNode("java/awt/Dimension.java");
		dmClass c271 = new dmClass("java.awt.Dimension");
		n186.addClass(c271);
		m_classes.put("java.awt.Dimension", c271);

		CNode n187 = m_g.createNode("org/apache/commons/imaging/formats/png/GammaCorrection.java");
		n187.setMapping("png");
		dmClass c272 = new dmClass("org.apache.commons.imaging.formats.png.GammaCorrection");
		n187.addClass(c272);
		m_classes.put("org.apache.commons.imaging.formats.png.GammaCorrection", c272);
		c272_texts(c272);

		CNode n188 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpWriterPalette.java");
		n188.setMapping("bmp");
		n188.setClustering("bmp", "Initial");
		dmClass c273 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpWriterPalette");
		n188.addClass(c273);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpWriterPalette", c273);
		c273_texts(c273);

		CNode n189 = m_g.createNode("java/io/UnsupportedEncodingException.java");
		dmClass c274 = new dmClass("java.io.UnsupportedEncodingException");
		n189.addClass(c274);
		m_classes.put("java.io.UnsupportedEncodingException", c274);

		CNode n190 = m_g.createNode("java/awt/image/DataBuffer.java");
		dmClass c275 = new dmClass("java.awt.image.DataBuffer");
		n190.addClass(c275);
		m_classes.put("java.awt.image.DataBuffer", c275);

		CNode n191 = m_g.createNode("java/awt/Rectangle.java");
		dmClass c276 = new dmClass("java.awt.Rectangle");
		n191.addClass(c276);
		m_classes.put("java.awt.Rectangle", c276);

		CNode n192 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PgmFileInfo.java");
		n192.setMapping("pnm");
		n192.setClustering("pnm", "Initial");
		dmClass c277 = new dmClass("org.apache.commons.imaging.formats.pnm.PgmFileInfo");
		n192.addClass(c277);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PgmFileInfo", c277);
		c277_texts(c277);

		CNode n193 = m_g.createNode("org/apache/commons/imaging/color/ColorHunterLab.java");
		n193.setMapping("color");
		n193.setClustering("color", "Initial");
		dmClass c278 = new dmClass("org.apache.commons.imaging.color.ColorHunterLab");
		n193.addClass(c278);
		m_classes.put("org.apache.commons.imaging.color.ColorHunterLab", c278);
		c278_texts(c278);

		CNode n194 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterSub.java");
		n194.setMapping("png");
		n194.setClustering("png", "Initial");
		dmClass c279 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub");
		n194.addClass(c279);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub", c279);
		c279_texts(c279);

		CNode n195 = m_g.createNode("java/awt/color/ColorSpace.java");
		dmClass c280 = new dmClass("java.awt.color.ColorSpace");
		n195.addClass(c280);
		m_classes.put("java.awt.color.ColorSpace", c280);

		CNode n196 = m_g.createNode("org/apache/commons/imaging/palette/ColorGroupCut.java");
		n196.setMapping("palette");
		n196.setClustering("palette", "Initial");
		dmClass c281 = new dmClass("org.apache.commons.imaging.palette.ColorGroupCut");
		n196.addClass(c281);
		m_classes.put("org.apache.commons.imaging.palette.ColorGroupCut", c281);
		c281_texts(c281);

		CNode n197 = m_g.createNode("org/apache/commons/imaging/formats/gif/GraphicControlExtension.java");
		n197.setMapping("gif");
		dmClass c282 = new dmClass("org.apache.commons.imaging.formats.gif.GraphicControlExtension");
		n197.addClass(c282);
		m_classes.put("org.apache.commons.imaging.formats.gif.GraphicControlExtension", c282);
		c282_texts(c282);

		CNode n198 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/ZigZag.java");
		n198.setMapping("jpeg");
		n198.setClustering("jpeg", "Initial");
		dmClass c283 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.ZigZag");
		n198.addClass(c283);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.ZigZag", c283);
		c283_texts(c283);

		CNode n199 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/Rfc2301TagConstants.java");
		n199.setMapping("tiff");
		dmClass c284 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants");
		n199.addClass(c284);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants", c284);
		c284_texts(c284);
		nextNodes_1();
	}
	public void nextNodes_1() {

		CNode n200 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/BitArrayOutputStream.java");
		n200.setMapping("common");
		n200.setClustering("common", "Initial");
		dmClass c285 = new dmClass("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream");
		n200.addClass(c285);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream", c285);
		c285_texts(c285);

		CNode n201 = m_g.createNode("java/io/OutputStream.java");
		dmClass c286 = new dmClass("java.io.OutputStream");
		n201.addClass(c286);
		m_classes.put("java.io.OutputStream", c286);

		CNode n202 = m_g.createNode("org/apache/commons/imaging/common/BinaryConstant.java");
		n202.setMapping("common");
		n202.setClustering("common", "Initial");
		dmClass c287 = new dmClass("org.apache.commons.imaging.common.BinaryConstant");
		n202.addClass(c287);
		m_classes.put("org.apache.commons.imaging.common.BinaryConstant", c287);
		c287_texts(c287);

		CNode n203 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/App2Segment.java");
		n203.setMapping("jpeg");
		n203.setClustering("jpeg", "Initial");
		dmClass c288 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.App2Segment");
		n203.addClass(c288);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.App2Segment", c288);
		c288_texts(c288);

		CNode n204 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterAverage.java");
		n204.setMapping("png");
		n204.setClustering("png", "Initial");
		dmClass c289 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage");
		n204.addClass(c289);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage", c289);
		c289_texts(c289);

		CNode n205 = m_g.createNode("org/apache/commons/imaging/formats/psd/ImageResourceType.java");
		n205.setMapping("psd");
		n205.setClustering("psd", "Initial");
		dmClass c290 = new dmClass("org.apache.commons.imaging.formats.psd.ImageResourceType");
		n205.addClass(c290);
		m_classes.put("org.apache.commons.imaging.formats.psd.ImageResourceType", c290);
		c290_texts(c290);

		CNode n206 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/MicrosoftHdPhotoTagConstants.java");
		n206.setMapping("tiff");
		n206.setClustering("tiff", "Initial");
		dmClass c291 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants");
		n206.addClass(c291);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants", c291);
		c291_texts(c291);

		CNode n207 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffContents.java");
		n207.setMapping("tiff");
		dmClass c292 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffContents");
		n207.addClass(c292);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffContents", c292);
		c292_texts(c292);

		CNode n208 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/ImageDataOffsets.java");
		n208.setMapping("tiff");
		n208.setClustering("tiff", "Initial");
		dmClass c293 = new dmClass("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets");
		n208.addClass(c293);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets", c293);
		c293_texts(c293);

		CNode n209 = m_g.createNode("org/apache/commons/imaging/color/ColorCieLab.java");
		n209.setMapping("color");
		dmClass c294 = new dmClass("org.apache.commons.imaging.color.ColorCieLab");
		n209.addClass(c294);
		m_classes.put("org.apache.commons.imaging.color.ColorCieLab", c294);
		c294_texts(c294);

		CNode n210 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/ComSegment.java");
		n210.setMapping("jpeg");
		n210.setClustering("jpeg", "Initial");
		dmClass c295 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.ComSegment");
		n210.addClass(c295);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.ComSegment", c295);
		c295_texts(c295);

		CNode n211 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoShorts.java");
		n211.setMapping("tiff");
		n211.setClustering("tiff", "Initial");
		dmClass c296 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts");
		n211.addClass(c296);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts", c296);
		c296_texts(c296);

		CNode n212 = m_g.createNode("java/io/Closeable.java");
		dmClass c297 = new dmClass("java.io.Closeable");
		n212.addClass(c297);
		m_classes.put("java.io.Closeable", c297);

		CNode n213 = m_g.createNode("java/io/InputStream.java");
		dmClass c298 = new dmClass("java.io.InputStream");
		n213.addClass(c298);
		m_classes.put("java.io.InputStream", c298);

		CNode n214 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoRationals.java");
		n214.setMapping("tiff");
		n214.setClustering("tiff", "Initial");
		dmClass c299 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals");
		n214.addClass(c299);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals", c299);
		c299_texts(c299);

		CNode n215 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/Tiff4TagConstants.java");
		n215.setMapping("tiff");
		dmClass c300 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants");
		n215.addClass(c300);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants", c300);
		c300_texts(c300);

		CNode n216 = m_g.createNode("java/io/PushbackInputStream.java");
		dmClass c301 = new dmClass("java.io.PushbackInputStream");
		n216.addClass(c301);
		m_classes.put("java.io.PushbackInputStream", c301);

		CNode n217 = m_g.createNode("org/apache/commons/imaging/formats/tiff/datareaders/BitInputStream.java");
		n217.setMapping("tiff");
		n217.setClustering("tiff", "Initial");
		dmClass c302 = new dmClass("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream");
		n217.addClass(c302);
		m_classes.put("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", c302);
		c302_texts(c302);

		CNode n218 = m_g.createNode("org/apache/commons/imaging/palette/PaletteFactory.java");
		n218.setMapping("palette");
		n218.setClustering("palette", "Initial");
		dmClass c303 = new dmClass("org.apache.commons.imaging.palette.PaletteFactory");
		n218.addClass(c303);
		m_classes.put("org.apache.commons.imaging.palette.PaletteFactory", c303);
		c303_texts(c303);
		dmClass c304 = new dmClass("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate");
		n218.addClass(c304);
		m_classes.put("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate", c304);
		c304_texts(c304);

		CNode n219 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffField.java");
		n219.setMapping("tiff");
		n219.setClustering("tiff", "Initial");
		dmClass c305 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffField");
		n219.addClass(c305);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffField", c305);
		c305_texts(c305);
		dmClass c306 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
		n219.addClass(c306);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", c306);
		c306_texts(c306);

		CNode n220 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/HylaFaxTagConstants.java");
		n220.setMapping("tiff");
		n220.setClustering("tiff", "Initial");
		dmClass c307 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants");
		n220.addClass(c307);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants", c307);
		c307_texts(c307);

		CNode n221 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/JfifSegment.java");
		n221.setMapping("jpeg");
		n221.setClustering("jpeg", "Initial");
		dmClass c308 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment");
		n221.addClass(c308);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment", c308);
		c308_texts(c308);

		CNode n222 = m_g.createNode("org/apache/commons/imaging/formats/dcx/DcxImageParser.java");
		n222.setMapping("dcx");
		n222.setClustering("dcx", "Initial");
		dmClass c309 = new dmClass("org.apache.commons.imaging.formats.dcx.DcxImageParser");
		n222.addClass(c309);
		m_classes.put("org.apache.commons.imaging.formats.dcx.DcxImageParser", c309);
		c309_texts(c309);
		dmClass c310 = new dmClass("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader");
		n222.addClass(c310);
		m_classes.put("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader", c310);
		c310_texts(c310);

		CNode n223 = m_g.createNode("java/awt/image/ImagingOpException.java");
		dmClass c311 = new dmClass("java.awt.image.ImagingOpException");
		n223.addClass(c311);
		m_classes.put("java.awt.image.ImagingOpException", c311);

		CNode n224 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/GenericSegment.java");
		n224.setMapping("jpeg");
		dmClass c312 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment");
		n224.addClass(c312);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment", c312);
		c312_texts(c312);

		CNode n225 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserLab.java");
		n225.setMapping("psd");
		dmClass c313 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab");
		n225.addClass(c313);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab", c313);
		c313_texts(c313);

		CNode n226 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoDoubles.java");
		n226.setMapping("tiff");
		n226.setClustering("tiff", "Initial");
		dmClass c314 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles");
		n226.addClass(c314);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles", c314);
		c314_texts(c314);

		CNode n227 = m_g.createNode("org/apache/commons/imaging/formats/psd/PsdImageContents.java");
		n227.setMapping("psd");
		n227.setClustering("psd", "Initial");
		dmClass c315 = new dmClass("org.apache.commons.imaging.formats.psd.PsdImageContents");
		n227.addClass(c315);
		m_classes.put("org.apache.commons.imaging.formats.psd.PsdImageContents", c315);
		c315_texts(c315);

		CNode n228 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserBitmap.java");
		n228.setMapping("psd");
		n228.setClustering("psd", "Initial");
		dmClass c316 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap");
		n228.addClass(c316);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap", c316);
		c316_texts(c316);

		CNode n229 = m_g.createNode("org/apache/commons/imaging/color/ColorConversions.java");
		n229.setMapping("color");
		n229.setClustering("color", "Initial");
		dmClass c317 = new dmClass("org.apache.commons.imaging.color.ColorConversions");
		n229.addClass(c317);
		m_classes.put("org.apache.commons.imaging.color.ColorConversions", c317);
		c317_texts(c317);

		CNode n230 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkText.java");
		n230.setMapping("png");
		dmClass c318 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkText");
		n230.addClass(c318);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkText", c318);
		c318_texts(c318);

		CNode n231 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/DngTagConstants.java");
		n231.setMapping("tiff");
		dmClass c319 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
		n231.addClass(c319);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants", c319);
		c319_texts(c319);

		CNode n232 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/AdobePhotoshopTagConstants.java");
		n232.setMapping("tiff");
		n232.setClustering("tiff", "Initial");
		dmClass c320 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants");
		n232.addClass(c320);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants", c320);
		c320_texts(c320);

		CNode n233 = m_g.createNode("org/apache/commons/imaging/palette/MedianCutQuantizer.java");
		n233.setMapping("palette");
		n233.setClustering("palette", "Initial");
		dmClass c321 = new dmClass("org.apache.commons.imaging.palette.MedianCutQuantizer");
		n233.addClass(c321);
		m_classes.put("org.apache.commons.imaging.palette.MedianCutQuantizer", c321);
		c321_texts(c321);

		CNode n234 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffRasterStatistics.java");
		n234.setMapping("tiff");
		n234.setClustering("tiff", "Initial");
		dmClass c322 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics");
		n234.addClass(c322);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics", c322);
		c322_texts(c322);

		CNode n235 = m_g.createNode("org/apache/commons/imaging/color/ColorXyz.java");
		n235.setMapping("color");
		n235.setClustering("color", "Initial");
		dmClass c323 = new dmClass("org.apache.commons.imaging.color.ColorXyz");
		n235.addClass(c323);
		m_classes.put("org.apache.commons.imaging.color.ColorXyz", c323);
		c323_texts(c323);

		CNode n236 = m_g.createNode("org/apache/commons/imaging/palette/LongestAxisMedianCut.java");
		n236.setMapping("palette");
		n236.setClustering("palette", "Initial");
		dmClass c324 = new dmClass("org.apache.commons.imaging.palette.LongestAxisMedianCut$1");
		n236.addClass(c324);
		m_classes.put("org.apache.commons.imaging.palette.LongestAxisMedianCut$1", c324);
		c324_texts(c324);
		dmClass c325 = new dmClass("org.apache.commons.imaging.palette.LongestAxisMedianCut");
		n236.addClass(c325);
		m_classes.put("org.apache.commons.imaging.palette.LongestAxisMedianCut", c325);
		c325_texts(c325);

		CNode n237 = m_g.createNode("long.java");
		dmClass c326 = new dmClass("long");
		n237.addClass(c326);
		m_classes.put("long", c326);

		CNode n238 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/JpegImageParser.java");
		n238.setMapping("jpeg");
		n238.setClustering("jpeg", "Initial");
		dmClass c327 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser");
		n238.addClass(c327);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser", c327);
		c327_texts(c327);
		dmClass c328 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5");
		n238.addClass(c328);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5", c328);
		c328_texts(c328);
		dmClass c329 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4");
		n238.addClass(c329);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4", c329);
		c329_texts(c329);
		dmClass c330 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1");
		n238.addClass(c330);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1", c330);
		c330_texts(c330);
		dmClass c331 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3");
		n238.addClass(c331);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3", c331);
		c331_texts(c331);
		dmClass c332 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2");
		n238.addClass(c332);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2", c332);
		c332_texts(c332);

		CNode n239 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpParser.java");
		n239.setMapping("jpeg");
		n239.setClustering("jpeg", "Initial");
		dmClass c333 = new dmClass("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser");
		n239.addClass(c333);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser", c333);
		c333_texts(c333);

		CNode n240 = m_g.createNode("java/awt/image/Raster.java");
		dmClass c334 = new dmClass("java.awt.image.Raster");
		n240.addClass(c334);
		m_classes.put("java.awt.image.Raster", c334);

		CNode n241 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterRgb.java");
		n241.setMapping("tiff");
		n241.setClustering("tiff", "Initial");
		dmClass c335 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb");
		n241.addClass(c335);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb", c335);
		c335_texts(c335);

		CNode n242 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSRationals.java");
		n242.setMapping("tiff");
		n242.setClustering("tiff", "Initial");
		dmClass c336 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals");
		n242.addClass(c336);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals", c336);
		c336_texts(c336);

		CNode n243 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoLong.java");
		n243.setMapping("tiff");
		n243.setClustering("tiff", "Initial");
		dmClass c337 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong");
		n243.addClass(c337);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong", c337);
		c337_texts(c337);

		CNode n244 = m_g.createNode("org/apache/commons/imaging/common/BasicCParser.java");
		n244.setMapping("common");
		dmClass c338 = new dmClass("org.apache.commons.imaging.common.BasicCParser");
		n244.addClass(c338);
		m_classes.put("org.apache.commons.imaging.common.BasicCParser", c338);
		c338_texts(c338);

		CNode n245 = m_g.createNode("org/apache/commons/imaging/formats/icns/IcnsType.java");
		n245.setMapping("icns");
		dmClass c339 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsType");
		n245.addClass(c339);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsType", c339);
		c339_texts(c339);

		CNode n246 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldType.java");
		n246.setMapping("tiff");
		n246.setClustering("tiff", "Initial");
		dmClass c340 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType");
		n246.addClass(c340);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", c340);
		c340_texts(c340);

		CNode n247 = m_g.createNode("java/io/IOException.java");
		dmClass c341 = new dmClass("java.io.IOException");
		n247.addClass(c341);
		m_classes.put("java.io.IOException", c341);

		CNode n248 = m_g.createNode("java/io/InputStreamReader.java");
		dmClass c342 = new dmClass("java.io.InputStreamReader");
		n248.addClass(c342);
		m_classes.put("java.io.InputStreamReader", c342);

		CNode n249 = m_g.createNode("org/apache/commons/imaging/color/ColorCieLuv.java");
		n249.setMapping("color");
		n249.setClustering("color", "Initial");
		dmClass c343 = new dmClass("org.apache.commons.imaging.color.ColorCieLuv");
		n249.addClass(c343);
		m_classes.put("org.apache.commons.imaging.color.ColorCieLuv", c343);
		c343_texts(c343);

		CNode n250 = m_g.createNode("org/apache/commons/imaging/common/bytesource/ByteSourceFile.java");
		n250.setMapping("common");
		n250.setClustering("common", "Initial");
		dmClass c344 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSourceFile");
		n250.addClass(c344);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSourceFile", c344);
		c344_texts(c344);

		CNode n251 = m_g.createNode("org/apache/commons/imaging/color/ColorCmyk.java");
		n251.setMapping("color");
		n251.setClustering("color", "Initial");
		dmClass c345 = new dmClass("org.apache.commons.imaging.color.ColorCmyk");
		n251.addClass(c345);
		m_classes.put("org.apache.commons.imaging.color.ColorCmyk", c345);
		c345_texts(c345);

		CNode n252 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffOutputItem.java");
		n252.setMapping("tiff");
		n252.setClustering("tiff", "Initial");
		dmClass c346 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value");
		n252.addClass(c346);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value", c346);
		c346_texts(c346);
		dmClass c347 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem");
		n252.addClass(c347);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem", c347);
		c347_texts(c347);

		CNode n253 = m_g.createNode("org/apache/commons/imaging/palette/ColorComponent.java");
		n253.setMapping("palette");
		dmClass c348 = new dmClass("org.apache.commons.imaging.palette.ColorComponent");
		n253.addClass(c348);
		m_classes.put("org.apache.commons.imaging.palette.ColorComponent", c348);
		c348_texts(c348);

		CNode n254 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoLongs.java");
		n254.setMapping("tiff");
		dmClass c349 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs");
		n254.addClass(c349);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs", c349);
		c349_texts(c349);

		CNode n255 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterYCbCr.java");
		n255.setMapping("tiff");
		n255.setClustering("tiff", "Initial");
		dmClass c350 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr");
		n255.addClass(c350);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr", c350);
		c350_texts(c350);

		CNode n256 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeShort.java");
		n256.setMapping("tiff");
		dmClass c351 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort");
		n256.addClass(c351);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort", c351);
		c351_texts(c351);

		CNode n257 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkPlte.java");
		n257.setMapping("png");
		dmClass c352 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte");
		n257.addClass(c352);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", c352);
		c352_texts(c352);

		CNode n258 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkItxt.java");
		n258.setMapping("png");
		n258.setClustering("png", "Initial");
		dmClass c353 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt");
		n258.addClass(c353);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt", c353);
		c353_texts(c353);

		CNode n259 = m_g.createNode("org/apache/commons/imaging/palette/ColorGroup.java");
		n259.setMapping("palette");
		dmClass c354 = new dmClass("org.apache.commons.imaging.palette.ColorGroup");
		n259.addClass(c354);
		m_classes.put("org.apache.commons.imaging.palette.ColorGroup", c354);
		c354_texts(c354);

		CNode n260 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStream.java");
		n260.setMapping("jpeg");
		n260.setClustering("jpeg", "Initial");
		dmClass c355 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream");
		n260.addClass(c355);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream", c355);
		c355_texts(c355);

		CNode n261 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoDouble.java");
		n261.setMapping("tiff");
		dmClass c356 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble");
		n261.addClass(c356);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble", c356);
		c356_texts(c356);

		CNode n262 = m_g.createNode("org/apache/commons/imaging/common/ImageMetadata.java");
		n262.setMapping("common");
		n262.setClustering("common", "Initial");
		dmClass c357 = new dmClass("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem");
		n262.addClass(c357);
		m_classes.put("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem", c357);
		c357_texts(c357);
		dmClass c358 = new dmClass("org.apache.commons.imaging.common.ImageMetadata");
		n262.addClass(c358);
		m_classes.put("org.apache.commons.imaging.common.ImageMetadata", c358);
		c358_texts(c358);

		CNode n263 = m_g.createNode("org/apache/commons/imaging/formats/rgbe/RgbeImageParser.java");
		n263.setMapping("rgbe");
		n263.setClustering("rgbe", "Initial");
		dmClass c359 = new dmClass("org.apache.commons.imaging.formats.rgbe.RgbeImageParser");
		n263.addClass(c359);
		m_classes.put("org.apache.commons.imaging.formats.rgbe.RgbeImageParser", c359);
		c359_texts(c359);

		CNode n264 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngTextChunk.java");
		n264.setMapping("png");
		n264.setClustering("png", "Initial");
		dmClass c360 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngTextChunk");
		n264.addClass(c360);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngTextChunk", c360);
		c360_texts(c360);

		CNode n265 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSShort.java");
		n265.setMapping("tiff");
		n265.setClustering("tiff", "Initial");
		dmClass c361 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort");
		n265.addClass(c361);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort", c361);
		c361_texts(c361);

		CNode n266 = m_g.createNode("org/apache/commons/imaging/common/bytesource/ByteSource.java");
		n266.setMapping("common");
		dmClass c362 = new dmClass("org.apache.commons.imaging.common.bytesource.ByteSource");
		n266.addClass(c362);
		m_classes.put("org.apache.commons.imaging.common.bytesource.ByteSource", c362);
		c362_texts(c362);

		CNode n267 = m_g.createNode("org/apache/commons/imaging/formats/tiff/datareaders/DataReaderTiled.java");
		n267.setMapping("tiff");
		n267.setClustering("tiff", "Initial");
		dmClass c363 = new dmClass("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled");
		n267.addClass(c363);
		m_classes.put("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled", c363);
		c363_texts(c363);

		CNode n268 = m_g.createNode("org/apache/commons/imaging/formats/rgbe/InfoHeaderReader.java");
		n268.setMapping("rgbe");
		n268.setClustering("rgbe", "Initial");
		dmClass c364 = new dmClass("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader");
		n268.addClass(c364);
		m_classes.put("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader", c364);
		c364_texts(c364);

		CNode n269 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffElement.java");
		n269.setMapping("tiff");
		dmClass c365 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement");
		n269.addClass(c365);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement", c365);
		c365_texts(c365);
		dmClass c366 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffElement$Stub");
		n269.addClass(c366);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffElement$Stub", c366);
		c366_texts(c366);
		dmClass c367 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffElement");
		n269.addClass(c367);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffElement", c367);
		c367_texts(c367);

		CNode n270 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/YCbCrConverter.java");
		n270.setMapping("jpeg");
		dmClass c368 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.YCbCrConverter");
		n270.addClass(c368);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.YCbCrConverter", c368);
		c368_texts(c368);

		CNode n271 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifImageParser.java");
		n271.setMapping("gif");
		n271.setClustering("gif", "Initial");
		dmClass c369 = new dmClass("org.apache.commons.imaging.formats.gif.GifImageParser");
		n271.addClass(c369);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifImageParser", c369);
		c369_texts(c369);

		CNode n272 = m_g.createNode("org/apache/commons/imaging/formats/png/FilterType.java");
		n272.setMapping("png");
		n272.setClustering("png", "Initial");
		dmClass c370 = new dmClass("org.apache.commons.imaging.formats.png.FilterType");
		n272.addClass(c370);
		m_classes.put("org.apache.commons.imaging.formats.png.FilterType", c370);
		c370_texts(c370);

		CNode n273 = m_g.createNode("org/apache/commons/imaging/formats/tiff/TiffHeader.java");
		n273.setMapping("tiff");
		dmClass c371 = new dmClass("org.apache.commons.imaging.formats.tiff.TiffHeader");
		n273.addClass(c371);
		m_classes.put("org.apache.commons.imaging.formats.tiff.TiffHeader", c371);
		c371_texts(c371);

		CNode n274 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/App14Segment.java");
		n274.setMapping("jpeg");
		dmClass c372 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.App14Segment");
		n274.addClass(c372);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.App14Segment", c372);
		c372_texts(c372);

		CNode n275 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/Segment.java");
		n275.setMapping("jpeg");
		dmClass c373 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.Segment");
		n275.addClass(c373);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.Segment", c373);
		c373_texts(c373);

		CNode n276 = m_g.createNode("org/apache/commons/imaging/formats/png/PngImageParser.java");
		n276.setMapping("png");
		n276.setClustering("png", "Initial");
		dmClass c374 = new dmClass("org.apache.commons.imaging.formats.png.PngImageParser");
		n276.addClass(c374);
		m_classes.put("org.apache.commons.imaging.formats.png.PngImageParser", c374);
		c374_texts(c374);
		dmClass c375 = new dmClass("org.apache.commons.imaging.formats.png.PngImageParser$1");
		n276.addClass(c375);
		m_classes.put("org.apache.commons.imaging.formats.png.PngImageParser$1", c375);
		c375_texts(c375);

		CNode n277 = m_g.createNode("org/apache/commons/imaging/formats/pcx/RleWriter.java");
		n277.setMapping("pcx");
		n277.setClustering("pcx", "Initial");
		dmClass c376 = new dmClass("org.apache.commons.imaging.formats.pcx.RleWriter");
		n277.addClass(c376);
		m_classes.put("org.apache.commons.imaging.formats.pcx.RleWriter", c376);
		c376_texts(c376);

		CNode n278 = m_g.createNode("org/apache/commons/imaging/formats/png/PhysicalScale.java");
		n278.setMapping("png");
		n278.setClustering("png", "Initial");
		dmClass c377 = new dmClass("org.apache.commons.imaging.formats.png.PhysicalScale");
		n278.addClass(c377);
		m_classes.put("org.apache.commons.imaging.formats.png.PhysicalScale", c377);
		c377_texts(c377);

		CNode n279 = m_g.createNode("org/apache/commons/imaging/palette/ColorCount.java");
		n279.setMapping("palette");
		n279.setClustering("palette", "Initial");
		dmClass c378 = new dmClass("org.apache.commons.imaging.palette.ColorCount");
		n279.addClass(c378);
		m_classes.put("org.apache.commons.imaging.palette.ColorCount", c378);
		c378_texts(c378);

		CNode n280 = m_g.createNode("org/apache/commons/imaging/formats/icns/IcnsImageParser.java");
		n280.setMapping("icns");
		n280.setClustering("icns", "Initial");
		dmClass c379 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader");
		n280.addClass(c379);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader", c379);
		c379_texts(c379);
		dmClass c380 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsImageParser");
		n280.addClass(c380);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsImageParser", c380);
		c380_texts(c380);
		dmClass c381 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement");
		n280.addClass(c381);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement", c381);
		c381_texts(c381);
		dmClass c382 = new dmClass("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents");
		n280.addClass(c382);
		m_classes.put("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents", c382);
		c382_texts(c382);

		CNode n281 = m_g.createNode("org/apache/commons/imaging/common/BinaryOutputStream.java");
		n281.setMapping("common");
		n281.setClustering("common", "Initial");
		dmClass c383 = new dmClass("org.apache.commons.imaging.common.BinaryOutputStream");
		n281.addClass(c383);
		m_classes.put("org.apache.commons.imaging.common.BinaryOutputStream", c383);
		c383_texts(c383);

		CNode n282 = m_g.createNode("org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterNone.java");
		n282.setMapping("png");
		n282.setClustering("png", "Initial");
		dmClass c384 = new dmClass("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone");
		n282.addClass(c384);
		m_classes.put("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone", c384);
		c384_texts(c384);

		CNode n283 = m_g.createNode("org/apache/commons/imaging/formats/png/BitParser.java");
		n283.setMapping("png");
		dmClass c385 = new dmClass("org.apache.commons.imaging.formats.png.BitParser");
		n283.addClass(c385);
		m_classes.put("org.apache.commons.imaging.formats.png.BitParser", c385);
		c385_texts(c385);

		CNode n284 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/MicrosoftTagConstants.java");
		n284.setMapping("tiff");
		n284.setClustering("tiff", "Initial");
		dmClass c386 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants");
		n284.addClass(c386);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants", c386);
		c386_texts(c386);

		CNode n285 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifBlock.java");
		n285.setMapping("gif");
		n285.setClustering("gif", "Initial");
		dmClass c387 = new dmClass("org.apache.commons.imaging.formats.gif.GifBlock");
		n285.addClass(c387);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifBlock", c387);
		c387_texts(c387);

		CNode n286 = m_g.createNode("org/apache/commons/imaging/color/ColorCmy.java");
		n286.setMapping("color");
		n286.setClustering("color", "Initial");
		dmClass c388 = new dmClass("org.apache.commons.imaging.color.ColorCmy");
		n286.addClass(c388);
		m_classes.put("org.apache.commons.imaging.color.ColorCmy", c388);
		c388_texts(c388);

		CNode n287 = m_g.createNode("org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilter.java");
		n287.setMapping("png");
		n287.setClustering("png", "Initial");
		dmClass c389 = new dmClass("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter");
		n287.addClass(c389);
		m_classes.put("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter", c389);
		c389_texts(c389);

		CNode n288 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcTypeLookup.java");
		n288.setMapping("jpeg");
		n288.setClustering("jpeg", "Initial");
		dmClass c390 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup");
		n288.addClass(c390);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup", c390);
		c390_texts(c390);

		CNode n289 = m_g.createNode("java/io/FileInputStream.java");
		dmClass c391 = new dmClass("java.io.FileInputStream");
		n289.addClass(c391);
		m_classes.put("java.io.FileInputStream", c391);

		CNode n290 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java");
		n290.setMapping("common");
		dmClass c392 = new dmClass("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression");
		n290.addClass(c392);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", c392);
		c392_texts(c392);

		CNode n291 = m_g.createNode("org/apache/commons/imaging/formats/bmp/PixelParser.java");
		n291.setMapping("bmp");
		n291.setClustering("bmp", "Initial");
		dmClass c393 = new dmClass("org.apache.commons.imaging.formats.bmp.PixelParser");
		n291.addClass(c393);
		m_classes.put("org.apache.commons.imaging.formats.bmp.PixelParser", c393);
		c393_texts(c393);

		CNode n292 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PamWriter.java");
		n292.setMapping("pnm");
		n292.setClustering("pnm", "Initial");
		dmClass c394 = new dmClass("org.apache.commons.imaging.formats.pnm.PamWriter");
		n292.addClass(c394);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PamWriter", c394);
		c394_texts(c394);

		CNode n293 = m_g.createNode("org/apache/commons/imaging/common/mylzw/MyBitInputStream.java");
		n293.setMapping("common");
		n293.setClustering("common", "Initial");
		dmClass c395 = new dmClass("org.apache.commons.imaging.common.mylzw.MyBitInputStream");
		n293.addClass(c395);
		m_classes.put("org.apache.commons.imaging.common.mylzw.MyBitInputStream", c395);
		c395_texts(c395);

		CNode n294 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreter.java");
		n294.setMapping("tiff");
		n294.setClustering("tiff", "Initial");
		dmClass c396 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter");
		n294.addClass(c396);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter", c396);
		c396_texts(c396);

		CNode n295 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterCieLab.java");
		n295.setMapping("tiff");
		dmClass c397 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab");
		n295.addClass(c397);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab", c397);
		c397_texts(c397);

		CNode n296 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoRational.java");
		n296.setMapping("tiff");
		n296.setClustering("tiff", "Initial");
		dmClass c398 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational");
		n296.addClass(c398);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational", c398);
		c398_texts(c398);

		CNode n297 = m_g.createNode("short.java");
		dmClass c399 = new dmClass("short");
		n297.addClass(c399);
		m_classes.put("short", c399);

		CNode n298 = m_g.createNode("java/awt/image/WritableRaster.java");
		dmClass c400 = new dmClass("java.awt.image.WritableRaster");
		n298.addClass(c400);
		m_classes.put("java.awt.image.WritableRaster", c400);

		CNode n299 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfo.java");
		n299.setMapping("tiff");
		n299.setClustering("tiff", "Initial");
		dmClass c401 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo");
		n299.addClass(c401);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", c401);
		c401_texts(c401);
		nextNodes_2();
	}
	public void nextNodes_2() {

		CNode n300 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/AliasSketchbookProTagConstants.java");
		n300.setMapping("tiff");
		dmClass c402 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants");
		n300.addClass(c402);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants", c402);
		c402_texts(c402);

		CNode n301 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkGama.java");
		n301.setMapping("png");
		n301.setClustering("png", "Initial");
		dmClass c403 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkGama");
		n301.addClass(c403);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkGama", c403);
		c403_texts(c403);

		CNode n302 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/MolecularDynamicsGelTagConstants.java");
		n302.setMapping("tiff");
		n302.setClustering("tiff", "Initial");
		dmClass c404 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants");
		n302.addClass(c404);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants", c404);
		c404_texts(c404);

		CNode n303 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifHeaderInfo.java");
		n303.setMapping("gif");
		dmClass c405 = new dmClass("org.apache.commons.imaging.formats.gif.GifHeaderInfo");
		n303.addClass(c405);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifHeaderInfo", c405);
		c405_texts(c405);

		CNode n304 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserGrayscale.java");
		n304.setMapping("psd");
		n304.setClustering("psd", "Initial");
		dmClass c406 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale");
		n304.addClass(c406);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale", c406);
		c406_texts(c406);

		CNode n305 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PnmWriter.java");
		n305.setMapping("pnm");
		n305.setClustering("pnm", "Initial");
		dmClass c407 = new dmClass("org.apache.commons.imaging.formats.pnm.PnmWriter");
		n305.addClass(c407);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PnmWriter", c407);
		c407_texts(c407);

		CNode n306 = m_g.createNode("org/apache/commons/imaging/formats/psd/datareaders/DataReader.java");
		n306.setMapping("psd");
		n306.setClustering("psd", "Initial");
		dmClass c408 = new dmClass("org.apache.commons.imaging.formats.psd.datareaders.DataReader");
		n306.addClass(c408);
		m_classes.put("org.apache.commons.imaging.formats.psd.datareaders.DataReader", c408);
		c408_texts(c408);

		CNode n307 = m_g.createNode("org/apache/commons/imaging/ImageParser.java");
		n307.setMapping("base");
		n307.setClustering("base", "Initial");
		dmClass c409 = new dmClass("org.apache.commons.imaging.ImageParser");
		n307.addClass(c409);
		m_classes.put("org.apache.commons.imaging.ImageParser", c409);
		c409_texts(c409);

		CNode n308 = m_g.createNode("org/apache/commons/imaging/formats/bmp/PixelParserRle.java");
		n308.setMapping("bmp");
		n308.setClustering("bmp", "Initial");
		dmClass c410 = new dmClass("org.apache.commons.imaging.formats.bmp.PixelParserRle");
		n308.addClass(c410);
		m_classes.put("org.apache.commons.imaging.formats.bmp.PixelParserRle", c410);
		c410_texts(c410);

		CNode n309 = m_g.createNode("java/io/DataOutputStream.java");
		dmClass c411 = new dmClass("java.io.DataOutputStream");
		n309.addClass(c411);
		m_classes.put("java.io.DataOutputStream", c411);

		CNode n310 = m_g.createNode("org/apache/commons/imaging/formats/bmp/BmpImageParser.java");
		n310.setMapping("bmp");
		n310.setClustering("bmp", "Initial");
		dmClass c412 = new dmClass("org.apache.commons.imaging.formats.bmp.BmpImageParser");
		n310.addClass(c412);
		m_classes.put("org.apache.commons.imaging.formats.bmp.BmpImageParser", c412);
		c412_texts(c412);

		CNode n311 = m_g.createNode("org/apache/commons/imaging/common/PackBits.java");
		n311.setMapping("common");
		n311.setClustering("common", "Initial");
		dmClass c413 = new dmClass("org.apache.commons.imaging.common.PackBits");
		n311.addClass(c413);
		m_classes.put("org.apache.commons.imaging.common.PackBits", c413);
		c413_texts(c413);

		CNode n312 = m_g.createNode("org/apache/commons/imaging/common/BufferedImageFactory.java");
		n312.setMapping("common");
		n312.setClustering("common", "Initial");
		dmClass c414 = new dmClass("org.apache.commons.imaging.common.BufferedImageFactory");
		n312.addClass(c414);
		m_classes.put("org.apache.commons.imaging.common.BufferedImageFactory", c414);
		c414_texts(c414);

		CNode n313 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java");
		n313.setMapping("jpeg");
		n313.setClustering("jpeg", "Initial");
		dmClass c415 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter");
		n313.addClass(c415);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter", c415);
		c415_texts(c415);

		CNode n314 = m_g.createNode("java/awt/image/IndexColorModel.java");
		dmClass c416 = new dmClass("java.awt.image.IndexColorModel");
		n314.addClass(c416);
		m_classes.put("java.awt.image.IndexColorModel", c416);

		CNode n315 = m_g.createNode("java/awt/color/ICC_ColorSpace.java");
		dmClass c417 = new dmClass("java.awt.color.ICC_ColorSpace");
		n315.addClass(c417);
		m_classes.put("java.awt.color.ICC_ColorSpace", c417);

		CNode n316 = m_g.createNode("org/apache/commons/imaging/icc/IccTagTypes.java");
		n316.setMapping("icc");
		n316.setClustering("icc", "Initial");
		dmClass c418 = new dmClass("org.apache.commons.imaging.icc.IccTagTypes");
		n316.addClass(c418);
		m_classes.put("org.apache.commons.imaging.icc.IccTagTypes", c418);
		c418_texts(c418);

		CNode n317 = m_g.createNode("org/apache/commons/imaging/common/itu_t4/BitInputStreamFlexible.java");
		n317.setMapping("common");
		n317.setClustering("common", "Initial");
		dmClass c419 = new dmClass("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible");
		n317.addClass(c419);
		m_classes.put("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible", c419);
		c419_texts(c419);

		CNode n318 = m_g.createNode("java/io/PrintWriter.java");
		dmClass c420 = new dmClass("java.io.PrintWriter");
		n318.addClass(c420);
		m_classes.put("java.io.PrintWriter", c420);

		CNode n319 = m_g.createNode("java/awt/image/DirectColorModel.java");
		dmClass c421 = new dmClass("java.awt.image.DirectColorModel");
		n319.addClass(c421);
		m_classes.put("java.awt.image.DirectColorModel", c421);

		CNode n320 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterPalette.java");
		n320.setMapping("tiff");
		n320.setClustering("tiff", "Initial");
		dmClass c422 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette");
		n320.addClass(c422);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette", c422);
		c422_texts(c422);

		CNode n321 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PbmWriter.java");
		n321.setMapping("pnm");
		n321.setClustering("pnm", "Initial");
		dmClass c423 = new dmClass("org.apache.commons.imaging.formats.pnm.PbmWriter");
		n321.addClass(c423);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PbmWriter", c423);
		c423_texts(c423);

		CNode n322 = m_g.createNode("org/apache/commons/imaging/formats/psd/datareaders/UncompressedDataReader.java");
		n322.setMapping("psd");
		n322.setClustering("psd", "Initial");
		dmClass c424 = new dmClass("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader");
		n322.addClass(c424);
		m_classes.put("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader", c424);
		c424_texts(c424);

		CNode n323 = m_g.createNode("org/apache/commons/imaging/ImageFormat.java");
		n323.setMapping("base");
		n323.setClustering("base", "Initial");
		dmClass c425 = new dmClass("org.apache.commons.imaging.ImageFormat");
		n323.addClass(c425);
		m_classes.put("org.apache.commons.imaging.ImageFormat", c425);
		c425_texts(c425);

		CNode n324 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterCmyk.java");
		n324.setMapping("tiff");
		n324.setClustering("tiff", "Initial");
		dmClass c426 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk");
		n324.addClass(c426);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk", c426);
		c426_texts(c426);

		CNode n325 = m_g.createNode("org/apache/commons/imaging/ImagingConstants.java");
		n325.setMapping("base");
		dmClass c427 = new dmClass("org.apache.commons.imaging.ImagingConstants");
		n325.addClass(c427);
		m_classes.put("org.apache.commons.imaging.ImagingConstants", c427);
		c427_texts(c427);

		CNode n326 = m_g.createNode("org/apache/commons/imaging/formats/bmp/PixelParserSimple.java");
		n326.setMapping("bmp");
		n326.setClustering("bmp", "Initial");
		dmClass c428 = new dmClass("org.apache.commons.imaging.formats.bmp.PixelParserSimple");
		n326.addClass(c428);
		m_classes.put("org.apache.commons.imaging.formats.bmp.PixelParserSimple", c428);
		c428_texts(c428);

		CNode n327 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/ExifTagConstants.java");
		n327.setMapping("tiff");
		dmClass c429 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants");
		n327.addClass(c429);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants", c429);
		c429_texts(c429);

		CNode n328 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserCmyk.java");
		n328.setMapping("psd");
		dmClass c430 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk");
		n328.addClass(c430);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk", c430);
		c430_texts(c430);

		CNode n329 = m_g.createNode("org/apache/commons/imaging/Imaging.java");
		n329.setMapping("base");
		n329.setClustering("base", "Initial");
		dmClass c431 = new dmClass("org.apache.commons.imaging.Imaging");
		n329.addClass(c431);
		m_classes.put("org.apache.commons.imaging.Imaging", c431);
		c431_texts(c431);

		CNode n330 = m_g.createNode("org/apache/commons/imaging/formats/rgbe/RgbeInfo.java");
		n330.setMapping("rgbe");
		n330.setClustering("rgbe", "Initial");
		dmClass c432 = new dmClass("org.apache.commons.imaging.formats.rgbe.RgbeInfo");
		n330.addClass(c432);
		m_classes.put("org.apache.commons.imaging.formats.rgbe.RgbeInfo", c432);
		c432_texts(c432);

		CNode n331 = m_g.createNode("java/text/SimpleDateFormat.java");
		dmClass c433 = new dmClass("java.text.SimpleDateFormat");
		n331.addClass(c433);
		m_classes.put("java.text.SimpleDateFormat", c433);

		CNode n332 = m_g.createNode("java/io/BufferedOutputStream.java");
		dmClass c434 = new dmClass("java.io.BufferedOutputStream");
		n332.addClass(c434);
		m_classes.put("java.io.BufferedOutputStream", c434);

		CNode n333 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java");
		n333.setMapping("tiff");
		n333.setClustering("tiff", "Initial");
		dmClass c435 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory");
		n333.addClass(c435);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory", c435);
		c435_texts(c435);

		CNode n334 = m_g.createNode("org/apache/commons/imaging/formats/gif/GifImageMetadata.java");
		n334.setMapping("gif");
		dmClass c436 = new dmClass("org.apache.commons.imaging.formats.gif.GifImageMetadata");
		n334.addClass(c436);
		m_classes.put("org.apache.commons.imaging.formats.gif.GifImageMetadata", c436);
		c436_texts(c436);

		CNode n335 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterBiLevel.java");
		n335.setMapping("tiff");
		dmClass c437 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel");
		n335.addClass(c437);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel", c437);
		c437_texts(c437);

		CNode n336 = m_g.createNode("org/apache/commons/imaging/icc/IccProfileInfo.java");
		n336.setMapping("icc");
		dmClass c438 = new dmClass("org.apache.commons.imaging.icc.IccProfileInfo");
		n336.addClass(c438);
		m_classes.put("org.apache.commons.imaging.icc.IccProfileInfo", c438);
		c438_texts(c438);

		CNode n337 = m_g.createNode("org/apache/commons/imaging/formats/gif/GenericGifBlock.java");
		n337.setMapping("gif");
		n337.setClustering("gif", "Initial");
		dmClass c439 = new dmClass("org.apache.commons.imaging.formats.gif.GenericGifBlock");
		n337.addClass(c439);
		m_classes.put("org.apache.commons.imaging.formats.gif.GenericGifBlock", c439);
		c439_texts(c439);

		CNode n338 = m_g.createNode("org/apache/commons/imaging/FormatCompliance.java");
		n338.setMapping("base");
		n338.setClustering("base", "Initial");
		dmClass c440 = new dmClass("org.apache.commons.imaging.FormatCompliance");
		n338.addClass(c440);
		m_classes.put("org.apache.commons.imaging.FormatCompliance", c440);
		c440_texts(c440);

		CNode n339 = m_g.createNode("org/apache/commons/imaging/common/FastByteArrayOutputStream.java");
		n339.setMapping("common");
		n339.setClustering("common", "Initial");
		dmClass c441 = new dmClass("org.apache.commons.imaging.common.FastByteArrayOutputStream");
		n339.addClass(c441);
		m_classes.put("org.apache.commons.imaging.common.FastByteArrayOutputStream", c441);
		c441_texts(c441);

		CNode n340 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserRgb.java");
		n340.setMapping("psd");
		n340.setClustering("psd", "Initial");
		dmClass c442 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb");
		n340.addClass(c442);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb", c442);
		c442_texts(c442);

		CNode n341 = m_g.createNode("org/apache/commons/imaging/formats/png/PngCrc.java");
		n341.setMapping("png");
		n341.setClustering("png", "Initial");
		dmClass c443 = new dmClass("org.apache.commons.imaging.formats.png.PngCrc");
		n341.addClass(c443);
		m_classes.put("org.apache.commons.imaging.formats.png.PngCrc", c443);
		c443_texts(c443);

		CNode n342 = m_g.createNode("java/io/FileOutputStream.java");
		dmClass c444 = new dmClass("java.io.FileOutputStream");
		n342.addClass(c444);
		m_classes.put("java.io.FileOutputStream", c444);

		CNode n343 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java");
		n343.setMapping("jpeg");
		n343.setClustering("jpeg", "Initial");
		dmClass c445 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder");
		n343.addClass(c445);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder", c445);
		c445_texts(c445);

		CNode n344 = m_g.createNode("java/io/File.java");
		dmClass c446 = new dmClass("java.io.File");
		n344.addClass(c446);
		m_classes.put("java.io.File", c446);

		CNode n345 = m_g.createNode("org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java");
		n345.setMapping("tiff");
		n345.setClustering("tiff", "Initial");
		dmClass c447 = new dmClass("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader");
		n345.addClass(c447);
		m_classes.put("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", c447);
		c447_texts(c447);

		CNode n346 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoUnknowns.java");
		n346.setMapping("tiff");
		n346.setClustering("tiff", "Initial");
		dmClass c448 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns");
		n346.addClass(c448);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns", c448);
		c448_texts(c448);

		CNode n347 = m_g.createNode("char.java");
		dmClass c449 = new dmClass("char");
		n347.addClass(c449);
		m_classes.put("char", c449);

		CNode n348 = m_g.createNode("org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeByte.java");
		n348.setMapping("tiff");
		dmClass c450 = new dmClass("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte");
		n348.addClass(c450);
		m_classes.put("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", c450);
		c450_texts(c450);

		CNode n349 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcConstants.java");
		n349.setMapping("jpeg");
		dmClass c451 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcConstants");
		n349.addClass(c451);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcConstants", c451);
		c451_texts(c451);

		CNode n350 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/JpegPhotoshopMetadata.java");
		n350.setMapping("jpeg");
		n350.setClustering("jpeg", "Initial");
		dmClass c452 = new dmClass("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata");
		n350.addClass(c452);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata", c452);
		c452_texts(c452);

		CNode n351 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/TiffTagConstants.java");
		n351.setMapping("tiff");
		n351.setClustering("tiff", "Initial");
		dmClass c453 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants");
		n351.addClass(c453);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants", c453);
		c453_texts(c453);

		CNode n352 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/GpsTagConstants.java");
		n352.setMapping("tiff");
		n352.setClustering("tiff", "Initial");
		dmClass c454 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants");
		n352.addClass(c454);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants", c454);
		c454_texts(c454);

		CNode n353 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParser.java");
		n353.setMapping("psd");
		n353.setClustering("psd", "Initial");
		dmClass c455 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParser");
		n353.addClass(c455);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParser", c455);
		c455_texts(c455);

		CNode n354 = m_g.createNode("org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntry.java");
		n354.setMapping("tiff");
		dmClass c456 = new dmClass("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry");
		n354.addClass(c456);
		m_classes.put("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry", c456);
		c456_texts(c456);

		CNode n355 = m_g.createNode("org/apache/commons/imaging/formats/pnm/FileInfo.java");
		n355.setMapping("pnm");
		n355.setClustering("pnm", "Initial");
		dmClass c457 = new dmClass("org.apache.commons.imaging.formats.pnm.FileInfo");
		n355.addClass(c457);
		m_classes.put("org.apache.commons.imaging.formats.pnm.FileInfo", c457);
		c457_texts(c457);

		CNode n356 = m_g.createNode("org/apache/commons/imaging/palette/MedianCut.java");
		n356.setMapping("palette");
		dmClass c458 = new dmClass("org.apache.commons.imaging.palette.MedianCut");
		n356.addClass(c458);
		m_classes.put("org.apache.commons.imaging.palette.MedianCut", c458);
		c458_texts(c458);

		CNode n357 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/OceScanjobTagConstants.java");
		n357.setMapping("tiff");
		dmClass c459 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants");
		n357.addClass(c459);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants", c459);
		c459_texts(c459);

		CNode n358 = m_g.createNode("org/apache/commons/imaging/formats/tiff/constants/TiffConstants.java");
		n358.setMapping("tiff");
		dmClass c460 = new dmClass("org.apache.commons.imaging.formats.tiff.constants.TiffConstants");
		n358.addClass(c460);
		m_classes.put("org.apache.commons.imaging.formats.tiff.constants.TiffConstants", c460);
		c460_texts(c460);

		CNode n359 = m_g.createNode("java/awt/image/BufferedImage.java");
		dmClass c461 = new dmClass("java.awt.image.BufferedImage");
		n359.addClass(c461);
		m_classes.put("java.awt.image.BufferedImage", c461);

		CNode n360 = m_g.createNode("org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java");
		n360.setMapping("tiff");
		n360.setClustering("tiff", "Initial");
		dmClass c462 = new dmClass("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase");
		n360.addClass(c462);
		m_classes.put("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", c462);
		c462_texts(c462);

		CNode n361 = m_g.createNode("org/apache/commons/imaging/formats/psd/dataparsers/DataParserStub.java");
		n361.setMapping("psd");
		n361.setClustering("psd", "Initial");
		dmClass c463 = new dmClass("org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub");
		n361.addClass(c463);
		m_classes.put("org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub", c463);
		c463_texts(c463);

		CNode n362 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoShortOrLongOrRational.java");
		n362.setMapping("tiff");
		n362.setClustering("tiff", "Initial");
		dmClass c464 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational");
		n362.addClass(c464);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational", c464);
		c464_texts(c464);

		CNode n363 = m_g.createNode("org/apache/commons/imaging/formats/png/PngImageInfo.java");
		n363.setMapping("png");
		n363.setClustering("png", "Initial");
		dmClass c465 = new dmClass("org.apache.commons.imaging.formats.png.PngImageInfo");
		n363.addClass(c465);
		m_classes.put("org.apache.commons.imaging.formats.png.PngImageInfo", c465);
		c465_texts(c465);

		CNode n364 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/Dct.java");
		n364.setMapping("jpeg");
		n364.setClustering("jpeg", "Initial");
		dmClass c466 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.Dct");
		n364.addClass(c466);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.Dct", c466);
		c466_texts(c466);

		CNode n365 = m_g.createNode("org/apache/commons/imaging/formats/png/chunks/PngChunkZtxt.java");
		n365.setMapping("png");
		dmClass c467 = new dmClass("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt");
		n365.addClass(c467);
		m_classes.put("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt", c467);
		c467_texts(c467);

		CNode n366 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoAny.java");
		n366.setMapping("tiff");
		n366.setClustering("tiff", "Initial");
		dmClass c468 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny");
		n366.addClass(c468);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny", c468);
		c468_texts(c468);

		CNode n367 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/iptc/IptcRecord.java");
		n367.setMapping("jpeg");
		n367.setClustering("jpeg", "Initial");
		dmClass c469 = new dmClass("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord");
		n367.addClass(c469);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord", c469);
		c469_texts(c469);

		CNode n368 = m_g.createNode("org/apache/commons/imaging/formats/pnm/PnmImageParser.java");
		n368.setMapping("pnm");
		n368.setClustering("pnm", "Initial");
		dmClass c470 = new dmClass("org.apache.commons.imaging.formats.pnm.PnmImageParser");
		n368.addClass(c470);
		m_classes.put("org.apache.commons.imaging.formats.pnm.PnmImageParser", c470);
		c470_texts(c470);

		CNode n369 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSLong.java");
		n369.setMapping("tiff");
		n369.setClustering("tiff", "Initial");
		dmClass c471 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong");
		n369.addClass(c471);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong", c471);
		c471_texts(c471);

		CNode n370 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoXpString.java");
		n370.setMapping("tiff");
		n370.setClustering("tiff", "Initial");
		dmClass c472 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString");
		n370.addClass(c472);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", c472);
		c472_texts(c472);

		CNode n371 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSBytes.java");
		n371.setMapping("tiff");
		n371.setClustering("tiff", "Initial");
		dmClass c473 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes");
		n371.addClass(c473);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes", c473);
		c473_texts(c473);

		CNode n372 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoFloat.java");
		n372.setMapping("tiff");
		n372.setClustering("tiff", "Initial");
		dmClass c474 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat");
		n372.addClass(c474);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat", c474);
		c474_texts(c474);

		CNode n373 = m_g.createNode("org/apache/commons/imaging/common/RgbBufferedImageFactory.java");
		n373.setMapping("common");
		n373.setClustering("common", "Initial");
		dmClass c475 = new dmClass("org.apache.commons.imaging.common.RgbBufferedImageFactory");
		n373.addClass(c475);
		m_classes.put("org.apache.commons.imaging.common.RgbBufferedImageFactory", c475);
		c475_texts(c475);

		CNode n374 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/segments/App13Segment.java");
		n374.setMapping("jpeg");
		n374.setClustering("jpeg", "Initial");
		dmClass c476 = new dmClass("org.apache.commons.imaging.formats.jpeg.segments.App13Segment");
		n374.addClass(c476);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.segments.App13Segment", c476);
		c476_texts(c476);

		CNode n375 = m_g.createNode("org/apache/commons/imaging/formats/jpeg/decoder/Block.java");
		n375.setMapping("jpeg");
		n375.setClustering("jpeg", "Initial");
		dmClass c477 = new dmClass("org.apache.commons.imaging.formats.jpeg.decoder.Block");
		n375.addClass(c477);
		m_classes.put("org.apache.commons.imaging.formats.jpeg.decoder.Block", c477);
		c477_texts(c477);

		CNode n376 = m_g.createNode("java/awt/image/ColorModel.java");
		dmClass c478 = new dmClass("java.awt.image.ColorModel");
		n376.addClass(c478);
		m_classes.put("java.awt.image.ColorModel", c478);

		CNode n377 = m_g.createNode("org/apache/commons/imaging/formats/gif/ImageDescriptor.java");
		n377.setMapping("gif");
		dmClass c479 = new dmClass("org.apache.commons.imaging.formats.gif.ImageDescriptor");
		n377.addClass(c479);
		m_classes.put("org.apache.commons.imaging.formats.gif.ImageDescriptor", c479);
		c479_texts(c479);

		CNode n378 = m_g.createNode("org/apache/commons/imaging/formats/pcx/RleReader.java");
		n378.setMapping("pcx");
		dmClass c480 = new dmClass("org.apache.commons.imaging.formats.pcx.RleReader");
		n378.addClass(c480);
		m_classes.put("org.apache.commons.imaging.formats.pcx.RleReader", c480);
		c480_texts(c480);

		CNode n379 = m_g.createNode("org/apache/commons/imaging/formats/png/PngConstants.java");
		n379.setMapping("png");
		n379.setClustering("png", "Initial");
		dmClass c481 = new dmClass("org.apache.commons.imaging.formats.png.PngConstants");
		n379.addClass(c481);
		m_classes.put("org.apache.commons.imaging.formats.png.PngConstants", c481);
		c481_texts(c481);

		CNode n380 = m_g.createNode("org/apache/commons/imaging/icc/IccTagDataType.java");
		n380.setMapping("icc");
		n380.setClustering("icc", "Initial");
		dmClass c482 = new dmClass("org.apache.commons.imaging.icc.IccTagDataType");
		n380.addClass(c482);
		m_classes.put("org.apache.commons.imaging.icc.IccTagDataType", c482);
		c482_texts(c482);

		CNode n381 = m_g.createNode("org/apache/commons/imaging/formats/tiff/taginfos/TagInfoDirectory.java");
		n381.setMapping("tiff");
		n381.setClustering("tiff", "Initial");
		dmClass c483 = new dmClass("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
		n381.addClass(c483);
		m_classes.put("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory", c483);
		c483_texts(c483);
		dmDependency.Type [] dt = dmDependency.Type.values();
		c2_deps();
		c3_deps();
		c4_deps();
		c7_deps();
		c8_deps();
		c9_deps();
		c10_deps();
		c11_deps();
		c12_deps();
		c13_deps();
		c14_deps();
		c15_deps();
		c17_deps();
		c18_deps();
		c19_deps();
		c20_deps();
		c21_deps();
		c22_deps();
		c23_deps();
		c24_deps();
		c25_deps();
		c26_deps();
		c27_deps();
		c28_deps();
		c29_deps();
		c30_deps();
		c31_deps();
		c32_deps();
		c33_deps();
		c34_deps();
		c35_deps();
		c36_deps();
		c37_deps();
		c38_deps();
		c39_deps();
		c40_deps();
		c41_deps();
		c42_deps();
		c43_deps();
		c44_deps();
		c45_deps();
		c46_deps();
		c47_deps();
		c50_deps();
		c51_deps();
		c52_deps();
		c53_deps();
		c54_deps();
		c55_deps();
		c56_deps();
		c57_deps();
		c58_deps();
		c59_deps();
		c60_deps();
		c61_deps();
		c62_deps();
		c63_deps();
		c64_deps();
		c65_deps();
		c66_deps();
		c67_deps();
		c69_deps();
		c71_deps();
		c72_deps();
		c74_deps();
		c75_deps();
		c76_deps();
		c77_deps();
		c78_deps();
		c79_deps();
		c80_deps();
		c81_deps();
		c82_deps();
		c83_deps();
		c84_deps();
		c85_deps();
		c86_deps();
		c87_deps();
		c88_deps();
		c89_deps();
		c90_deps();
		c91_deps();
		c92_deps();
		c93_deps();
		c94_deps();
		c95_deps();
		c96_deps();
		c97_deps();
		c98_deps();
		c99_deps();
		c100_deps();
		c101_deps();
		c102_deps();
		c103_deps();
		c104_deps();
		c105_deps();
		c106_deps();
		c107_deps();
		c108_deps();
		c109_deps();
		c110_deps();
		c112_deps();
		c113_deps();
		c114_deps();
		c115_deps();
		c116_deps();
		c117_deps();
		c118_deps();
		c120_deps();
		c122_deps();
		c123_deps();
		c124_deps();
		c125_deps();
		c126_deps();
		c127_deps();
		c128_deps();
		c129_deps();
		c130_deps();
		c131_deps();
		c132_deps();
		c133_deps();
		c134_deps();
		c135_deps();
		c136_deps();
		c137_deps();
		c138_deps();
		c139_deps();
		c140_deps();
		c141_deps();
		c142_deps();
		c143_deps();
		c144_deps();
		c145_deps();
		c146_deps();
		c147_deps();
		c148_deps();
		c149_deps();
		c150_deps();
		c151_deps();
		c152_deps();
		c153_deps();
		c155_deps();
		c156_deps();
		c157_deps();
		c158_deps();
		nextDeps_0();
	}
	public void nextDeps_0() {
		c159_deps();
		c160_deps();
		c161_deps();
		c162_deps();
		c163_deps();
		c164_deps();
		c165_deps();
		c167_deps();
		c169_deps();
		c171_deps();
		c172_deps();
		c173_deps();
		c174_deps();
		c175_deps();
		c176_deps();
		c177_deps();
		c178_deps();
		c179_deps();
		c180_deps();
		c181_deps();
		c182_deps();
		c183_deps();
		c184_deps();
		c185_deps();
		c186_deps();
		c187_deps();
		c188_deps();
		c189_deps();
		c190_deps();
		c191_deps();
		c192_deps();
		c194_deps();
		c195_deps();
		c196_deps();
		c198_deps();
		c199_deps();
		c200_deps();
		c201_deps();
		c202_deps();
		c203_deps();
		c204_deps();
		c206_deps();
		c207_deps();
		c208_deps();
		c209_deps();
		c210_deps();
		c211_deps();
		c212_deps();
		c213_deps();
		c214_deps();
		c215_deps();
		c216_deps();
		c217_deps();
		c218_deps();
		c220_deps();
		c221_deps();
		c222_deps();
		c223_deps();
		c224_deps();
		c225_deps();
		c227_deps();
		c228_deps();
		c229_deps();
		c230_deps();
		c231_deps();
		c232_deps();
		c233_deps();
		c235_deps();
		c236_deps();
		c237_deps();
		c238_deps();
		c239_deps();
		c240_deps();
		c241_deps();
		c242_deps();
		c243_deps();
		c244_deps();
		c245_deps();
		c246_deps();
		c247_deps();
		c248_deps();
		c250_deps();
		c251_deps();
		c252_deps();
		c253_deps();
		c254_deps();
		c257_deps();
		c258_deps();
		c259_deps();
		c260_deps();
		c261_deps();
		c263_deps();
		c265_deps();
		c266_deps();
		c267_deps();
		c268_deps();
		c270_deps();
		c273_deps();
		c277_deps();
		c278_deps();
		c279_deps();
		c281_deps();
		c282_deps();
		c284_deps();
		nextDeps_1();
	}
	public void nextDeps_1() {
		c285_deps();
		c287_deps();
		c288_deps();
		c289_deps();
		c290_deps();
		c291_deps();
		c292_deps();
		c293_deps();
		c294_deps();
		c295_deps();
		c296_deps();
		c299_deps();
		c300_deps();
		c302_deps();
		c303_deps();
		c304_deps();
		c305_deps();
		c306_deps();
		c307_deps();
		c308_deps();
		c309_deps();
		c310_deps();
		c312_deps();
		c313_deps();
		c314_deps();
		c315_deps();
		c316_deps();
		c317_deps();
		c318_deps();
		c319_deps();
		c320_deps();
		c321_deps();
		c322_deps();
		c323_deps();
		c324_deps();
		c325_deps();
		c327_deps();
		c328_deps();
		c329_deps();
		c330_deps();
		c331_deps();
		c332_deps();
		c333_deps();
		c335_deps();
		c336_deps();
		c337_deps();
		c338_deps();
		c339_deps();
		c340_deps();
		c343_deps();
		c344_deps();
		c345_deps();
		c346_deps();
		c347_deps();
		c348_deps();
		c349_deps();
		c350_deps();
		c351_deps();
		c352_deps();
		c353_deps();
		c354_deps();
		c355_deps();
		c356_deps();
		c357_deps();
		c358_deps();
		c359_deps();
		c360_deps();
		c361_deps();
		c362_deps();
		c363_deps();
		c364_deps();
		c365_deps();
		c366_deps();
		c367_deps();
		c369_deps();
		c370_deps();
		c371_deps();
		c372_deps();
		c373_deps();
		c374_deps();
		c375_deps();
		c376_deps();
		c377_deps();
		c378_deps();
		c379_deps();
		c380_deps();
		c381_deps();
		c382_deps();
		c383_deps();
		c384_deps();
		c385_deps();
		c386_deps();
		c388_deps();
		c389_deps();
		c390_deps();
		c392_deps();
		c393_deps();
		c394_deps();
		c395_deps();
		c396_deps();
		c397_deps();
		c398_deps();
		c401_deps();
		nextDeps_2();
	}
	public void nextDeps_2() {
		c402_deps();
		c403_deps();
		c404_deps();
		c405_deps();
		c406_deps();
		c407_deps();
		c408_deps();
		c409_deps();
		c410_deps();
		c412_deps();
		c413_deps();
		c414_deps();
		c415_deps();
		c418_deps();
		c419_deps();
		c422_deps();
		c423_deps();
		c424_deps();
		c426_deps();
		c428_deps();
		c429_deps();
		c430_deps();
		c431_deps();
		c432_deps();
		c435_deps();
		c436_deps();
		c437_deps();
		c438_deps();
		c439_deps();
		c440_deps();
		c441_deps();
		c442_deps();
		c443_deps();
		c445_deps();
		c447_deps();
		c448_deps();
		c450_deps();
		c452_deps();
		c453_deps();
		c454_deps();
		c455_deps();
		c456_deps();
		c457_deps();
		c458_deps();
		c459_deps();
		c460_deps();
		c462_deps();
		c463_deps();
		c464_deps();
		c465_deps();
		c467_deps();
		c468_deps();
		c469_deps();
		c470_deps();
		c471_deps();
		c472_deps();
		c473_deps();
		c474_deps();
		c475_deps();
		c476_deps();
		c479_deps();
		c480_deps();
		c481_deps();
		c482_deps();
		c483_deps();
	}

	public void c2_texts(dmClass a_c) {
		a_c.addText("bitString");
		a_c.addText("value");
		a_c.addText("<init>");
		a_c.addText("bitString");
		a_c.addText("value");
		a_c.addText("writeBits");
		a_c.addText("48");
		a_c.addText("i");
		a_c.addText("outputStream");
	}

	public void c3_texts(dmClass a_c) {
		a_c.addText("WHITE_TERMINATING_CODES");
		a_c.addText("BLACK_TERMINATING_CODES");
		a_c.addText("WHITE_MAKE_UP_CODES");
		a_c.addText("BLACK_MAKE_UP_CODES");
		a_c.addText("ADDITIONAL_MAKE_UP_CODES");
		a_c.addText("EOL");
		a_c.addText("EOL13");
		a_c.addText("EOL14");
		a_c.addText("EOL15");
		a_c.addText("EOL16");
		a_c.addText("EOL17");
		a_c.addText("EOL18");
		a_c.addText("EOL19");
		a_c.addText("P");
		a_c.addText("H");
		a_c.addText("V0");
		a_c.addText("VR1");
		a_c.addText("VR2");
		a_c.addText("VR3");
		a_c.addText("VL1");
		a_c.addText("VL2");
		a_c.addText("VL3");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("64");
		a_c.addText("00110101");
		a_c.addText("000111");
		a_c.addText("0111");
		a_c.addText("1000");
		a_c.addText("1011");
		a_c.addText("1100");
		a_c.addText("6");
		a_c.addText("1110");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("1111");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("10011");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10100");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("00111");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("01000");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("001000");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("000011");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("110100");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("110101");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("101010");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("101011");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("0100111");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("0001100");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("0001000");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("0010111");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("0000011");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("0000100");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("0101000");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("0101011");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("0010011");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("0100100");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("0011000");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("00000010");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("00000011");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("00011010");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("00011011");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("00010010");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("00010011");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("00010100");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("00010101");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("00010110");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("00010111");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("00101000");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("00101001");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("00101010");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("00101011");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("00101100");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("00101101");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("00000100");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("00000101");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("00001010");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("00001011");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("01010010");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("01010011");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("01010100");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("01010101");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("00100100");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("00100101");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("01011000");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("01011001");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("01011010");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("01011011");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("01001010");
		a_c.addText("59");
		a_c.addText("60");
		a_c.addText("01001011");
		a_c.addText("60");
		a_c.addText("61");
		a_c.addText("00110010");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("00110011");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("00110100");
		a_c.addText("63");
		a_c.addText("64");
		a_c.addText("0000110111");
		a_c.addText("010");
		a_c.addText("11");
		a_c.addText("10");
		a_c.addText("011");
		a_c.addText("0011");
		a_c.addText("6");
		a_c.addText("0010");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("00011");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("000101");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("000100");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("0000100");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("0000101");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("0000111");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("00000100");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("00000111");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("000011000");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("0000010111");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("0000011000");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("0000001000");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("00001100111");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("00001101000");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("00001101100");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("00000110111");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("00000101000");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("00000010111");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("00000011000");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("000011001010");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("000011001011");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("000011001100");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("000011001101");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("000001101000");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("000001101001");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("000001101010");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("000001101011");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("000011010010");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("000011010011");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("000011010100");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("000011010101");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("000011010110");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("000011010111");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("000001101100");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("000001101101");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("000011011010");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("000011011011");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("000001010100");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("000001010101");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("000001010110");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("000001010111");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("000001100100");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("000001100101");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("000001010010");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("000001010011");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("000000100100");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("000000110111");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("000000111000");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("000000100111");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("000000101000");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("000001011000");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("000001011001");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("000000101011");
		a_c.addText("59");
		a_c.addText("60");
		a_c.addText("000000101100");
		a_c.addText("60");
		a_c.addText("61");
		a_c.addText("000001011010");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("000001100110");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("000001100111");
		a_c.addText("63");
		a_c.addText("27");
		a_c.addText("11011");
		a_c.addText("64");
		a_c.addText("10010");
		a_c.addText("128");
		a_c.addText("010111");
		a_c.addText("192");
		a_c.addText("0110111");
		a_c.addText("256");
		a_c.addText("00110110");
		a_c.addText("320");
		a_c.addText("00110111");
		a_c.addText("384");
		a_c.addText("6");
		a_c.addText("01100100");
		a_c.addText("448");
		a_c.addText("7");
		a_c.addText("01100101");
		a_c.addText("512");
		a_c.addText("8");
		a_c.addText("01101000");
		a_c.addText("576");
		a_c.addText("9");
		a_c.addText("01100111");
		a_c.addText("640");
		a_c.addText("10");
		a_c.addText("011001100");
		a_c.addText("704");
		a_c.addText("11");
		a_c.addText("011001101");
		a_c.addText("768");
		a_c.addText("12");
		a_c.addText("011010010");
		a_c.addText("832");
		a_c.addText("13");
		a_c.addText("011010011");
		a_c.addText("896");
		a_c.addText("14");
		a_c.addText("011010100");
		a_c.addText("960");
		a_c.addText("15");
		a_c.addText("011010101");
		a_c.addText("1024");
		a_c.addText("16");
		a_c.addText("011010110");
		a_c.addText("1088");
		a_c.addText("17");
		a_c.addText("011010111");
		a_c.addText("1152");
		a_c.addText("18");
		a_c.addText("011011000");
		a_c.addText("1216");
		a_c.addText("19");
		a_c.addText("011011001");
		a_c.addText("1280");
		a_c.addText("20");
		a_c.addText("011011010");
		a_c.addText("1344");
		a_c.addText("21");
		a_c.addText("011011011");
		a_c.addText("1408");
		a_c.addText("22");
		a_c.addText("010011000");
		a_c.addText("1472");
		a_c.addText("23");
		a_c.addText("010011001");
		a_c.addText("1536");
		a_c.addText("24");
		a_c.addText("010011010");
		a_c.addText("1600");
		a_c.addText("25");
		a_c.addText("011000");
		a_c.addText("1664");
		a_c.addText("26");
		a_c.addText("010011011");
		a_c.addText("1728");
		a_c.addText("27");
		a_c.addText("0000001111");
		a_c.addText("64");
		a_c.addText("000011001000");
		a_c.addText("128");
		a_c.addText("000011001001");
		a_c.addText("192");
		a_c.addText("000001011011");
		a_c.addText("256");
		a_c.addText("000000110011");
		a_c.addText("320");
		a_c.addText("000000110100");
		a_c.addText("384");
		a_c.addText("6");
		a_c.addText("000000110101");
		a_c.addText("448");
		a_c.addText("7");
		a_c.addText("0000001101100");
		a_c.addText("512");
		a_c.addText("8");
		a_c.addText("0000001101101");
		a_c.addText("576");
		a_c.addText("9");
		a_c.addText("0000001001010");
		a_c.addText("640");
		a_c.addText("10");
		a_c.addText("0000001001011");
		a_c.addText("704");
		a_c.addText("11");
		a_c.addText("0000001001100");
		a_c.addText("768");
		a_c.addText("12");
		a_c.addText("0000001001101");
		a_c.addText("832");
		a_c.addText("13");
		a_c.addText("0000001110010");
		a_c.addText("896");
		a_c.addText("14");
		a_c.addText("0000001110011");
		a_c.addText("960");
		a_c.addText("15");
		a_c.addText("0000001110100");
		a_c.addText("1024");
		a_c.addText("16");
		a_c.addText("0000001110101");
		a_c.addText("1088");
		a_c.addText("17");
		a_c.addText("0000001110110");
		a_c.addText("1152");
		a_c.addText("18");
		a_c.addText("0000001110111");
		a_c.addText("1216");
		a_c.addText("19");
		a_c.addText("0000001010010");
		a_c.addText("1280");
		a_c.addText("20");
		a_c.addText("0000001010011");
		a_c.addText("1344");
		a_c.addText("21");
		a_c.addText("0000001010100");
		a_c.addText("1408");
		a_c.addText("22");
		a_c.addText("0000001010101");
		a_c.addText("1472");
		a_c.addText("23");
		a_c.addText("0000001011010");
		a_c.addText("1536");
		a_c.addText("24");
		a_c.addText("0000001011011");
		a_c.addText("1600");
		a_c.addText("25");
		a_c.addText("0000001100100");
		a_c.addText("1664");
		a_c.addText("26");
		a_c.addText("0000001100101");
		a_c.addText("1728");
		a_c.addText("13");
		a_c.addText("00000001000");
		a_c.addText("1792");
		a_c.addText("00000001100");
		a_c.addText("1856");
		a_c.addText("00000001101");
		a_c.addText("1920");
		a_c.addText("000000010010");
		a_c.addText("1984");
		a_c.addText("000000010011");
		a_c.addText("2048");
		a_c.addText("000000010100");
		a_c.addText("2112");
		a_c.addText("6");
		a_c.addText("000000010101");
		a_c.addText("2176");
		a_c.addText("7");
		a_c.addText("000000010110");
		a_c.addText("2240");
		a_c.addText("8");
		a_c.addText("000000010111");
		a_c.addText("2304");
		a_c.addText("9");
		a_c.addText("000000011100");
		a_c.addText("2368");
		a_c.addText("10");
		a_c.addText("000000011101");
		a_c.addText("2432");
		a_c.addText("11");
		a_c.addText("000000011110");
		a_c.addText("2496");
		a_c.addText("12");
		a_c.addText("000000011111");
		a_c.addText("2560");
		a_c.addText("000000000001");
		a_c.addText("0000000000001");
		a_c.addText("00000000000001");
		a_c.addText("000000000000001");
		a_c.addText("0000000000000001");
		a_c.addText("00000000000000001");
		a_c.addText("000000000000000001");
		a_c.addText("0000000000000000001");
		a_c.addText("0001");
		a_c.addText("001");
		a_c.addText("1");
		a_c.addText("011");
		a_c.addText("000011");
		a_c.addText("0000011");
		a_c.addText("010");
		a_c.addText("000010");
		a_c.addText("0000010");
	}
	public void c2_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.Argument, 250);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{255, 257});
	}
	public void c3_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.ConstructorCall, new int[]{});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.OwnFieldUse, new int[]{20, 86, 152, 181, 210, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241});
	}

	public void c4_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c4_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c7_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("mins");
		a_c.addText("maxs");
		a_c.addText("precision");
		a_c.addText("precisionMask");
		a_c.addText("total");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("RGB_COMPARATOR");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("i");
		a_c.addText("total");
		a_c.addText("precision");
		a_c.addText("<init>");
		a_c.addText("total");
		a_c.addText("precision");
		a_c.addText("mins");
		a_c.addText("maxs");
		a_c.addText("contains");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("dump");
		a_c.addText(": [");
		a_c.addText("] total : ");
		a_c.addText("\trgb: ");
		a_c.addText(", red: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText(", green: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText(", blue: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText("\tred: ");
		a_c.addText(", ");
		a_c.addText(", green: ");
		a_c.addText(", ");
		a_c.addText(", blue: ");
		a_c.addText(", ");
		a_c.addText("\trdiff: ");
		a_c.addText(", gdiff: ");
		a_c.addText(", bdiff: ");
		a_c.addText(", colorArea: ");
		a_c.addText("prefix");
		a_c.addText("rdiff");
		a_c.addText("gdiff");
		a_c.addText("bdiff");
		a_c.addText("colorArea");
		a_c.addText("dumpJustRGB");
		a_c.addText("\trgb: ");
		a_c.addText(", red: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText(", green: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText(", blue: ");
		a_c.addText("8");
		a_c.addText(", ");
		a_c.addText("8");
		a_c.addText("prefix");
		a_c.addText("getArea");
		a_c.addText("rdiff");
		a_c.addText("gdiff");
		a_c.addText("bdiff");
		a_c.addText("colorArea");
		a_c.addText("setAverageRGB");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("idx");
		a_c.addText("count");
		a_c.addText("blue");
		a_c.addText("green");
		a_c.addText("red");
		a_c.addText("table");
		a_c.addText("redsum");
		a_c.addText("greensum");
		a_c.addText("bluesum");
		a_c.addText("getIndex");
		a_c.addText("setIndex");
		a_c.addText("i");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/palette/ColorSpaceSubset;");
	}

	public void c8_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("509214838111679029");
		a_c.addText("<init>");
		a_c.addText("compare");
		a_c.addText("c1");
		a_c.addText("c2");
		a_c.addText("compare");
	}
	public void c7_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{161, 161, 161});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), dmDependency.Type.OwnFieldUse, 35);
	}
	public void c8_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), m_classes.get("java.io.Serializable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Argument, new int[]{171, 171});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset$RgbComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.FieldUse, new int[]{176, 176});
	}

	public void c9_texts(dmClass a_c) {
		a_c.addText("xbmHeader");
		a_c.addText("cParser");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("x0");
	}

	public void c10_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("xHot");
		a_c.addText("yHot");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("xHot");
		a_c.addText("yHot");
		a_c.addText("dump");
		a_c.addText("XbmHeader");
		a_c.addText("Width: ");
		a_c.addText("Height: ");
		a_c.addText("X hot: ");
		a_c.addText("Y hot: ");
		a_c.addText("pw");
	}

	public void c11_texts(dmClass a_c) {
	}

	public void c12_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".xbm");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("X BitMap");
		a_c.addText("getDefaultExtension");
		a_c.addText(".xbm");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("XBM");
		a_c.addText("X BitMap");
		a_c.addText("image/x-xbitmap");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("xbmHeader");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("xbmHeader");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readXbmHeader");
		a_c.addText("byteSource");
		a_c.addText("parseXbmHeader");
		a_c.addText("_width");
		a_c.addText("_height");
		a_c.addText("_x_hot");
		a_c.addText("_y_hot");
		a_c.addText("width not found");
		a_c.addText("height not found");
		a_c.addText("name");
		a_c.addText("entry");
		a_c.addText("defines");
		a_c.addText("preprocessedFile");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("xHot");
		a_c.addText("yHot");
		a_c.addText("xbmParseResult");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("parseCIntegerLiteral");
		a_c.addText("0");
		a_c.addText("120");
		a_c.addText("88");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("readXbmImage");
		a_c.addText("static");
		a_c.addText("Parsing XBM file failed, no \'static\' token");
		a_c.addText("Parsing XBM file failed, no \'unsigned\' or \'char\' or \'short\' token");
		a_c.addText("unsigned");
		a_c.addText("char");
		a_c.addText("8");
		a_c.addText("short");
		a_c.addText("16");
		a_c.addText("6");
		a_c.addText("Parsing XBM file failed, no \'char\' or \'short\' token");
		a_c.addText("Parsing XBM file failed, no variable name");
		a_c.addText("95");
		a_c.addText("Parsing XBM file failed, variable name doesn\'t start with letter or underscore");
		a_c.addText("95");
		a_c.addText("Parsing XBM file failed, variable name contains non-letter non-digit non-underscore");
		a_c.addText("[");
		a_c.addText("Parsing XBM file failed, no \'[\' token");
		a_c.addText("]");
		a_c.addText("Parsing XBM file failed, no \']\' token");
		a_c.addText("=");
		a_c.addText("Parsing XBM file failed, no \'=\' token");
		a_c.addText("{");
		a_c.addText("Parsing XBM file failed, no \'{\' token");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("0x");
		a_c.addText("Parsing XBM file failed, hex value missing");
		a_c.addText("Parsing XBM file failed, hex value too long");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Parsing XBM file failed, premature end of file");
		a_c.addText(",");
		a_c.addText("}");
		a_c.addText("Parsing XBM file failed, punctuation error");
		a_c.addText("10");
		a_c.addText("16777215");
		a_c.addText("inputWidth");
		a_c.addText("hexWidth");
		a_c.addText("inputWidth");
		a_c.addText("hexWidth");
		a_c.addText("c");
		a_c.addText("i");
		a_c.addText("value");
		a_c.addText("flipped");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("xbmHeader");
		a_c.addText("cParser");
		a_c.addText("token");
		a_c.addText("inputWidth");
		a_c.addText("hexWidth");
		a_c.addText("name");
		a_c.addText("rowLength");
		a_c.addText("imageData");
		a_c.addText("i");
		a_c.addText("palette");
		a_c.addText("colorModel");
		a_c.addText("dataBuffer");
		a_c.addText("raster");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("getBufferedImage");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("result");
		a_c.addText("randomName");
		a_c.addText("a");
		a_c.addText("56");
		a_c.addText("255");
		a_c.addText("56");
		a_c.addText("255");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("uuid");
		a_c.addText("stringBuilder");
		a_c.addText("bits");
		a_c.addText("toPrettyHex");
		a_c.addText("255");
		a_c.addText("0x");
		a_c.addText("0x0");
		a_c.addText("value");
		a_c.addText("s");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("Unknown parameter: ");
		a_c.addText("#define ");
		a_c.addText("_width ");
		a_c.addText("\n");
		a_c.addText("#define ");
		a_c.addText("_height ");
		a_c.addText("\n");
		a_c.addText("static unsigned char ");
		a_c.addText("_bits[] = {");
		a_c.addText("\n  ");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("127");
		a_c.addText("8");
		a_c.addText(",");
		a_c.addText("12");
		a_c.addText("\n  ");
		a_c.addText(",");
		a_c.addText("12");
		a_c.addText("\n  ");
		a_c.addText("\n};\n");
		a_c.addText("firstKey");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("sample");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("name");
		a_c.addText("bitcache");
		a_c.addText("bitsInCache");
		a_c.addText("separator");
		a_c.addText("written");
		a_c.addText("<clinit>");
		a_c.addText(".xbm");
	}
	public void c9_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), dmDependency.Type.ConstructorCall, 130);
	}
	public void c10_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{120, 121, 122, 124, 125});
	}
	public void c11_deps() {
	}
	public void c12_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{72, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{72, 79, 86, 97, 103, 137, 189, 304, 311});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{72, 79, 86, 97, 103, 137, 189, 304, 311, 341});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{72, 79, 86, 97, 103, 137, 304, 311});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.FieldUse, new int[]{86, 86, 97, 97, 261, 262, 264, 265, 279, 302, 302});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.Returns, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), dmDependency.Type.FieldUse, new int[]{137, 171, 172, 318, 318});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), dmDependency.Type.Returns, 137);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.MethodCall, new int[]{144, 196, 201, 208, 222, 240, 245, 250, 255, 266, 286});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{163, 166, 198, 203, 219, 224, 228, 235, 242, 247, 252, 257, 268, 272, 288, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), dmDependency.Type.ConstructorCall, 169);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.ConstructorCall, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.ConstructorCall, 172);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{174, 174, 174, 174});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmParseResult"), dmDependency.Type.LocalVar, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{189, 311});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.Argument, 189);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.Argument, 189);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.ConstructorCall, 300);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.ConstructorCall, 301);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, 302);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("char"), dmDependency.Type.LocalVar, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.LocalVar, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser$XbmHeader"), dmDependency.Type.MethodCall, 310);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("long"), dmDependency.Type.LocalVar, 333);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 341);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 341);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 341);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 357);
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{362, 363, 370, 371, 372});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{362, 363, 364, 385, 388, 391, 398, 401, 404, 411});
		d(m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{362, 363, 364, 385, 388, 391, 398, 401, 404, 411});
	}

	public void c13_texts(dmClass a_c) {
		a_c.addText("value");
		a_c.addText("iColor");
		a_c.addText("color");
		a_c.addText("isNull");
		a_c.addText("<init>");
		a_c.addText("Null colors not allowed");
		a_c.addText("value");
		a_c.addText("color");
		a_c.addText("isCovered");
		a_c.addText("f");
		a_c.addText("getARGB");
		a_c.addText("f");
		a_c.addText("getColor");
		a_c.addText("f");
		a_c.addText("coversSingleEntry");
		a_c.addText("getLowerBound");
		a_c.addText("getUpperBound");
		a_c.addText("toString");
		a_c.addText("PaletteEntry for single value");
	}
	public void c13_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("java.awt.Color"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("java.awt.Color"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("java.awt.Color"), dmDependency.Type.OwnFieldUse, new int[]{47, 74, 76});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("java.awt.Color"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue"), m_classes.get("java.awt.Color"), dmDependency.Type.Returns, 68);
	}

	public void c14_texts(dmClass a_c) {
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("pixelParser");
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("pixelParser");
	}
	public void c14_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{28, 29});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.OwnFieldUse, 30);
	}

	public void c15_texts(dmClass a_c) {
		a_c.addText("os");
		a_c.addText("byteOrder");
		a_c.addText("bitsInCache");
		a_c.addText("bitCache");
		a_c.addText("bytesWritten");
		a_c.addText("<init>");
		a_c.addText("os");
		a_c.addText("byteOrder");
		a_c.addText("write");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("writeBits");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("b");
		a_c.addText("b");
		a_c.addText("remainderMask");
		a_c.addText("value");
		a_c.addText("sampleBits");
		a_c.addText("sampleMask");
		a_c.addText("actualWrite");
		a_c.addText("value");
		a_c.addText("flushCache");
		a_c.addText("8");
		a_c.addText("bitMask");
		a_c.addText("b");
		a_c.addText("getBytesWritten");
	}
	public void c15_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{31, 46, 56, 86});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.OwnFieldUse, new int[]{32, 77, 89, 92});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{33, 38, 74, 79});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{46, 56, 86});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{77, 89, 92});
	}

	public void c17_texts(dmClass a_c) {
		a_c.addText("scanComponentSelector");
		a_c.addText("dcCodingTableSelector");
		a_c.addText("acCodingTableSelector");
		a_c.addText("<init>");
		a_c.addText("scanComponentSelector");
		a_c.addText("dcCodingTableSelector");
		a_c.addText("acCodingTableSelector");
	}

	public void c18_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("numberOfComponents");
		a_c.addText("components");
		a_c.addText("startOfSpectralSelection");
		a_c.addText("endOfSpectralSelection");
		a_c.addText("successiveApproximationBitHigh");
		a_c.addText("successiveApproximationBitLow");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("SosSegment marker_length: ");
		a_c.addText("number_of_components_in_scan");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("scanComponentSelector");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("acDcEntropoyCodingTableSelector");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("start_of_spectral_selection");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("end_of_spectral_selection");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("successive_approximation_bit_position");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("scanComponentSelector");
		a_c.addText("acDcEntropoyCodingTableSelector");
		a_c.addText("dcCodingTableSelector");
		a_c.addText("acCodingTableSelector");
		a_c.addText("i");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("successiveApproximationBitPosition");
		a_c.addText("getComponents");
		a_c.addText("getComponents");
		a_c.addText("index");
		a_c.addText("getDescription");
		a_c.addText("SOS (");
		a_c.addText(")");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/jpeg/segments/SosSegment;");
	}
	public void c17_deps() {
	}
	public void c18_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.ConstructorCall, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{64, 71, 74, 86, 89, 92});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.ConstructorCall, new int[]{69, 82});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.OwnFieldUse, new int[]{69, 82, 106, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.Returns, new int[]{99, 106});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.MethodCall, 106);
	}

	public void c19_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
	}
	public void c19_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 25);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 25);
	}

	public void c20_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitDepth");
		a_c.addText("pngColorType");
		a_c.addText("compressionMethod");
		a_c.addText("filterMethod");
		a_c.addText("interlaceMethod");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitDepth");
		a_c.addText("pngColorType");
		a_c.addText("compressionMethod");
		a_c.addText("filterMethod");
		a_c.addText("interlaceMethod");
	}

	public void c21_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("writeInt");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("os");
		a_c.addText("value");
		a_c.addText("writeChunk");
		a_c.addText("os");
		a_c.addText("chunkType");
		a_c.addText("data");
		a_c.addText("dataLength");
		a_c.addText("png_crc");
		a_c.addText("crc1");
		a_c.addText("crc2");
		a_c.addText("crc");
		a_c.addText("writeChunkIHDR");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("os");
		a_c.addText("value");
		a_c.addText("baos");
		a_c.addText("writeChunkiTXt");
		a_c.addText("Png tEXt chunk keyword is not ISO-8859-1: ");
		a_c.addText("Png tEXt chunk language tag is not ISO-8859-1: ");
		a_c.addText("os");
		a_c.addText("text");
		a_c.addText("baos");
		a_c.addText("writeChunkzTXt");
		a_c.addText("Png zTXt chunk keyword is not ISO-8859-1: ");
		a_c.addText("Png zTXt chunk text is not ISO-8859-1: ");
		a_c.addText("os");
		a_c.addText("text");
		a_c.addText("baos");
		a_c.addText("writeChunktEXt");
		a_c.addText("Png tEXt chunk keyword is not ISO-8859-1: ");
		a_c.addText("Png tEXt chunk text is not ISO-8859-1: ");
		a_c.addText("os");
		a_c.addText("text");
		a_c.addText("baos");
		a_c.addText("deflate");
		a_c.addText("dos");
		a_c.addText("baos");
		a_c.addText("bytes");
		a_c.addText("isValidISO_8859_1");
		a_c.addText("s");
		a_c.addText("roundtrip");
		a_c.addText("writeChunkXmpiTXt");
		a_c.addText("XML:com.adobe.xmp");
		a_c.addText("XML:com.adobe.xmp");
		a_c.addText("os");
		a_c.addText("xmpXml");
		a_c.addText("baos");
		a_c.addText("writeChunkPLTE");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("i");
		a_c.addText("os");
		a_c.addText("palette");
		a_c.addText("length");
		a_c.addText("bytes");
		a_c.addText("writeChunkTRNS");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("i");
		a_c.addText("os");
		a_c.addText("palette");
		a_c.addText("bytes");
		a_c.addText("writeChunkIEND");
		a_c.addText("os");
		a_c.addText("writeChunkIDAT");
		a_c.addText("os");
		a_c.addText("bytes");
		a_c.addText("writeChunkPHYS");
		a_c.addText("9");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("os");
		a_c.addText("xPPU");
		a_c.addText("yPPU");
		a_c.addText("units");
		a_c.addText("bytes");
		a_c.addText("writeChunkSCAL");
		a_c.addText("os");
		a_c.addText("xUPP");
		a_c.addText("yUPP");
		a_c.addText("units");
		a_c.addText("baos");
		a_c.addText("getBitDepth");
		a_c.addText("8");
		a_c.addText("PNG_BIT_DEPTH");
		a_c.addText("8");
		a_c.addText("pngColorType");
		a_c.addText("params");
		a_c.addText("depth");
		a_c.addText("o");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PNG_FORCE_TRUE_COLOR");
		a_c.addText("PNG_FORCE_TRUE_COLOR");
		a_c.addText("PNG_FORCE_INDEXED_COLOR");
		a_c.addText("PNG_FORCE_INDEXED_COLOR");
		a_c.addText("PNG_BIT_DEPTH");
		a_c.addText("PNG_BIT_DEPTH");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("PNG_TEXT_CHUNKS");
		a_c.addText("PNG_TEXT_CHUNKS");
		a_c.addText("PNG_COMPRESSION_LEVEL");
		a_c.addText("PNG_COMPRESSION_LEVEL");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("PHYSICAL_SCALE_CHUNK");
		a_c.addText("PNG_COMPRESSION_LEVEL");
		a_c.addText("Unknown parameter: ");
		a_c.addText("hasAlpha: ");
		a_c.addText("isGrayscale: ");
		a_c.addText("PNG_FORCE_INDEXED_COLOR");
		a_c.addText("PNG_FORCE_TRUE_COLOR");
		a_c.addText("Params: Cannot force both indexed and true color modes");
		a_c.addText("colorType: ");
		a_c.addText("bitDepth: ");
		a_c.addText("8");
		a_c.addText("sampleDepth: ");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("PHYSICAL_SCALE_CHUNK");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("PNG_TEXT_CHUNKS");
		a_c.addText("PNG_TEXT_CHUNKS");
		a_c.addText("Unknown text to embed in PNG: ");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("262144");
		a_c.addText("262144");
		a_c.addText("262144");
		a_c.addText("262144");
		a_c.addText("firstKey");
		a_c.addText("pngColorType");
		a_c.addText("pngColorType");
		a_c.addText("forceIndexedColor");
		a_c.addText("forceTrueColor");
		a_c.addText("sampleDepth");
		a_c.addText("compressionMethod");
		a_c.addText("filterMethod");
		a_c.addText("interlaceMethod");
		a_c.addText("imageHeader");
		a_c.addText("maxColors");
		a_c.addText("paletteFactory");
		a_c.addText("pixelDensity");
		a_c.addText("physicalScale");
		a_c.addText("xmpXml");
		a_c.addText("text");
		a_c.addText("outputText");
		a_c.addText("outputTexts");
		a_c.addText("index");
		a_c.addText("gray");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("baos");
		a_c.addText("useAlpha");
		a_c.addText("row");
		a_c.addText("end");
		a_c.addText("length");
		a_c.addText("compressed");
		a_c.addText("index");
		a_c.addText("compressed");
		a_c.addText("uncompressed");
		a_c.addText("baos");
		a_c.addText("chunkSize");
		a_c.addText("deflater");
		a_c.addText("dos");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("compressionLevel");
		a_c.addText("rawParams");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("isGrayscale");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("sampleDepth");
		a_c.addText("palette");
		a_c.addText("pixelDensityObj");
		a_c.addText("physcialScaleObj");
	}
	public void c20_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{94, 96, 97});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.OwnFieldUse, 95);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.OwnFieldUse, 98);
	}
	public void c21_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{37, 59, 78, 114, 145, 169, 190, 204, 228, 246, 256, 260, 265, 280, 306});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{37, 59, 78, 114, 145, 169, 204, 228, 246, 256, 260, 265, 280, 306});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{55, 56, 57, 58, 65, 67, 620});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.Argument, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{59, 190, 260, 265, 280});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.FieldUse, new int[]{65, 72, 72, 113, 144, 168, 189, 227, 245, 255, 259, 264, 279, 295});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), dmDependency.Type.ConstructorCall, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), dmDependency.Type.MethodCall, new int[]{72, 73, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), dmDependency.Type.LocalVar, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{78, 78});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), dmDependency.Type.Argument, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, new int[]{104, 125, 156, 180, 193, 210, 284, 508, 562});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), dmDependency.Type.FieldUse, new int[]{105, 106, 107, 108, 109, 110, 111});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{107, 108, 109, 110, 111, 113, 128, 129, 131, 132, 135, 136, 139, 140, 142, 144, 159, 160, 163, 166, 168, 183, 184, 187, 189, 198, 199, 199, 199, 199, 213, 214, 216, 217, 219, 222, 223, 225, 227, 287, 290, 291, 293, 295, 518, 524, 545, 547, 548, 549, 552, 557, 573, 575, 576, 585});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, new int[]{108, 306, 401});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.MethodCall, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, new int[]{114, 145, 169, 190, 199, 228, 296, 621, 621});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{114, 145, 169, 306});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Itxt"), dmDependency.Type.Argument, 114);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Itxt"), dmDependency.Type.FieldUse, new int[]{118, 119, 121, 122, 128, 135, 139, 142});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{119, 122, 150, 153, 174, 177, 373, 393, 495});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{128, 135, 139, 142, 159, 166, 183, 187, 203, 203, 213, 222, 225, 290, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Ztxt"), dmDependency.Type.Argument, 145);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Ztxt"), dmDependency.Type.FieldUse, new int[]{149, 150, 152, 153, 159, 166});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Text"), dmDependency.Type.Argument, 169);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Text"), dmDependency.Type.FieldUse, new int[]{173, 174, 176, 177, 183, 187});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{190, 296});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Argument, new int[]{228, 246});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.MethodCall, new int[]{232, 237, 249, 252, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{246, 256, 280, 296, 621, 621, 621, 621, 621, 621});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 296);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 306);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{377, 378, 516});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, new int[]{380, 384, 446});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, new int[]{380, 384, 449, 453});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{381, 385, 403, 407, 415});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.FieldUse, new int[]{396, 398, 398, 410, 441, 510, 510});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), dmDependency.Type.FieldUse, 418);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, 418);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.FieldUse, 425);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), dmDependency.Type.ConstructorCall, 427);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.MethodCall, new int[]{461, 462, 463, 466, 467});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.MethodCall, new int[]{475, 475, 476});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.FieldUse, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.MethodCall, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.LocalVar, new int[]{621, 621, 621});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter$ImageHeader"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.LocalVar, 621);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.LocalVar, 621);
	}

	public void c22_texts(dmClass a_c) {
		a_c.addText("v0");
		a_c.addText("v1");
		a_c.addText("r0");
		a_c.addText("r1");
		a_c.addText("g0");
		a_c.addText("g1");
		a_c.addText("b0");
		a_c.addText("b1");
		a_c.addText("a0");
		a_c.addText("a1");
		a_c.addText("<init>");
		a_c.addText("Specified values must be v0<v1");
		a_c.addText("Null colors not allowed");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("v0");
		a_c.addText("v1");
		a_c.addText("color0");
		a_c.addText("color1");
		a_c.addText("deltaV");
		a_c.addText("argb0");
		a_c.addText("argb1");
		a_c.addText("<init>");
		a_c.addText("Specified values must be v0<v1");
		a_c.addText("Null colors not allowed");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("v0");
		a_c.addText("v1");
		a_c.addText("color");
		a_c.addText("deltaV");
		a_c.addText("argb0");
		a_c.addText("argb1");
		a_c.addText("isCovered");
		a_c.addText("f");
		a_c.addText("getARGB");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("t");
		a_c.addText("a");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("f");
		a_c.addText("getColor");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("0.5");
		a_c.addText("t");
		a_c.addText("a");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("f");
		a_c.addText("coversSingleEntry");
		a_c.addText("getLowerBound");
		a_c.addText("getUpperBound");
		a_c.addText("toString");
		a_c.addText("PaletteEntry for range ");
		a_c.addText(", ");
	}
	public void c22_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), m_classes.get("java.awt.Color"), dmDependency.Type.Argument, new int[]{1, 1, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), m_classes.get("java.awt.Color"), dmDependency.Type.MethodCall, new int[]{64, 70, 97, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), m_classes.get("java.awt.Color"), dmDependency.Type.Returns, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), m_classes.get("java.awt.Color"), dmDependency.Type.ConstructorCall, 136);
	}

	public void c23_texts(dmClass a_c) {
		a_c.addText("BLOCK_SIZE");
		a_c.addText("1024");
		a_c.addText("is");
		a_c.addText("cacheHead");
		a_c.addText("readBuffer");
		a_c.addText("streamLength");
		a_c.addText("<init>");
		a_c.addText("-1");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("readBlock");
		a_c.addText("1024");
		a_c.addText("8");
		a_c.addText("1024");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("result");
		a_c.addText("read");
		a_c.addText("getFirstBlock");
		a_c.addText("getInputStream");
		a_c.addText("getBlock");
		a_c.addText("Could not read block (block start: ");
		a_c.addText(", block length: ");
		a_c.addText(", data length: ");
		a_c.addText(").");
		a_c.addText("8");
		a_c.addText("Could not read block.");
		a_c.addText("read");
		a_c.addText("blockStart");
		a_c.addText("blockLength");
		a_c.addText("cis");
		a_c.addText("bytes");
		a_c.addText("total");
		a_c.addText("getLength");
		a_c.addText("1024");
		a_c.addText("cis");
		a_c.addText("result");
		a_c.addText("skipped");
		a_c.addText("getAll");
		a_c.addText("baos");
		a_c.addText("block");
		a_c.addText("getDescription");
		a_c.addText("Inputstream: \'");
		a_c.addText("\'");
		a_c.addText("access$000");
		a_c.addText("x0");
		a_c.addText("access$100");
		a_c.addText("x0");
	}

	public void c24_texts(dmClass a_c) {
		a_c.addText("block");
		a_c.addText("readFirst");
		a_c.addText("blockIndex");
		a_c.addText("<init>");
		a_c.addText("read");
		a_c.addText("255");
		a_c.addText("read");
		a_c.addText("array");
		a_c.addText("array");
		a_c.addText("off");
		a_c.addText("len");
		a_c.addText("readSize");
		a_c.addText("skip");
		a_c.addText("-1");
		a_c.addText("1024");
		a_c.addText("readSize");
		a_c.addText("n");
		a_c.addText("remaining");
		a_c.addText("<init>");
		a_c.addText("x0");
		a_c.addText("x1");
	}

	public void c25_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("next");
		a_c.addText("triedNext");
		a_c.addText("<init>");
		a_c.addText("bytes");
		a_c.addText("getNext");
	}

	public void c26_texts(dmClass a_c) {
	}
	public void c23_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.ConstructorCall, 36);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{33, 217, 241, 242, 251});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.BufferedInputStream"), dmDependency.Type.ConstructorCall, 37);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{37, 68});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{38, 80, 88, 208, 236, 252, 269, 27});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.Returns, new int[]{38, 80, 269, 27});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{64, 65, 68, 74, 78, 79});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{68, 228, 248});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.ConstructorCall, new int[]{75, 80});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{80, 80, 236});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.OwnFieldUse, new int[]{85, 86, 88});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Returns, 88);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), dmDependency.Type.ConstructorCall, 208);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{208, 252});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("long"), dmDependency.Type.Argument, 208);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{217, 230});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 223);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{236, 252});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("long"), dmDependency.Type.Returns, 236);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{252, 252});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 257);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.FieldUse, 261);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{261, 264});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.MethodCall, 262);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 264);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.LocalVar, 264);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.Argument, new int[]{269, 27});
	}
	public void c24_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 91);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{91, 119, 159});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.OwnFieldUse, new int[]{98, 102, 106, 106, 107, 107, 111, 115, 119, 135, 139, 143, 143, 144, 144, 148, 152, 156, 157, 173, 177, 182, 182, 183, 183, 187, 191, 195});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.FieldUse, new int[]{102, 139, 177});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.FieldUse, new int[]{106, 115, 119, 143, 152, 156, 157, 182, 191, 195});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.MethodCall, new int[]{107, 144, 183});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("byte"), dmDependency.Type.Argument, 119);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("long"), dmDependency.Type.Returns, 159);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("long"), dmDependency.Type.Argument, 159);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("long"), dmDependency.Type.LocalVar, 201);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$1"), dmDependency.Type.Argument, 201);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheReadingInputStream"), dmDependency.Type.ConstructorCall, 91);
	}
	public void c25_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 46);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 47);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.Returns, 47);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), dmDependency.Type.OwnFieldUse, new int[]{50, 51, 57, 58});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream$CacheBlock"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.FieldUse, 57);
	}
	public void c26_deps() {
	}

	public void c27_texts(dmClass a_c) {
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("<init>");
	}

	public void c28_texts(dmClass a_c) {
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("z");
		a_c.addText("<init>");
	}

	public void c29_texts(dmClass a_c) {
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("fileSize");
		a_c.addText("reserved");
		a_c.addText("bitmapDataOffset");
		a_c.addText("bitmapHeaderSize");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("bitmapDataSize");
		a_c.addText("hResolution");
		a_c.addText("vResolution");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("alphaMask");
		a_c.addText("colorSpaceType");
		a_c.addText("colorSpace");
		a_c.addText("gammaRed");
		a_c.addText("gammaGreen");
		a_c.addText("gammaBlue");
		a_c.addText("intent");
		a_c.addText("profileData");
		a_c.addText("profileSize");
		a_c.addText("reservedV5");
		a_c.addText("<init>");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("fileSize");
		a_c.addText("reserved");
		a_c.addText("bitmapDataOffset");
		a_c.addText("bitmapHeaderSize");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("bitmapDataSize");
		a_c.addText("hResolution");
		a_c.addText("vResolution");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("alphaMask");
		a_c.addText("colorSpaceType");
		a_c.addText("colorSpace");
		a_c.addText("gammaRed");
		a_c.addText("gammaGreen");
		a_c.addText("gammaBlue");
		a_c.addText("intent");
		a_c.addText("profileData");
		a_c.addText("profileSize");
		a_c.addText("reservedV5");
	}
	public void c27_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpaceCoordinate"), dmDependency.Type.Field, new int[]{1, 1, 1});
	}
	public void c28_deps() {
	}
	public void c29_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{80, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.OwnFieldUse, 103);
	}

	public void c30_texts(dmClass a_c) {
		a_c.addText("unfilter");
	}
	public void c30_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1});
	}

	public void c31_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("performNextMedianCut");
		a_c.addText("1.7976931348623157E308");
		a_c.addText("2.0");
		a_c.addText("Bad mode.");
		a_c.addText("group");
		a_c.addText("colorCount");
		a_c.addText("newDiff");
		a_c.addText("oldDiff");
		a_c.addText("countHalf");
		a_c.addText("oldCount");
		a_c.addText("newCount");
		a_c.addText("medianIndex");
		a_c.addText("lowerColors");
		a_c.addText("upperColors");
		a_c.addText("lowerGroup");
		a_c.addText("upperGroup");
		a_c.addText("diff");
		a_c.addText("score");
		a_c.addText("colorComponent");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("colorGroups");
		a_c.addText("ignoreAlpha");
		a_c.addText("maxPoints");
		a_c.addText("colorGroup");
		a_c.addText("colorCounts");
		a_c.addText("bestScore");
		a_c.addText("bestColorComponent");
		a_c.addText("bestMedianIndex");
		a_c.addText("lowerColors");
		a_c.addText("upperColors");
		a_c.addText("lowerGroup");
		a_c.addText("upperGroup");
		a_c.addText("medianValue");
		a_c.addText("limit");
	}

	public void c32_texts(dmClass a_c) {
		a_c.addText("<clinit>");
		a_c.addText("10");
	}
	public void c31_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.MedianCut"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 25);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Argument, 25);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.FieldUse, new int[]{33, 34, 36, 54, 89, 89, 90, 90, 132});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.MethodCall, 44);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, new int[]{49, 116});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.FieldUse, 50);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), dmDependency.Type.ConstructorCall, new int[]{53, 102});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.FieldUse, new int[]{61, 118, 121, 124, 127});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.ConstructorCall, new int[]{87, 88, 108, 109});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut$1"), dmDependency.Type.FieldUse, 116);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), dmDependency.Type.ConstructorCall, 132);
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.LocalVar, new int[]{133, 133, 133, 133, 133, 133});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.LocalVar, new int[]{133, 133, 133, 133, 133, 133, 133});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.LocalVar, new int[]{133, 133});
	}
	public void c32_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, new int[]{116, 116, 116, 116, 116});
		d(m_classes.get("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.FieldUse, new int[]{116, 116, 116, 116});
	}

	public void c33_texts(dmClass a_c) {
		a_c.addText("data");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("<init>");
		a_c.addText("zero or negative width value");
		a_c.addText("zero or negative height value");
		a_c.addText("10");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("getWidth");
		a_c.addText("getHeight");
		a_c.addText("getRGB");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("rowOffset");
		a_c.addText("setRGB");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("argb");
		a_c.addText("rowOffset");
		a_c.addText("getBufferedImage");
		a_c.addText("getSubimage");
		a_c.addText("negative or zero subimage width");
		a_c.addText("negative or zero subimage height");
		a_c.addText("subimage x is outside raster");
		a_c.addText("subimage (x+width) is outside raster");
		a_c.addText("subimage y is outside raster");
		a_c.addText("subimage (y+height) is outside raster");
		a_c.addText("10");
		a_c.addText("dIndex");
		a_c.addText("iRow");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("w");
		a_c.addText("h");
		a_c.addText("argb");
		a_c.addText("k");
		a_c.addText("makeBufferedImage");
		a_c.addText("32");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("24");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("argb");
		a_c.addText("w");
		a_c.addText("h");
		a_c.addText("useAlpha");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("buffer");
	}
	public void c33_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.RasterFormatException"), dmDependency.Type.ConstructorCall, new int[]{72, 75, 154, 157, 160, 163, 167, 170});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{124, 131, 185});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.DataBufferInt"), dmDependency.Type.ConstructorCall, 193);
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.ConstructorCall, new int[]{195, 201});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, new int[]{197, 203});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, 208);
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 208);
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, new int[]{207, 207});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, new int[]{207, 207});
		d(m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), m_classes.get("java.awt.image.DataBufferInt"), dmDependency.Type.LocalVar, 207);
	}

	public void c34_texts(dmClass a_c) {
		a_c.addText("NEWLINE");
		a_c.addText("delay");
		a_c.addText("leftPosition");
		a_c.addText("topPosition");
		a_c.addText("disposalMethod");
		a_c.addText("<init>");
		a_c.addText("delay");
		a_c.addText("leftPosition");
		a_c.addText("topPosition");
		a_c.addText("disposalMethod");
		a_c.addText("getDelay");
		a_c.addText("getLeftPosition");
		a_c.addText("getTopPosition");
		a_c.addText("getDisposalMethod");
		a_c.addText("toString");
		a_c.addText("%sDelay: %d%s");
		a_c.addText("%sLeft position: %d%s");
		a_c.addText("%sTop position: %d%s");
		a_c.addText("%sDisposal method: %s%s");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c34_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.OwnFieldUse, new int[]{32, 48, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Returns, 44);
	}

	public void c35_texts(dmClass a_c) {
		a_c.addText("TIFF_TAG_SUB_IFD");
		a_c.addText("TIFF_TAG_CLIP_PATH");
		a_c.addText("TIFF_TAG_XCLIP_PATH_UNITS");
		a_c.addText("TIFF_TAG_YCLIP_PATH_UNITS");
		a_c.addText("TIFF_TAG_INDEXED");
		a_c.addText("INDEXED_VALUE_NOT_INDEXED");
		a_c.addText("0");
		a_c.addText("INDEXED_VALUE_INDEXED");
		a_c.addText("1");
		a_c.addText("TIFF_TAG_OPIPROXY");
		a_c.addText("OPIPROXY_VALUE_HIGHER_RESOLUTION_IMAGE_DOES_NOT_EXIST");
		a_c.addText("0");
		a_c.addText("OPIPROXY_VALUE_HIGHER_RESOLUTION_IMAGE_EXISTS");
		a_c.addText("1");
		a_c.addText("TIFF_TAG_IMAGE_ID");
		a_c.addText("ALL_ADOBE_PAGEMAKER_6_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("SubIFDs");
		a_c.addText("330");
		a_c.addText("ClipPath");
		a_c.addText("343");
		a_c.addText("XClipPathUnits");
		a_c.addText("344");
		a_c.addText("YClipPathUnits");
		a_c.addText("345");
		a_c.addText("Indexed");
		a_c.addText("346");
		a_c.addText("OPIProxy");
		a_c.addText("351");
		a_c.addText("ImageID");
		a_c.addText("32781");
		a_c.addText("7");
		a_c.addText("6");
	}
	public void c35_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{39, 43, 47, 51, 55, 62, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), dmDependency.Type.OwnFieldUse, new int[]{39, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{43, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{47, 51});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{47, 51, 72, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{55, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{55, 62, 72, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{68, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 72);
	}

	public void c36_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("<init>");
		a_c.addText("startsWith");
		a_c.addText("i");
		a_c.addText("haystack");
		a_c.addText("needle");
		a_c.addText("startsWith");
		a_c.addText("i");
		a_c.addText("haystack");
		a_c.addText("needle");
		a_c.addText("readByte");
		a_c.addText("255");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("exception");
		a_c.addText("result");
		a_c.addText("readBytes");
		a_c.addText(" could not be read.");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("length");
		a_c.addText("exception");
		a_c.addText("readBytes");
		a_c.addText("8");
		a_c.addText(" count: ");
		a_c.addText(" read: ");
		a_c.addText(" length: ");
		a_c.addText("count");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("length");
		a_c.addText("exception");
		a_c.addText("result");
		a_c.addText("read");
		a_c.addText("readBytes");
		a_c.addText("Unexpected EOF");
		a_c.addText("is");
		a_c.addText("count");
		a_c.addText("readAndVerifyBytes");
		a_c.addText("255");
		a_c.addText("Unexpected EOF.");
		a_c.addText("data");
		a_c.addText("b");
		a_c.addText("element");
		a_c.addText("is");
		a_c.addText("expected");
		a_c.addText("exception");
		a_c.addText("readAndVerifyBytes");
		a_c.addText("255");
		a_c.addText("Unexpected EOF.");
		a_c.addText("data");
		a_c.addText("b");
		a_c.addText("i");
		a_c.addText("is");
		a_c.addText("expected");
		a_c.addText("exception");
		a_c.addText("skipBytes");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("skipped");
		a_c.addText("is");
		a_c.addText("length");
		a_c.addText("exception");
		a_c.addText("total");
		a_c.addText("remainingBytes");
		a_c.addText("name");
		a_c.addText("bytes");
		a_c.addText("count");
		a_c.addText("slice");
		a_c.addText("8");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("count");
		a_c.addText("result");
		a_c.addText("head");
		a_c.addText("bytes");
		a_c.addText("count");
		a_c.addText("compareBytes");
		a_c.addText("i");
		a_c.addText("a");
		a_c.addText("aStart");
		a_c.addText("b");
		a_c.addText("bStart");
		a_c.addText("length");
		a_c.addText("read4Bytes");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("exception");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("byte3");
		a_c.addText("result");
		a_c.addText("read3Bytes");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("exception");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("result");
		a_c.addText("read2Bytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("name");
		a_c.addText("is");
		a_c.addText("exception");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("result");
		a_c.addText("printCharQuad");
		a_c.addText(": \'");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("\'");
		a_c.addText("msg");
		a_c.addText("i");
		a_c.addText("printCharQuad");
		a_c.addText(": \'");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("\'");
		a_c.addText("pw");
		a_c.addText("msg");
		a_c.addText("i");
		a_c.addText("printByteBits");
		a_c.addText(": \'");
		a_c.addText("255");
		a_c.addText("msg");
		a_c.addText("i");
		a_c.addText("charsToQuad");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("c1");
		a_c.addText("c2");
		a_c.addText("c3");
		a_c.addText("c4");
		a_c.addText("quadsToByteArray");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("quad");
		a_c.addText("arr");
		a_c.addText("searchQuad");
		a_c.addText("quad");
		a_c.addText("bis");
		a_c.addText("needle");
		a_c.addText("b");
		a_c.addText("position");
		a_c.addText("findNull");
		a_c.addText("src");
		a_c.addText("findNull");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("start");
		a_c.addText("getRAFBytes");
		a_c.addText("8");
		a_c.addText("count");
		a_c.addText("raf");
		a_c.addText("pos");
		a_c.addText("length");
		a_c.addText("exception");
		a_c.addText("result");
		a_c.addText("read");
		a_c.addText("skipBytes");
		a_c.addText("Couldn\'t skip bytes");
		a_c.addText("is");
		a_c.addText("length");
		a_c.addText("copyStreamToStream");
		a_c.addText("1024");
		a_c.addText("8");
		a_c.addText("is");
		a_c.addText("os");
		a_c.addText("buffer");
		a_c.addText("read");
		a_c.addText("getStreamBytes");
		a_c.addText("is");
		a_c.addText("os");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/common/BinaryFunctions;");
	}
	public void c36_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{38, 38, 57, 107, 153, 156, 162, 169, 169, 263, 312, 316});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Argument, new int[]{57, 124});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, new int[]{61, 65, 66, 129, 137});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{71, 80, 86, 103, 107, 124, 141, 187, 209, 230, 284, 325, 344, 350, 359});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{71, 80, 86, 103, 153, 156, 162, 270, 325, 359});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{71, 80, 86, 103, 107, 124, 141, 187, 209, 230, 284, 344, 350, 359});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{76, 94, 113, 130, 147, 192, 193, 194, 195, 214, 215, 216, 235, 236, 302, 356});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{78, 96, 149, 197, 218, 238, 338});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{103, 124, 124, 141, 162, 284, 312, 344, 359});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{107, 124});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{117, 121, 134, 138});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("long"), dmDependency.Type.Argument, new int[]{141, 325, 344});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{153, 153});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{187, 209, 230});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{201, 222, 242});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 256);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, 259);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("char"), dmDependency.Type.Argument, new int[]{267, 267, 267, 267});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.RandomAccessFile"), dmDependency.Type.Argument, 325);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.RandomAccessFile"), dmDependency.Type.MethodCall, new int[]{332, 336});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 350);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, 357);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 362);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 364);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 364);
	}

	public void c37_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("data");
		a_c.addText("getElementDescription");
		a_c.addText("Jpeg image data: ");
		a_c.addText(" bytes");
	}
	public void c37_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), m_classes.get("long"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.ConstructorCall, 22);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), m_classes.get("byte"), dmDependency.Type.LocalVar, 23);
	}

	public void c38_texts(dmClass a_c) {
		a_c.addText("fileHeader");
		a_c.addText("iconDatas");
		a_c.addText("<init>");
		a_c.addText("fileHeader");
		a_c.addText("iconDatas");
	}

	public void c39_texts(dmClass a_c) {
		a_c.addText("bufferedImage");
		a_c.addText("<init>");
		a_c.addText("iconInfo");
		a_c.addText("bufferedImage");
		a_c.addText("readBufferedImage");
		a_c.addText("dumpSubclass");
		a_c.addText("PNGIconData");
		a_c.addText("pw");
	}

	public void c40_texts(dmClass a_c) {
		a_c.addText("reserved");
		a_c.addText("iconType");
		a_c.addText("iconCount");
		a_c.addText("<init>");
		a_c.addText("reserved");
		a_c.addText("iconType");
		a_c.addText("iconCount");
		a_c.addText("dump");
		a_c.addText("FileHeader");
		a_c.addText("Reserved: ");
		a_c.addText("IconType: ");
		a_c.addText("IconCount: ");
		a_c.addText("pw");
	}

	public void c41_texts(dmClass a_c) {
		a_c.addText("size");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("compression");
		a_c.addText("sizeImage");
		a_c.addText("xPelsPerMeter");
		a_c.addText("yPelsPerMeter");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("<init>");
		a_c.addText("size");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("compression");
		a_c.addText("sizeImage");
		a_c.addText("pelsPerMeter");
		a_c.addText("pelsPerMeter2");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("dump");
		a_c.addText("BitmapHeader");
		a_c.addText("Size: ");
		a_c.addText("Width: ");
		a_c.addText("Height: ");
		a_c.addText("Planes: ");
		a_c.addText("BitCount: ");
		a_c.addText("Compression: ");
		a_c.addText("SizeImage: ");
		a_c.addText("XPelsPerMeter: ");
		a_c.addText("YPelsPerMeter: ");
		a_c.addText("ColorsUsed: ");
		a_c.addText("ColorsImportant: ");
		a_c.addText("pw");
	}

	public void c42_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".ico");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("ico-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".ico");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readFileHeader");
		a_c.addText("Reserved");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("IconType");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("IconCount");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("Not a Valid ICO File: reserved is ");
		a_c.addText("Not a Valid ICO File: icon type is ");
		a_c.addText("is");
		a_c.addText("reserved");
		a_c.addText("iconType");
		a_c.addText("iconCount");
		a_c.addText("readIconInfo");
		a_c.addText("Width");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("Height");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("ColorCount");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("Reserved");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("Planes");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("BitCount");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("ImageSize");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("ImageOffset");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("is");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("colorCount");
		a_c.addText("reserved");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("imageSize");
		a_c.addText("imageOffset");
		a_c.addText("readBitmapIconData");
		a_c.addText("size");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("width");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("height");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("planes");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("bitCount");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("compression");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("sizeImage");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("xPelsPerMeter");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("yPelsPerMeter");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("colorsUsed");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("ColorsImportant");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("redMask");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("greenMask");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("blueMask");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("RestOfFile");
		a_c.addText("40");
		a_c.addText("Not a Valid ICO File: Wrong bitmap header size ");
		a_c.addText("Not a Valid ICO File: Planes can\'t be ");
		a_c.addText("32");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("70");
		a_c.addText("8");
		a_c.addText("70");
		a_c.addText("66");
		a_c.addText("77");
		a_c.addText("56");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("transparency_map");
		a_c.addText("Not a Valid ICO File");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16777215");
		a_c.addText("bos");
		a_c.addText("ioEx");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("alphaByte");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("resultImage");
		a_c.addText("iconData");
		a_c.addText("fIconInfo");
		a_c.addText("is");
		a_c.addText("size");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("compression");
		a_c.addText("sizeImage");
		a_c.addText("xPelsPerMeter");
		a_c.addText("yPelsPerMeter");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("alphaMask");
		a_c.addText("restOfFile");
		a_c.addText("header");
		a_c.addText("bitmapPixelsOffset");
		a_c.addText("bitmapSize");
		a_c.addText("baos");
		a_c.addText("bmpInputStream");
		a_c.addText("bmpImage");
		a_c.addText("t_scanline_size");
		a_c.addText("colorMapSizeBytes");
		a_c.addText("transparencyMap");
		a_c.addText("allAlphasZero");
		a_c.addText("resultImage");
		a_c.addText("readIconData");
		a_c.addText("bufferedImage");
		a_c.addText("iconData");
		a_c.addText("fIconInfo");
		a_c.addText("imageFormat");
		a_c.addText("readImage");
		a_c.addText("i");
		a_c.addText("iconData");
		a_c.addText("i");
		a_c.addText("fileHeader");
		a_c.addText("fIconInfos");
		a_c.addText("fIconDatas");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("dumpImageFile");
		a_c.addText("iconData");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("contents");
		a_c.addText("getBufferedImage");
		a_c.addText("No icons in ICO file");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("contents");
		a_c.addText("fileHeader");
		a_c.addText("getAllBufferedImages");
		a_c.addText("iconData");
		a_c.addText("image");
		a_c.addText("i");
		a_c.addText("byteSource");
		a_c.addText("contents");
		a_c.addText("fileHeader");
		a_c.addText("result");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("Unknown parameter: ");
		a_c.addText("256");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("40");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("22");
		a_c.addText("40");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("firstKey");
		a_c.addText("bitCount");
		a_c.addText("hasTransparency");
		a_c.addText("bitCount");
		a_c.addText("bitCount");
		a_c.addText("bitCount");
		a_c.addText("argb");
		a_c.addText("i");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("argb");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("pixelDensity");
		a_c.addText("paletteFactory");
		a_c.addText("palette");
		a_c.addText("bitCount");
		a_c.addText("bos");
		a_c.addText("scanline_size");
		a_c.addText("t_scanline_size");
		a_c.addText("imageSize");
		a_c.addText("iconDirEntryWidth");
		a_c.addText("iconDirEntryHeight");
		a_c.addText("bitCache");
		a_c.addText("bitsInCache");
		a_c.addText("rowPadding");
		a_c.addText("t_row_padding");
		a_c.addText("<clinit>");
		a_c.addText(".ico");
		a_c.addText(".cur");
	}

	public void c43_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("colorCount");
		a_c.addText("reserved");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("imageSize");
		a_c.addText("imageOffset");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("colorCount");
		a_c.addText("reserved");
		a_c.addText("planes");
		a_c.addText("bitCount");
		a_c.addText("imageSize");
		a_c.addText("imageOffset");
		a_c.addText("dump");
		a_c.addText("IconInfo");
		a_c.addText("Width: ");
		a_c.addText("Height: ");
		a_c.addText("ColorCount: ");
		a_c.addText("Reserved: ");
		a_c.addText("Planes: ");
		a_c.addText("BitCount: ");
		a_c.addText("ImageSize: ");
		a_c.addText("ImageOffset: ");
		a_c.addText("pw");
	}

	public void c44_texts(dmClass a_c) {
		a_c.addText("header");
		a_c.addText("bufferedImage");
		a_c.addText("<init>");
		a_c.addText("iconInfo");
		a_c.addText("header");
		a_c.addText("bufferedImage");
		a_c.addText("readBufferedImage");
		a_c.addText("dumpSubclass");
		a_c.addText("BitmapIconData");
		a_c.addText("pw");
	}

	public void c45_texts(dmClass a_c) {
		a_c.addText("iconInfo");
		a_c.addText("<init>");
		a_c.addText("iconInfo");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("dumpSubclass");
		a_c.addText("readBufferedImage");
	}
	public void c38_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.OwnFieldUse, 537);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.OwnFieldUse, 538);
	}
	public void c39_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.ConstructorCall, 307);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, new int[]{308, 313});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 309);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{318, 319});
	}
	public void c40_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 123);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{126, 127, 128, 129, 130});
	}
	public void c41_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 240);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255});
	}
	public void c42_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{60, 434, 666});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{80, 524});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{80, 88, 95, 102, 109, 208, 518, 528, 561, 572, 583});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{80, 88, 95, 102, 109, 146, 208, 518, 528, 561, 572, 583, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{80, 88, 95, 102, 528, 561, 572, 583});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 88);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 95);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 102);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.Returns, 109);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{109, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{135, 136, 137, 188, 190, 194, 196, 198, 202, 204, 206, 326, 333, 340, 351, 356, 364, 372, 380, 383, 386, 394, 402, 403, 404, 406, 478});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{140, 143, 409, 412, 583});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.ConstructorCall, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.Returns, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.ConstructorCall, new int[]{208, 547});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{208, 208, 208, 208, 518, 518, 561});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.Returns, new int[]{208, 518});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{208, 518});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.Argument, new int[]{208, 518});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, new int[]{325, 460});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.MethodCall, 406);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.ConstructorCall, 425);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 433);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, new int[]{434, 666});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 458, 458, 458, 683, 684, 685, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 723, 737, 739, 749, 756, 763, 769, 784, 792, 798, 801});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 460);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), dmDependency.Type.ConstructorCall, 461);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), dmDependency.Type.MethodCall, 461);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{489, 490, 491, 500, 501, 502, 503, 507, 512, 511, 668, 673, 679, 679, 688, 689, 705, 706, 730, 731, 732, 733, 773, 774, 775, 776});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 501);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), dmDependency.Type.ConstructorCall, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, new int[]{518, 802});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{518, 518, 518, 528, 601, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, new int[]{518, 518});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.LocalVar, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.Imaging"), dmDependency.Type.MethodCall, new int[]{523, 525});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$PNGIconData"), dmDependency.Type.ConstructorCall, 526);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 528);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), dmDependency.Type.Returns, 528);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{544, 554});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.FieldUse, new int[]{547, 548, 552, 553, 580, 592, 593});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.ConstructorCall, 552);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.FieldUse, new int[]{554, 554});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), dmDependency.Type.ConstructorCall, 559);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{561, 561, 561, 561});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.LocalVar, new int[]{561, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.LocalVar, 561);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.LocalVar, new int[]{561, 572, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), dmDependency.Type.LocalVar, new int[]{561, 572, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 561);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 561);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$ImageContents"), dmDependency.Type.FieldUse, new int[]{568, 569, 579, 581, 591, 594});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$FileHeader"), dmDependency.Type.MethodCall, 568);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.MethodCall, new int[]{570, 581, 596});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{572, 583});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 601);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 601);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 601);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 643);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, 646);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, new int[]{647, 652});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.MethodCall, new int[]{658, 660, 718, 719, 744, 755});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.MethodCall, new int[]{711, 712});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.LocalVar, 802);
	}
	public void c43_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{163, 164, 165, 166, 175, 176, 177, 178});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{174, 175, 176, 177, 178, 179, 180, 181, 182});
	}
	public void c44_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), dmDependency.Type.ConstructorCall, 284);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.OwnFieldUse, new int[]{285, 297});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, new int[]{286, 291});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 287);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 287);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 291);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{296, 298});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapIconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$BitmapHeader"), dmDependency.Type.MethodCall, 297);
	}
	public void c45_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.OwnFieldUse, new int[]{263, 267});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, new int[]{264, 270});
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconInfo"), dmDependency.Type.MethodCall, 267);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, 268);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 270);
		d(m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser$IconData"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 270);
	}

	public void c46_texts(dmClass a_c) {
		a_c.addText("redShift");
		a_c.addText("greenShift");
		a_c.addText("blueShift");
		a_c.addText("alphaShift");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("alphaMask");
		a_c.addText("bytecount");
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("getMaskShift");
		a_c.addText("2147483647");
		a_c.addText("2147483647");
		a_c.addText("8");
		a_c.addText("mask");
		a_c.addText("trailingZeroes");
		a_c.addText("maskLength");
		a_c.addText("getNextRGB");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
		a_c.addText("32");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
		a_c.addText("16");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
		a_c.addText("Unknown BitsPerPixel: ");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("data");
		a_c.addText("data");
		a_c.addText("data");
		a_c.addText("data");
		a_c.addText("data");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("newline");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
	}
	public void c46_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), dmDependency.Type.ConstructorCall, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.FieldUse, new int[]{46, 47, 48, 49, 83, 86, 89, 92, 96});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{76, 109});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{76, 109});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, new int[]{83, 86, 89, 92, 96});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 84);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{87, 90, 93, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{87, 90, 93});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{87, 90, 93, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 96);
	}

	public void c47_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getPaletteSize");
		a_c.addText("getBitsPerPixel");
		a_c.addText("24");
		a_c.addText("writePalette");
		a_c.addText("bos");
		a_c.addText("getImageData");
		a_c.addText("16777215");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("rgb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("baos");
		a_c.addText("bytecount");
	}
	public void c47_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("byte"), dmDependency.Type.Returns, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{51, 52, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{69, 70, 71, 75, 80});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 80);
	}

	public void c50_texts(dmClass a_c) {
		a_c.addText("records");
		a_c.addText("rawBlocks");
		a_c.addText("<init>");
		a_c.addText("records");
		a_c.addText("rawBlocks");
		a_c.addText("getRecords");
		a_c.addText("getRawBlocks");
		a_c.addText("getNonIptcBlocks");
		a_c.addText("block");
		a_c.addText("result");
	}
	public void c50_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Returns, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.Returns, new int[]{34, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.MethodCall, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.LocalVar, new int[]{48, 48});
	}

	public void c51_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("<init>");
		a_c.addText("colorSpaceTypeToName");
		a_c.addText("TYPE_CMYK");
		a_c.addText("TYPE_RGB");
		a_c.addText("CS_sRGB");
		a_c.addText("CS_GRAY");
		a_c.addText("CS_CIEXYZ");
		a_c.addText("CS_LINEAR_RGB");
		a_c.addText("CS_PYCC");
		a_c.addText("unknown");
		a_c.addText("cs");
		a_c.addText("dumpColorSpace");
		a_c.addText(": type: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText(": Unknown ColorSpace: ");
		a_c.addText("prefix");
		a_c.addText("cs");
		a_c.addText("iccColorSpace");
		a_c.addText("iccProfile");
		a_c.addText("bytes");
		a_c.addText("parser");
		a_c.addText("info");
		a_c.addText("dump");
		a_c.addText("src");
		a_c.addText("dump");
		a_c.addText(": dump");
		a_c.addText("prefix");
		a_c.addText("src");
		a_c.addText("dumpBIProps");
		a_c.addText(": no props");
		a_c.addText(": ");
		a_c.addText(": ");
		a_c.addText("key");
		a_c.addText("prefix");
		a_c.addText("src");
		a_c.addText("keys");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/ImageDump;");
	}
	public void c51_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.Argument, new int[]{32, 56});
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.MethodCall, new int[]{39, 61});
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.MethodCall, 71);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.MethodCall, 73);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.MethodCall, 77);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.MethodCall, 78);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("byte"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{79, 83, 89});
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{87, 92, 99});
		d(m_classes.get("org.apache.commons.imaging.ImageDump"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, 87);
	}

	public void c52_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".wbmp");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Wireless Application Protocol Bitmap Format");
		a_c.addText("getDefaultExtension");
		a_c.addText(".wbmp");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("WBMP");
		a_c.addText("Wireless Application Protocol Bitmap");
		a_c.addText("image/vnd.wap.wbmp");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("wbmpHeader");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("wbmpHeader");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readMultiByteInteger");
		a_c.addText("Header");
		a_c.addText("Error reading WBMP header");
		a_c.addText("7");
		a_c.addText("127");
		a_c.addText("31");
		a_c.addText("Overflow reading WBMP multi-byte field");
		a_c.addText("128");
		a_c.addText("is");
		a_c.addText("value");
		a_c.addText("nextByte");
		a_c.addText("totalBits");
		a_c.addText("writeMultiByteInteger");
		a_c.addText("28");
		a_c.addText("127");
		a_c.addText("128");
		a_c.addText("127");
		a_c.addText("next7Bits");
		a_c.addText("position");
		a_c.addText("os");
		a_c.addText("value");
		a_c.addText("wroteYet");
		a_c.addText("readWbmpHeader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("readWbmpHeader");
		a_c.addText("Invalid/unsupported WBMP type ");
		a_c.addText("FixHeaderField");
		a_c.addText("Invalid WBMP File");
		a_c.addText("159");
		a_c.addText("Invalid/unsupported WBMP FixHeaderField 0x");
		a_c.addText("255");
		a_c.addText("is");
		a_c.addText("typeField");
		a_c.addText("fixHeaderField");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("readImage");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("Pixels");
		a_c.addText("Error reading image pixels");
		a_c.addText("10");
		a_c.addText("16777215");
		a_c.addText("wbmpHeader");
		a_c.addText("is");
		a_c.addText("rowLength");
		a_c.addText("image");
		a_c.addText("dataBuffer");
		a_c.addText("raster");
		a_c.addText("palette");
		a_c.addText("colorModel");
		a_c.addText("getBufferedImage");
		a_c.addText("wbmpHeader");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("Unknown parameter: ");
		a_c.addText("128");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("127");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("firstKey");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("sample");
		a_c.addText("x");
		a_c.addText("pixel");
		a_c.addText("nextBit");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("<clinit>");
		a_c.addText(".wbmp");
	}

	public void c53_texts(dmClass a_c) {
		a_c.addText("typeField");
		a_c.addText("fixHeaderField");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("<init>");
		a_c.addText("typeField");
		a_c.addText("fixHeaderField");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("dump");
		a_c.addText("WbmpHeader");
		a_c.addText("TypeField: ");
		a_c.addText("FixHeaderField: 0x");
		a_c.addText("255");
		a_c.addText("Width: ");
		a_c.addText("Height: ");
		a_c.addText("pw");
	}
	public void c52_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 46);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{67, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{67, 74, 81, 93, 99, 155, 161, 184, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{67, 74, 81, 93, 99, 141, 155, 161, 184, 191, 205, 216});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{67, 74, 81, 93, 155, 184, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.FieldUse, new int[]{81, 81, 93, 93, 196, 197, 200, 200});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 81);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 81);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 81);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 81);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{99, 161, 191});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{132, 172, 197});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{137, 168, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{141, 216});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{150, 154, 236, 254, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.Returns, new int[]{155, 161});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{159, 212});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{161, 161, 161, 161, 216, 216, 216, 216});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 161);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.ConstructorCall, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{184, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.MethodCall, 190);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{191, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.Argument, 191);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.ConstructorCall, 199);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.ConstructorCall, 203);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.MethodCall, 206);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 206);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.LocalVar, 205);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, 205);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.LocalVar, 205);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), dmDependency.Type.LocalVar, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 232);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{237, 238, 240, 243, 244});
	}
	public void c53_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{111, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 114);
		d(m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{117, 118, 119, 121, 122});
	}

	public void c54_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("L");
		a_c.addText("C");
		a_c.addText("H");
		a_c.addText("<init>");
		a_c.addText("L");
		a_c.addText("C");
		a_c.addText("H");
		a_c.addText("toString");
		a_c.addText("{L: ");
		a_c.addText(", C: ");
		a_c.addText(", H: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("that");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("297.0");
		a_c.addText("53.0");
		a_c.addText("80.0");
		a_c.addText("67.0");
		a_c.addText("88.0");
		a_c.addText("-86.0");
		a_c.addText("83.0");
		a_c.addText("32.0");
		a_c.addText("79.0");
		a_c.addText("-108.0");
	}
	public void c54_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), m_classes.get("long"), dmDependency.Type.LocalVar, 128);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78});
	}

	public void c55_texts(dmClass a_c) {
		a_c.addText("STARTING_ROW");
		a_c.addText("STARTING_COL");
		a_c.addText("ROW_INCREMENT");
		a_c.addText("COL_INCREMENT");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("bitsPerPixel");
		a_c.addText("fPNGChunkPLTE");
		a_c.addText("gammaCorrection");
		a_c.addText("transparencyFilter");
		a_c.addText("visit");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("bi");
		a_c.addText("fBitParser");
		a_c.addText("pixelIndexInScanline");
		a_c.addText("rgb");
		a_c.addText("drive");
		a_c.addText("7");
		a_c.addText("columnsInRow");
		a_c.addText("bitsPerScanLine");
		a_c.addText("pixelBytesPerScanLine");
		a_c.addText("unfiltered");
		a_c.addText("fBitParser");
		a_c.addText("x");
		a_c.addText("pixelIndexInScanline");
		a_c.addText("prev");
		a_c.addText("y");
		a_c.addText("pass");
		a_c.addText("<clinit>");
		a_c.addText("7");
		a_c.addText("10");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("10");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
	}
	public void c55_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{1, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{43, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{43, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.Argument, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, 49);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.ConstructorCall, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{89, 89});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.LocalVar, 89);
	}

	public void c56_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("6");
		a_c.addText("Invalid data");
		a_c.addText("numbers");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("values");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c56_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{32, 33, 35, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{34, 37, 43, 46, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("byte"), dmDependency.Type.LocalVar, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("byte"), dmDependency.Type.Returns, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 55);
	}

	public void c57_texts(dmClass a_c) {
		a_c.addText("blockType");
		a_c.addText("blockNameBytes");
		a_c.addText("blockData");
		a_c.addText("<init>");
		a_c.addText("Block name bytes must not be null.");
		a_c.addText("Block data bytes must not be null.");
		a_c.addText("blockType");
		a_c.addText("blockNameBytes");
		a_c.addText("blockData");
		a_c.addText("getBlockType");
		a_c.addText("getBlockNameBytes");
		a_c.addText("getBlockData");
		a_c.addText("isIPTCBlock");
		a_c.addText("1028");
	}
	public void c57_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{34, 35, 44, 48});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{40, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{44, 48});
	}

	public void c58_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c58_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("short"), dmDependency.Type.Returns, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), m_classes.get("short"), dmDependency.Type.Argument, 31);
	}

	public void c59_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("decompress");
		a_c.addText("8");
		a_c.addText("Unable to decompress image");
		a_c.addText("inflater");
		a_c.addText("result");
		a_c.addText("e");
		a_c.addText("bytes");
		a_c.addText("expectedSize");
		a_c.addText("compress");
		a_c.addText("Unable to compress image");
		a_c.addText("compressOut");
		a_c.addText("e");
		a_c.addText("bytes");
		a_c.addText("out");
	}
	public void c59_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 39);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{39, 59});
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{39, 59});
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("byte"), dmDependency.Type.LocalVar, 59);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 59);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 73);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 77);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 79);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 79);
	}

	public void c60_texts(dmClass a_c) {
		a_c.addText("gifHeaderInfo");
		a_c.addText("blocks");
		a_c.addText("globalColorTable");
		a_c.addText("<init>");
		a_c.addText("gifHeaderInfo");
		a_c.addText("globalColorTable");
		a_c.addText("blocks");
	}
	public void c60_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.OwnFieldUse, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 30);
	}

	public void c61_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("1");
		a_c.addText("colorComponent");
		a_c.addText("<init>");
		a_c.addText("colorComponent");
		a_c.addText("compare");
		a_c.addText("c1");
		a_c.addText("c2");
		a_c.addText("compare");
	}

	public void c62_texts(dmClass a_c) {
		a_c.addText("<clinit>");
		a_c.addText("10");
	}
	public void c61_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("java.io.Serializable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.OwnFieldUse, new int[]{43, 48});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.Argument, new int[]{44, 44});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator$1"), dmDependency.Type.FieldUse, 48);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.FieldUse, new int[]{50, 50, 52, 52, 54, 54, 56, 56});
	}
	public void c62_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, new int[]{48, 48, 48, 48, 48});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.FieldUse, new int[]{48, 48, 48, 48});
	}

	public void c63_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("<init>");
		a_c.addText("fileName");
		a_c.addText("bytes");
		a_c.addText("<init>");
		a_c.addText("bytes");
		a_c.addText("getInputStream");
		a_c.addText("getBlock");
		a_c.addText("Could not read block (block start: ");
		a_c.addText(", block length: ");
		a_c.addText(", data length: ");
		a_c.addText(").");
		a_c.addText("8");
		a_c.addText("startLong");
		a_c.addText("length");
		a_c.addText("start");
		a_c.addText("result");
		a_c.addText("getLength");
		a_c.addText("getAll");
		a_c.addText("getDescription");
		a_c.addText(" byte array");
	}
	public void c63_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 29});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{28, 37, 44, 46, 52, 58, 63, 68});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("java.io.InputStream"), dmDependency.Type.Returns, 33);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 37);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{37, 58});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{37, 58});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("long"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 46);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("byte"), dmDependency.Type.LocalVar, 53);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), m_classes.get("long"), dmDependency.Type.Returns, 53);
	}

	public void c64_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("interpretPixel");
		a_c.addText("Invalid length of bits per sample (expected 3).");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("cieL");
		a_c.addText("cieA");
		a_c.addText("cieB");
		a_c.addText("tristimulusValues");
		a_c.addText("rgbValues");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("getTristimulusValues");
		a_c.addText("100.0");
		a_c.addText("255.0");
		a_c.addText("16.0");
		a_c.addText("116.0");
		a_c.addText("500.0");
		a_c.addText("200.0");
		a_c.addText("3.0");
		a_c.addText("3.0");
		a_c.addText("3.0");
		a_c.addText("0.008856");
		a_c.addText("0.13793103");
		a_c.addText("7.787");
		a_c.addText("0.008856");
		a_c.addText("0.13793103");
		a_c.addText("7.787");
		a_c.addText("0.008856");
		a_c.addText("0.13793103");
		a_c.addText("7.787");
		a_c.addText("95.047");
		a_c.addText("100.0");
		a_c.addText("108.883");
		a_c.addText("95.047");
		a_c.addText("100.0");
		a_c.addText("108.883");
		a_c.addText("cieL");
		a_c.addText("cieA");
		a_c.addText("cieB");
		a_c.addText("var_Y");
		a_c.addText("var_X");
		a_c.addText("var_Z");
		a_c.addText("var_x_cube");
		a_c.addText("var_y_cube");
		a_c.addText("var_z_cube");
		a_c.addText("ref_X");
		a_c.addText("ref_Y");
		a_c.addText("ref_Z");
		a_c.addText("values");
		a_c.addText("getRgbValues");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("3.2406");
		a_c.addText("-1.5372");
		a_c.addText("-0.4986");
		a_c.addText("-0.9689");
		a_c.addText("1.8758");
		a_c.addText("0.0415");
		a_c.addText("0.0557");
		a_c.addText("-0.204");
		a_c.addText("1.057");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("tristimulusValues");
		a_c.addText("var_X");
		a_c.addText("var_Y");
		a_c.addText("var_Z");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("values");
	}

	public void c65_texts(dmClass a_c) {
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("z");
		a_c.addText("<init>");
	}

	public void c66_texts(dmClass a_c) {
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("<init>");
	}
	public void c64_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues"), dmDependency.Type.FieldUse, new int[]{81, 82, 83, 183, 184, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues"), dmDependency.Type.LocalVar, new int[]{88, 140});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues"), dmDependency.Type.LocalVar, new int[]{88, 186});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues"), dmDependency.Type.Returns, 88);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues"), dmDependency.Type.ConstructorCall, 136);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues"), dmDependency.Type.FieldUse, new int[]{137, 138, 139, 153, 154, 155});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues"), dmDependency.Type.Returns, 140);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$TristimulusValues"), dmDependency.Type.Argument, 140);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv$RgbValues"), dmDependency.Type.ConstructorCall, 182);
	}
	public void c65_deps() {
	}
	public void c66_deps() {
	}

	public void c67_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("isOffset");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c67_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 29});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{28, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{28, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{33, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("byte"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{36, 40});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIFD"), m_classes.get("byte"), dmDependency.Type.Returns, 36);
	}

	public void c69_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_WANG_ANNOTATION");
		a_c.addText("ALL_WANG_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("WangAnnotation");
		a_c.addText("32932");
	}
	public void c69_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 36);
	}

	public void c70_texts(dmClass a_c) {
		a_c.addText("getName");
		a_c.addText("getTypeDescription");
		a_c.addText("getSignature");
	}

	public void c71_texts(dmClass a_c) {
		a_c.addText("TEXT_ENCODING_ASCII");
		a_c.addText("TEXT_ENCODING_JIS");
		a_c.addText("TEXT_ENCODING_UNICODE_LE");
		a_c.addText("TEXT_ENCODING_UNICODE_BE");
		a_c.addText("TEXT_ENCODING_UNDEFINED");
		a_c.addText("TEXT_ENCODINGS");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("exifDirectory");
		a_c.addText("isText");
		a_c.addText("encodeValue");
		a_c.addText("GPS text value not String");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("encoding");
		a_c.addText("asciiBytes");
		a_c.addText("decodedAscii");
		a_c.addText("encoding");
		a_c.addText("unicodeBytes");
		a_c.addText("result");
		a_c.addText("e");
		a_c.addText("fieldType");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("s");
		a_c.addText("getValue");
		a_c.addText("Unexpected ASCII type decoded");
		a_c.addText("entry.type: ");
		a_c.addText("entry.directoryType: ");
		a_c.addText("entry.type: ");
		a_c.addText("entry.type: ");
		a_c.addText("GPS text field not encoded as bytes.");
		a_c.addText("8");
		a_c.addText("object");
		a_c.addText("decodedString");
		a_c.addText("reEncodedBytes");
		a_c.addText("e");
		a_c.addText("encoding");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("getValue");
		a_c.addText("<clinit>");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("65");
		a_c.addText("83");
		a_c.addText("67");
		a_c.addText("73");
		a_c.addText("73");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("US-ASCII");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("74");
		a_c.addText("73");
		a_c.addText("83");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("JIS");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("85");
		a_c.addText("78");
		a_c.addText("73");
		a_c.addText("67");
		a_c.addText("79");
		a_c.addText("68");
		a_c.addText("6");
		a_c.addText("69");
		a_c.addText("7");
		a_c.addText("UTF-16LE");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("85");
		a_c.addText("78");
		a_c.addText("73");
		a_c.addText("67");
		a_c.addText("79");
		a_c.addText("68");
		a_c.addText("6");
		a_c.addText("69");
		a_c.addText("7");
		a_c.addText("UTF-16BE");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("ISO-8859-1");
	}

	public void c72_texts(dmClass a_c) {
		a_c.addText("prefix");
		a_c.addText("encodingName");
		a_c.addText("<init>");
		a_c.addText("prefix");
		a_c.addText("encodingName");
	}
	public void c71_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{64, 123, 124, 137, 139});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("byte"), dmDependency.Type.Returns, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{86, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), dmDependency.Type.OwnFieldUse, new int[]{92, 93, 96, 98, 98, 100, 107, 109, 155, 38, 41, 44, 47, 50, 54, 54, 54, 54, 54, 54});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), dmDependency.Type.FieldUse, new int[]{92, 93, 96, 98, 98, 100, 111, 112, 113, 113, 114, 156, 156, 159, 159, 159, 163, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("java.io.UnsupportedEncodingException"), dmDependency.Type.MethodCall, new int[]{117, 171});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{117, 117, 117, 117, 177, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), dmDependency.Type.LocalVar, new int[]{117, 117, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("java.io.UnsupportedEncodingException"), dmDependency.Type.LocalVar, new int[]{117, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{117, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, new int[]{117, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{123, 137, 139, 142, 143, 144, 145, 149});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), dmDependency.Type.MethodCall, 124);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{135, 146, 171});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{142, 143, 144, 145});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{152, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{156, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), dmDependency.Type.ConstructorCall, new int[]{38, 41, 44, 47, 50, 54});
	}
	public void c72_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 77);
	}

	public void c74_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("version");
		a_c.addText("reserved");
		a_c.addText("channels");
		a_c.addText("rows");
		a_c.addText("columns");
		a_c.addText("depth");
		a_c.addText("mode");
		a_c.addText("<init>");
		a_c.addText("version");
		a_c.addText("reserved");
		a_c.addText("channels");
		a_c.addText("rows");
		a_c.addText("columns");
		a_c.addText("depth");
		a_c.addText("mode");
		a_c.addText("getReserved");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("e");
		a_c.addText("dump");
		a_c.addText("Header");
		a_c.addText("Version: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Channels: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Rows: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Columns: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Depth: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Mode: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("Reserved: ");
		a_c.addText("pw");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/psd/PsdHeaderInfo;");
	}
	public void c74_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{39, 49});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{39, 49, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Returns, 46);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{55, 58, 58, 58, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{56, 57, 58, 58, 58, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.MethodCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 61);
	}

	public void c75_texts(dmClass a_c) {
		a_c.addText("pieces");
		a_c.addText("exifPieces");
		a_c.addText("<init>");
		a_c.addText("pieces");
		a_c.addText("exifPieces");
	}

	public void c76_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("write");
		a_c.addText("<init>");
		a_c.addText("x0");
	}

	public void c77_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("1401484357224931218");
		a_c.addText("<init>");
		a_c.addText("message");
	}

	public void c78_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}

	public void c79_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("analyzeJFIF");
		a_c.addText("byteSource");
		a_c.addText("pieces");
		a_c.addText("exifPieces");
		a_c.addText("visitor");
		a_c.addText("removeExifMetadata");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeExifMetadata");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeExifMetadata");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeExifMetadata");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("jfifPieces");
		a_c.addText("pieces");
		a_c.addText("updateExifMetadataLossless");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossless");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossless");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossless");
		a_c.addText("trimmed exif bytes");
		a_c.addText("6");
		a_c.addText("exifPiece");
		a_c.addText("exifBytes");
		a_c.addText("writer");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("jfifPieces");
		a_c.addText("pieces");
		a_c.addText("writer");
		a_c.addText("includeEXIFPrefix");
		a_c.addText("newBytes");
		a_c.addText("updateExifMetadataLossy");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossy");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossy");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("byteSource");
		a_c.addText("updateExifMetadataLossy");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("jfifPieces");
		a_c.addText("pieces");
		a_c.addText("writer");
		a_c.addText("includeEXIFPrefix");
		a_c.addText("newBytes");
		a_c.addText("writeSegmentsReplacingExif");
		a_c.addText("-31");
		a_c.addText("65535");
		a_c.addText("APP1 Segment is too long: ");
		a_c.addText("65504");
		a_c.addText("65505");
		a_c.addText("-31");
		a_c.addText("65535");
		a_c.addText("APP1 Segment is too long: ");
		a_c.addText("piece");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("index");
		a_c.addText("firstSegment");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("piece");
		a_c.addText("hasExif");
		a_c.addText("APP1Written");
		a_c.addText("os");
		a_c.addText("outputStream");
		a_c.addText("segments");
		a_c.addText("newBytes");
		a_c.addText("writeExifSegment");
		a_c.addText("writer");
		a_c.addText("outputSet");
		a_c.addText("includeEXIFPrefix");
		a_c.addText("os");
	}

	public void c80_texts(dmClass a_c) {
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("<init>");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("write");
		a_c.addText("os");
	}

	public void c81_texts(dmClass a_c) {
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("write");
		a_c.addText("os");
	}

	public void c82_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65505");
		a_c.addText("piece");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}
	public void c75_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.Argument, new int[]{1, 1});
	}
	public void c76_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.ConstructorCall, 87);
	}
	public void c77_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 592);
	}
	public void c78_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, 117);
	}
	public void c79_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), dmDependency.Type.ConstructorCall, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{73, 191, 216, 234, 252, 278, 306, 334, 362, 412, 437, 462, 487});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{73, 191, 216, 234, 252, 278, 306, 334, 362, 412, 437, 462, 487, 520, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), dmDependency.Type.Returns, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{73, 252, 362, 487});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), dmDependency.Type.ConstructorCall, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.ConstructorCall, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.MethodCall, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), dmDependency.Type.ConstructorCall, 191);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.LocalVar, new int[]{191, 191, 278, 412, 520, 586, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.LocalVar, 191);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{191, 216, 234, 252, 278, 306, 334, 362, 412, 437, 462, 487, 520, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{191, 278, 462});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{191, 216, 234, 252, 278, 306, 334, 362, 412, 437, 462, 487, 520});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{214, 304, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.LocalVar, new int[]{216, 234, 252, 306, 334, 362, 437, 462, 487});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{216, 306, 412});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{232, 332, 435});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{234, 334, 437});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.ConstructorCall, new int[]{250, 360, 460});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), dmDependency.Type.FieldUse, new int[]{269, 390, 395, 397, 511});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieces"), dmDependency.Type.LocalVar, new int[]{278, 412, 520});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.Argument, new int[]{278, 306, 334, 362, 412, 437, 462, 487, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), dmDependency.Type.FieldUse, new int[]{399, 549});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 400);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.FieldUse, new int[]{402, 405, 513});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), dmDependency.Type.ConstructorCall, 402);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), dmDependency.Type.ConstructorCall, new int[]{405, 513});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), dmDependency.Type.LocalVar, new int[]{412, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{412, 412, 520, 586, 586, 586, 586});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.LocalVar, new int[]{412, 412, 520});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.Argument, 520);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.DataOutputStream"), dmDependency.Type.ConstructorCall, 526);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{527, 602});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, new int[]{527, 602});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{539, 545, 570, 576});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException"), dmDependency.Type.ConstructorCall, new int[]{541, 572});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif"), dmDependency.Type.ConstructorCall, 552);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.DataOutputStream"), dmDependency.Type.MethodCall, new int[]{578, 579, 580, 585, 585, 585, 585});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.MethodCall, 582);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.DataOutputStream"), dmDependency.Type.LocalVar, 586);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("byte"), dmDependency.Type.Returns, 586);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.Argument, 586);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 599);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{603, 604, 609});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.MethodCall, 607);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 609);
	}
	public void c80_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.ConstructorCall, 126);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{127, 128, 133, 134});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 129);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 129);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{133, 134});
	}
	public void c81_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.ConstructorCall, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{100, 101, 102, 107, 108, 109});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{107, 108, 109});
	}
	public void c82_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{146, 146, 152, 152, 152});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceImageData"), dmDependency.Type.ConstructorCall, 151);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 152);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 152);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, new int[]{162, 166});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegmentExif"), dmDependency.Type.ConstructorCall, 173);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPiece"), dmDependency.Type.LocalVar, 178);
	}

	public void c83_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c83_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("short"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 32);
	}

	public void c84_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("APP13_BYTE_ORDER");
		a_c.addText("PHOTOSHOP_IGNORED_BLOCK_TYPE");
		a_c.addText("<init>");
		a_c.addText("isPhotoshopJpegSegment");
		a_c.addText("segmentData");
		a_c.addText("index");
		a_c.addText("parsePhotoshopSegment");
		a_c.addText("STRICT");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("strict");
		a_c.addText("parsePhotoshopSegment");
		a_c.addText("block");
		a_c.addText("bytes");
		a_c.addText("strict");
		a_c.addText("records");
		a_c.addText("blocks");
		a_c.addText("parseIPTCBlock");
		a_c.addText("255");
		a_c.addText("tagMarker: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("28");
		a_c.addText("Unexpected record tag marker in IPTC data.");
		a_c.addText("255");
		a_c.addText("recordNumber: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("255");
		a_c.addText("recordType: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("32767");
		a_c.addText("32767");
		a_c.addText("extendedDataset. dataFieldCountLength: ");
		a_c.addText("ignore record version record! ");
		a_c.addText("tagMarker");
		a_c.addText("recordNumber");
		a_c.addText("recordType");
		a_c.addText("recordSize");
		a_c.addText("extendedDataset");
		a_c.addText("dataFieldCountLength");
		a_c.addText("recordData");
		a_c.addText("value");
		a_c.addText("iptcType");
		a_c.addText("element");
		a_c.addText("bytes");
		a_c.addText("elements");
		a_c.addText("index");
		a_c.addText("parseAllBlocks");
		a_c.addText("App13 Segment missing identification string");
		a_c.addText("Not a Photoshop App13 Segment");
		a_c.addText("Image Resource Block missing identification string");
		a_c.addText("Invalid Image Resource Block Signature");
		a_c.addText("Image Resource Block missing type");
		a_c.addText("blockType: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("Skipping blockType: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("Name length");
		a_c.addText("Image Resource Block missing name length");
		a_c.addText("blockNameLength: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("Block name bytes");
		a_c.addText("Image Resource Block has invalid name");
		a_c.addText("8");
		a_c.addText("Invalid Image Resource Block name");
		a_c.addText("Padding byte");
		a_c.addText("Image Resource Block missing padding byte");
		a_c.addText("Image Resource Block missing size");
		a_c.addText("blockSize: ");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("Invalid Block Size : ");
		a_c.addText(" > ");
		a_c.addText("Invalid Image Resource Block data");
		a_c.addText("Padding byte");
		a_c.addText("Image Resource Block missing padding byte");
		a_c.addText("imageResourceBlockSignature");
		a_c.addText("ioEx");
		a_c.addText("blockNameBytes");
		a_c.addText("blockNameBytes");
		a_c.addText("ioEx");
		a_c.addText("blockData");
		a_c.addText("ioEx");
		a_c.addText("imageResourceBlockSignature");
		a_c.addText("blockType");
		a_c.addText("blockNameLength");
		a_c.addText("blockNameBytes");
		a_c.addText("blockSize");
		a_c.addText("blockData");
		a_c.addText("idString");
		a_c.addText("bis");
		a_c.addText("bytes");
		a_c.addText("strict");
		a_c.addText("blocks");
		a_c.addText("writePhotoshopApp13Segment");
		a_c.addText("65535");
		a_c.addText("Invalid IPTC block type.");
		a_c.addText("255");
		a_c.addText("IPTC block name is too long: ");
		a_c.addText("32767");
		a_c.addText("IPTC block data is too long: ");
		a_c.addText("blockNameBytes");
		a_c.addText("blockData");
		a_c.addText("block");
		a_c.addText("data");
		a_c.addText("os");
		a_c.addText("bos");
		a_c.addText("blocks");
		a_c.addText("writeIPTCBlock");
		a_c.addText("28");
		a_c.addText("28");
		a_c.addText("255");
		a_c.addText("Invalid record type: ");
		a_c.addText("Invalid record value, not ISO-8859-1");
		a_c.addText("recordData");
		a_c.addText("element");
		a_c.addText("comparator");
		a_c.addText("bos");
		a_c.addText("elements");
		a_c.addText("blockData");
		a_c.addText("baos");
		a_c.addText("lambda$writeIPTCBlock$0");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/jpeg/iptc/IptcParser;");
		a_c.addText("1084");
		a_c.addText("1085");
		a_c.addText("1086");
		a_c.addText("1087");
	}
	public void c84_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{69, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{70, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{73, 78, 80, 272, 275, 289, 303, 371, 375});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{73, 200, 272, 284, 294, 303, 307, 314, 318, 328, 332, 345, 356});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, new int[]{78, 273, 275, 371});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{79, 284, 294, 332, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{80, 187});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{79, 124, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{79, 124, 142, 260, 361, 404});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Returns, new int[]{79, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.MethodCall, new int[]{135, 139, 377, 377, 380, 382, 392});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.ConstructorCall, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.LocalVar, new int[]{142, 142, 361, 404, 404});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.LocalVar, new int[]{142, 260, 260, 457, 457});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Returns, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{153, 163, 184, 193, 295, 299, 309, 333});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{241, 444, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), dmDependency.Type.MethodCall, 243);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.ConstructorCall, 256);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{260, 260, 361, 361, 361, 361, 361, 361, 361, 404, 404, 457});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.LocalVar, 260);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.Returns, 260);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 267);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{276, 290, 340});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.ConstructorCall, 353);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{361, 361, 361, 361});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, new int[]{361, 361, 361});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 361);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{361, 404});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{361, 404});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Argument, 361);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, new int[]{368, 410});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, new int[]{369, 411});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.MethodCall, 373);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{375, 380, 386, 387, 389, 396, 397, 399, 403, 414, 415, 416, 418, 419, 435, 436, 442, 450, 451, 453, 453, 453, 453});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{378, 384, 394, 440, 446});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{404, 455});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, new int[]{404, 457});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, new int[]{404, 457});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Argument, new int[]{404, 457, 457});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.FieldUse, new int[]{416, 416, 431});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.FieldUse, new int[]{431, 437, 437, 439, 442, 425, 425});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.MethodCall, new int[]{437, 438, 440, 442, 425, 425});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.MethodCall, new int[]{444, 445});
	}

	public void c85_texts(dmClass a_c) {
		a_c.addText("pieces");
		a_c.addText("segmentPieces");
		a_c.addText("<init>");
		a_c.addText("pieces");
		a_c.addText("segmentPieces");
	}

	public void c86_texts(dmClass a_c) {
		a_c.addText("JPEG_BYTE_ORDER");
		a_c.addText("EXIF_SEGMENT_FILTER");
		a_c.addText("XMP_SEGMENT_FILTER");
		a_c.addText("PHOTOSHOP_APP13_SEGMENT_FILTER");
		a_c.addText("<init>");
		a_c.addText("analyzeJFIF");
		a_c.addText("byteSource");
		a_c.addText("pieces");
		a_c.addText("segmentPieces");
		a_c.addText("visitor");
		a_c.addText("removeXmpSegments");
		a_c.addText("segments");
		a_c.addText("removePhotoshopApp13Segments");
		a_c.addText("segments");
		a_c.addText("findPhotoshopApp13Segments");
		a_c.addText("segments");
		a_c.addText("removeExifSegments");
		a_c.addText("segments");
		a_c.addText("filterSegments");
		a_c.addText("segments");
		a_c.addText("filter");
		a_c.addText("filterSegments");
		a_c.addText("piece");
		a_c.addText("segments");
		a_c.addText("filter");
		a_c.addText("reverse");
		a_c.addText("result");
		a_c.addText("insertBeforeFirstAppSegments");
		a_c.addText("JPEG file has no APP segments.");
		a_c.addText("piece");
		a_c.addText("segment");
		a_c.addText("i");
		a_c.addText("segments");
		a_c.addText("newSegments");
		a_c.addText("firstAppIndex");
		a_c.addText("result");
		a_c.addText("insertAfterLastAppSegments");
		a_c.addText("JPEG file has no APP segments.");
		a_c.addText("piece");
		a_c.addText("segment");
		a_c.addText("i");
		a_c.addText("segments");
		a_c.addText("newSegments");
		a_c.addText("lastAppIndex");
		a_c.addText("result");
		a_c.addText("writeSegments");
		a_c.addText("piece");
		a_c.addText("os");
		a_c.addText("outputStream");
		a_c.addText("segments");
		a_c.addText("lambda$static$2");
		a_c.addText("segment");
		a_c.addText("lambda$static$1");
		a_c.addText("segment");
		a_c.addText("lambda$static$0");
		a_c.addText("segment");
		a_c.addText("access$000");
		a_c.addText("<clinit>");
	}

	public void c87_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("write");
		a_c.addText("toString");
		a_c.addText("[");
		a_c.addText("]");
	}

	public void c88_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("-1062145751550646846");
		a_c.addText("<init>");
		a_c.addText("message");
	}

	public void c89_texts(dmClass a_c) {
		a_c.addText("filter");
	}

	public void c90_texts(dmClass a_c) {
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("toString");
		a_c.addText("[");
		a_c.addText(" (0x");
		a_c.addText(")]");
		a_c.addText("write");
		a_c.addText("os");
		a_c.addText("isApp1Segment");
		a_c.addText("65505");
		a_c.addText("isAppSegment");
		a_c.addText("65504");
		a_c.addText("65519");
		a_c.addText("isExifSegment");
		a_c.addText("65505");
		a_c.addText("isPhotoshopApp13Segment");
		a_c.addText("65517");
		a_c.addText("isXmpSegment");
		a_c.addText("65505");
		a_c.addText("getSegmentData");
	}

	public void c91_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("segmentLength");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("piece");
	}

	public void c92_texts(dmClass a_c) {
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("<init>");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("write");
		a_c.addText("os");
	}
	public void c85_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Argument, new int[]{1, 1});
	}
	public void c86_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{51, 40, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{52, 299});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.Returns, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), dmDependency.Type.ConstructorCall, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.ConstructorCall, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.MethodCall, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.ConstructorCall, 202);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.LocalVar, new int[]{202, 202, 271, 271, 299, 299, 311});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.LocalVar, 202);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter"), dmDependency.Type.OwnFieldUse, new int[]{210, 215, 220, 224, 42, 43, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter"), dmDependency.Type.Argument, new int[]{224, 229});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter"), dmDependency.Type.MethodCall, 238);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{246, 271});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Returns, new int[]{246, 271});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.MethodCall, new int[]{259, 284, 44, 43, 42});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{268, 292});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.LocalVar, new int[]{271, 299});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 299);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Argument, 299);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.io.DataOutputStream"), dmDependency.Type.ConstructorCall, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 305);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, 305);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.MethodCall, 308);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.io.DataOutputStream"), dmDependency.Type.MethodCall, new int[]{310, 310, 310, 310});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.Argument, new int[]{311, 44, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Returns, 42);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 41);
	}
	public void c87_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 66);
	}
	public void c88_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JpegSegmentOverflowException"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JpegSegmentOverflowException"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JpegSegmentOverflowException"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 334);
	}
	public void c89_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$SegmentFilter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.Argument, 1);
	}
	public void c90_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 86, 86, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), dmDependency.Type.FieldUse, new int[]{83, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{83, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.ConstructorCall, 89);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{91, 92, 93, 104, 105, 106, 121, 131, 141, 148});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{93, 148});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{104, 105, 106});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{121, 141});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{121, 141});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.ConstructorCall, 131);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.MethodCall, 131);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), m_classes.get("byte"), dmDependency.Type.Returns, 144);
	}
	public void c91_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{178, 178, 184, 184, 184});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), dmDependency.Type.ConstructorCall, 183);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, 191);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.LocalVar, 196);
	}
	public void c92_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.ConstructorCall, 158);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{159, 160, 165, 166});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 161);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 161);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceImageData"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{165, 166});
	}

	public void c93_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
	}
	public void c93_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 22);
	}

	public void c94_texts(dmClass a_c) {
		a_c.addText("rawbits");
		a_c.addText("<init>");
		a_c.addText("rawbits");
		a_c.addText("writeImage");
		a_c.addText("80");
		a_c.addText("53");
		a_c.addText("50");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("32");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("sample");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("width");
		a_c.addText("height");
	}
	public void c94_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{40, 41, 42, 47, 48, 50, 51, 53, 54, 65, 67, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{44, 45, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{47, 50, 53, 67});
	}

	public void c95_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("-1");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("cause");
	}
	public void c95_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageReadException"), m_classes.get("org.apache.commons.imaging.ImagingException"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageReadException"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageReadException"), m_classes.get("org.apache.commons.imaging.ImagingException"), dmDependency.Type.ConstructorCall, new int[]{28, 32});
	}

	public void c96_texts(dmClass a_c) {
		a_c.addText("colorType");
		a_c.addText("<init>");
		a_c.addText("colorType");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("is");
		a_c.addText("sample");
		a_c.addText("alpha");
	}

	public void c97_texts(dmClass a_c) {
		a_c.addText("depth");
		a_c.addText("maxval");
		a_c.addText("scale");
		a_c.addText("bytesPerSample");
		a_c.addText("hasAlpha");
		a_c.addText("tupleReader");
		a_c.addText("<init>");
		a_c.addText("PAM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("65535");
		a_c.addText("65535.0");
		a_c.addText("PAM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("_ALPHA");
		a_c.addText("BLACKANDWHITE");
		a_c.addText("BLACKANDWHITE_ALPHA");
		a_c.addText("GRAYSCALE");
		a_c.addText("GRAYSCALE_ALPHA");
		a_c.addText("RGB");
		a_c.addText("RGB_ALPHA");
		a_c.addText("Unknown PAM tupletype \'");
		a_c.addText("\'");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("depth");
		a_c.addText("maxval");
		a_c.addText("tupleType");
		a_c.addText("hasAlpha");
		a_c.addText("getNumComponents");
		a_c.addText("getBitDepth");
		a_c.addText("getImageType");
		a_c.addText("getImageTypeDescription");
		a_c.addText("PAM: portable arbitrary map file format");
		a_c.addText("getMIMEType");
		a_c.addText("image/x-portable-arbitrary-map");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("PAM files are only ever binary");
		a_c.addText("wsr");
		a_c.addText("getRGB");
		a_c.addText("is");
		a_c.addText("access$200");
		a_c.addText("x0");
		a_c.addText("access$300");
		a_c.addText("x0");
		a_c.addText("access$400");
		a_c.addText("x0");
		a_c.addText("access$500");
		a_c.addText("x0");
	}

	public void c98_texts(dmClass a_c) {
	}

	public void c99_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("is");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("<init>");
		a_c.addText("x0");
		a_c.addText("x1");
	}

	public void c100_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("<init>");
		a_c.addText("x0");
		a_c.addText("x1");
	}
	public void c96_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.ConstructorCall, 119);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.OwnFieldUse, new int[]{120, 125});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 121);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), dmDependency.Type.FieldUse, new int[]{130, 131, 131, 134, 135, 136, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.MethodCall, new int[]{130, 131, 135, 136});
	}
	public void c97_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.ConstructorCall, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{41, 50, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, new int[]{56, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$GrayscaleTupleReader"), dmDependency.Type.ConstructorCall, new int[]{56, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.OwnFieldUse, new int[]{56, 58, 60, 98, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), dmDependency.Type.ConstructorCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, 83);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.MethodCall, new int[]{98, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{98, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.Argument, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), dmDependency.Type.Argument, new int[]{108, 28, 28, 28});
	}
	public void c98_deps() {
	}
	public void c99_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.ConstructorCall, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 149);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 149);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 149);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), dmDependency.Type.FieldUse, new int[]{154, 155, 156, 158, 158, 159, 159, 160, 160, 163, 164, 165, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.MethodCall, new int[]{154, 155, 156, 158, 159, 160, 164, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$1"), dmDependency.Type.Argument, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$ColorTupleReader"), dmDependency.Type.ConstructorCall, 146);
	}
	public void c100_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$1"), dmDependency.Type.Argument, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo$TupleReader"), dmDependency.Type.ConstructorCall, 111);
	}

	public void c101_texts(dmClass a_c) {
		a_c.addText("palette");
		a_c.addText("<init>");
		a_c.addText("palette");
		a_c.addText("getPaletteIndex");
		a_c.addText("i");
		a_c.addText("rgb");
		a_c.addText("getEntry");
		a_c.addText("index");
		a_c.addText("length");
	}
	public void c101_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Implements, 1);
	}

	public void c102_texts(dmClass a_c) {
		a_c.addText("encoding");
		a_c.addText("bitDepthWanted");
		a_c.addText("planesWanted");
		a_c.addText("pixelDensity");
		a_c.addText("rleWriter");
		a_c.addText("<init>");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("Invalid compression parameter: ");
		a_c.addText("PCX_BIT_DEPTH");
		a_c.addText("PCX_BIT_DEPTH");
		a_c.addText("Invalid bit depth parameter: ");
		a_c.addText("PCX_PLANES");
		a_c.addText("PCX_PLANES");
		a_c.addText("Invalid planes parameter: ");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("Invalid pixel density parameter");
		a_c.addText("72.0");
		a_c.addText("72.0");
		a_c.addText("Unknown parameter: ");
		a_c.addText("compression");
		a_c.addText("value");
		a_c.addText("value");
		a_c.addText("value");
		a_c.addText("value");
		a_c.addText("firstKey");
		a_c.addText("params");
		a_c.addText("writeImage");
		a_c.addText("256");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("16777215");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("48");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("54");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("12");
		a_c.addText("256");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("rgb");
		a_c.addText("rgb");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("onlyBlackAndWhite");
		a_c.addText("rgb");
		a_c.addText("rgb");
		a_c.addText("i");
		a_c.addText("rgb");
		a_c.addText("rgb");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("paletteFactory");
		a_c.addText("palette");
		a_c.addText("bos");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bytesPerLine");
		a_c.addText("palette16");
		a_c.addText("writePixels");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("16777215");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("16777215");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("16777215");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("16777215");
		a_c.addText("16777215");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("bit");
		a_c.addText("rgb");
		a_c.addText("bit");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("i");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("bitDepth");
		a_c.addText("planes");
		a_c.addText("bytesPerLine");
		a_c.addText("palette");
		a_c.addText("bos");
		a_c.addText("plane0");
		a_c.addText("plane1");
		a_c.addText("plane2");
		a_c.addText("plane3");
		a_c.addText("allPlanes");
		a_c.addText("writePixels32");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("bytesPerLine");
		a_c.addText("bos");
		a_c.addText("rgbs");
		a_c.addText("plane");
	}
	public void c102_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{1, 112, 235, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{56, 75, 86, 97, 110});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), dmDependency.Type.ConstructorCall, new int[]{66, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), dmDependency.Type.OwnFieldUse, new int[]{66, 68, 313, 316, 332, 334});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.OwnFieldUse, new int[]{100, 103, 105, 203, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.MethodCall, new int[]{105, 203, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{112, 235, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{112, 235, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 112);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 118);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 118);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.MethodCall, new int[]{130, 133, 141, 144, 154, 155, 160, 161, 184, 185, 225, 226, 264, 271, 279, 288, 294, 300});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{175, 201, 202, 245, 251, 252, 262, 263, 269, 270, 277, 278, 286, 287, 292, 293, 298, 299, 304, 305, 322, 324, 325, 325, 325});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 230, 231, 232});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.LocalVar, 235);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.LocalVar, 235);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, 235);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{235, 317, 317, 317, 317, 317, 335});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.Argument, 235);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, new int[]{235, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("byte"), dmDependency.Type.ConstructorCall, 243);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), dmDependency.Type.MethodCall, new int[]{313, 316, 332, 334});
	}

	public void c103_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("8");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c103_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("byte"), dmDependency.Type.Returns, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), m_classes.get("byte"), dmDependency.Type.Argument, 27);
	}

	public void c104_texts(dmClass a_c) {
		a_c.addText("bytecount");
		a_c.addText("cachedBitCount");
		a_c.addText("cachedByte");
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("getNextRGB");
		a_c.addText("Unexpected leftover bits: ");
		a_c.addText("/");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
		a_c.addText("31");
		a_c.addText("31");
		a_c.addText("31");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Unknown BitsPerPixel: ");
		a_c.addText("cacheMask");
		a_c.addText("sample");
		a_c.addText("sample");
		a_c.addText("rgb");
		a_c.addText("data");
		a_c.addText("blue");
		a_c.addText("green");
		a_c.addText("red");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("blue");
		a_c.addText("green");
		a_c.addText("red");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("blue");
		a_c.addText("green");
		a_c.addText("red");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("newline");
		a_c.addText("Pixel");
		a_c.addText("BMP Image Data");
	}
	public void c104_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{35, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{35, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, new int[]{40, 40, 42, 44, 52, 53, 54, 55, 58, 66, 79, 90, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.FieldUse, new int[]{40, 40, 42, 44, 52, 53, 54, 55, 58, 66, 79, 90, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{44, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{49, 59, 80, 81, 82, 91, 92, 93});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{67, 112});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{67, 112});
	}

	public void c105_texts(dmClass a_c) {
		a_c.addText("TIFF_DIRECTORY_IFD0");
		a_c.addText("TIFF_DIRECTORY_IFD1");
		a_c.addText("TIFF_DIRECTORY_IFD2");
		a_c.addText("TIFF_DIRECTORY_IFD3");
		a_c.addText("EXIF_DIRECTORY_INTEROP_IFD");
		a_c.addText("EXIF_DIRECTORY_MAKER_NOTES");
		a_c.addText("EXIF_DIRECTORY_EXIF_IFD");
		a_c.addText("EXIF_DIRECTORY_GPS");
		a_c.addText("isImageDirectory");
		a_c.addText("directoryType");
		a_c.addText("name");
		a_c.addText("EXIF_DIRECTORY_IFD0");
		a_c.addText("TIFF_DIRECTORY_ROOT");
		a_c.addText("EXIF_DIRECTORY_IFD1");
		a_c.addText("EXIF_DIRECTORY_IFD2");
		a_c.addText("EXIF_DIRECTORY_IFD3");
		a_c.addText("EXIF_DIRECTORY_SUB_IFD");
		a_c.addText("EXIF_DIRECTORY_SUB_IFD1");
		a_c.addText("EXIF_DIRECTORY_SUB_IFD2");
		a_c.addText("EXIF_DIRECTORY_UNKNOWN");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/tiff/constants/TiffDirectoryType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("isImageDirectory");
		a_c.addText("directoryType");
		a_c.addText("name");
		a_c.addText("isImageDirectory");
		a_c.addText("getExifDirectoryType");
		a_c.addText("tiffDirectoryType");
		a_c.addText("type");
		a_c.addText("<clinit>");
		a_c.addText("TIFF_DIRECTORY_IFD0");
		a_c.addText("IFD0");
		a_c.addText("TIFF_DIRECTORY_IFD1");
		a_c.addText("IFD1");
		a_c.addText("TIFF_DIRECTORY_IFD2");
		a_c.addText("IFD2");
		a_c.addText("TIFF_DIRECTORY_IFD3");
		a_c.addText("IFD3");
		a_c.addText("EXIF_DIRECTORY_INTEROP_IFD");
		a_c.addText("-4");
		a_c.addText("Interop IFD");
		a_c.addText("EXIF_DIRECTORY_MAKER_NOTES");
		a_c.addText("-5");
		a_c.addText("Maker Notes");
		a_c.addText("EXIF_DIRECTORY_EXIF_IFD");
		a_c.addText("6");
		a_c.addText("-2");
		a_c.addText("Exif IFD");
		a_c.addText("EXIF_DIRECTORY_GPS");
		a_c.addText("7");
		a_c.addText("-3");
		a_c.addText("GPS IFD");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
	}
	public void c105_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Returns, new int[]{1, 19, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.OwnFieldUse, new int[]{19, 62, 20, 23, 26, 29, 32, 34, 36, 38, 19, 19, 19, 19, 19, 19, 19, 19, 19, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.LocalVar, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.ConstructorCall, new int[]{20, 23, 26, 29, 32, 34, 36, 38, 19});
	}

	public void c106_texts(dmClass a_c) {
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("propertyBits");
		a_c.addText("ancillary");
		a_c.addText("isPrivate");
		a_c.addText("reserved");
		a_c.addText("safeToCopy");
		a_c.addText("<init>");
		a_c.addText("4");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("theByte");
		a_c.addText("theMask");
		a_c.addText("i");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("shift");
		a_c.addText("getBytes");
		a_c.addText("getPropertyBits");
		a_c.addText("getDataStream");
	}
	public void c106_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{52, 74});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{52, 74});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("byte"), dmDependency.Type.Returns, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.Returns, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 93);
	}

	public void c107_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("traverseJFIF");
		a_c.addText("Not a Valid JPEG File: doesn\'t begin with 0xffd8");
		a_c.addText("8");
		a_c.addText("marker");
		a_c.addText("Could not read marker");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("65497");
		a_c.addText("65498");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentLengthBytes");
		a_c.addText("Invalid segment size");
		a_c.addText("Segment Data");
		a_c.addText("Invalid Segment: insufficient data");
		a_c.addText(" markers");
		a_c.addText("imageData");
		a_c.addText("markerBytes");
		a_c.addText("marker");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentLength");
		a_c.addText("segmentData");
		a_c.addText("markerCount");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("visitor");
		a_c.addText("getMarkerName");
		a_c.addText("SOS_MARKER");
		a_c.addText("JPEG_APP1_MARKER");
		a_c.addText("JPEG_APP2_MARKER");
		a_c.addText("JPEG_APP13_MARKER");
		a_c.addText("JPEG_APP14_MARKER");
		a_c.addText("JPEG_APP15_MARKER");
		a_c.addText("JFIF_MARKER");
		a_c.addText("SOF0_MARKER");
		a_c.addText("SOF1_MARKER");
		a_c.addText("SOF2_MARKER");
		a_c.addText("SOF3_MARKER");
		a_c.addText("SOF4_MARKER");
		a_c.addText("SOF5_MARKER");
		a_c.addText("SOF6_MARKER");
		a_c.addText("SOF7_MARKER");
		a_c.addText("SOF8_MARKER");
		a_c.addText("SOF9_MARKER");
		a_c.addText("SOF10_MARKER");
		a_c.addText("SOF11_MARKER");
		a_c.addText("DAC_MARKER");
		a_c.addText("SOF13_MARKER");
		a_c.addText("SOF14_MARKER");
		a_c.addText("SOF15_MARKER");
		a_c.addText("DQT_MARKER");
		a_c.addText("DRI_MARKER");
		a_c.addText("RST0_MARKER");
		a_c.addText("RST1_MARKER");
		a_c.addText("RST2_MARKER");
		a_c.addText("RST3_MARKER");
		a_c.addText("RST4_MARKER");
		a_c.addText("RST5_MARKER");
		a_c.addText("RST6_MARKER");
		a_c.addText("RST7_MARKER");
		a_c.addText("Unknown");
		a_c.addText("marker");
		a_c.addText("dumpJFIF");
		a_c.addText("byteSource");
		a_c.addText("visitor");
	}

	public void c108_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("SOS marker.  ");
		a_c.addText(" bytes of image data.");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("Segment marker: ");
		a_c.addText(" (");
		a_c.addText("), ");
		a_c.addText(" bytes of segment data.");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("segmentLength");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentData");
	}

	public void c109_texts(dmClass a_c) {
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("visitSegment");
	}
	public void c107_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{37, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{37, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{37, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{56, 64, 76, 81, 87});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.MethodCall, new int[]{72, 77, 91});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{97, 97, 97, 97, 97, 97, 97, 97});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 84);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, 96);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{98, 98, 98, 98});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$1"), dmDependency.Type.ConstructorCall, 179);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.LocalVar, 205);
	}
	public void c108_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$1"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{183, 183, 190, 190, 190});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$1"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{188, 189, 197});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.MethodCall, 198);
	}
	public void c109_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
	}

	public void c110_texts(dmClass a_c) {
		a_c.addText("dataParser");
		a_c.addText("<init>");
		a_c.addText("dataParser");
		a_c.addText("readData");
		a_c.addText("10");
		a_c.addText("scanline_bytecount[");
		a_c.addText("]");
		a_c.addText("PSD: bad Image Data");
		a_c.addText("scanline");
		a_c.addText("PSD: Missing Image Data");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("scanline");
		a_c.addText("bbis");
		a_c.addText("index");
		a_c.addText("packed");
		a_c.addText("unpacked");
		a_c.addText("bais");
		a_c.addText("mbis");
		a_c.addText("y");
		a_c.addText("channel");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("imageContents");
		a_c.addText("bfp");
		a_c.addText("header");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("scanlineCount");
		a_c.addText("scanlineBytecounts");
		a_c.addText("depth");
		a_c.addText("channelCount");
		a_c.addText("data");
	}
	public void c110_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.OwnFieldUse, new int[]{40, 63, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.FieldUse, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.FieldUse, new int[]{48, 49, 52, 61});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.MethodCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{55, 69});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.MethodCall, new int[]{63, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.ConstructorCall, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.MethodCall, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.ConstructorCall, 77);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.MethodCall, new int[]{78, 80, 80, 80, 80});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.LocalVar, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{86, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.LocalVar, 86);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.LocalVar, 86);
	}

	public void c111_texts(dmClass a_c) {
		a_c.addText("DIRECTORY_TYPE_UNKNOWN");
		a_c.addText("-1");
		a_c.addText("DIRECTORY_TYPE_ROOT");
		a_c.addText("0");
		a_c.addText("DIRECTORY_TYPE_SUB");
		a_c.addText("1");
		a_c.addText("DIRECTORY_TYPE_SUB0");
		a_c.addText("1");
		a_c.addText("DIRECTORY_TYPE_SUB1");
		a_c.addText("2");
		a_c.addText("DIRECTORY_TYPE_SUB2");
		a_c.addText("3");
		a_c.addText("DIRECTORY_TYPE_THUMBNAIL");
		a_c.addText("2");
		a_c.addText("DIRECTORY_TYPE_EXIF");
		a_c.addText("-2");
		a_c.addText("DIRECTORY_TYPE_GPS");
		a_c.addText("-3");
		a_c.addText("DIRECTORY_TYPE_INTEROPERABILITY");
		a_c.addText("-4");
		a_c.addText("DIRECTORY_TYPE_MAKER_NOTES");
		a_c.addText("-5");
		a_c.addText("DIRECTORY_TYPE_DIR_0");
		a_c.addText("0");
		a_c.addText("DIRECTORY_TYPE_DIR_1");
		a_c.addText("1");
		a_c.addText("DIRECTORY_TYPE_DIR_2");
		a_c.addText("2");
		a_c.addText("DIRECTORY_TYPE_DIR_3");
		a_c.addText("3");
		a_c.addText("DIRECTORY_TYPE_DIR_4");
		a_c.addText("4");
		a_c.addText("<init>");
	}

	public void c112_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("getElementDescription");
		a_c.addText("ImageDataElement");
	}

	public void c113_texts(dmClass a_c) {
		a_c.addText("type");
		a_c.addText("entries");
		a_c.addText("nextDirectoryOffset");
		a_c.addText("tiffImageData");
		a_c.addText("jpegImageData");
		a_c.addText("headerByteOrder");
		a_c.addText("<init>");
		a_c.addText("12");
		a_c.addText("type");
		a_c.addText("entries");
		a_c.addText("offset");
		a_c.addText("nextDirectoryOffset");
		a_c.addText("byteOrder");
		a_c.addText("description");
		a_c.addText("getElementDescription");
		a_c.addText("2");
		a_c.addText("\t[%d]: %s (%d, 0x%x), %s, %d: %s%n");
		a_c.addText("7");
		a_c.addText("6");
		a_c.addText("12");
		a_c.addText("entry");
		a_c.addText("entryOffset");
		a_c.addText("result");
		a_c.addText("description");
		a_c.addText("Unknown");
		a_c.addText("Root");
		a_c.addText("Sub");
		a_c.addText("Thumbnail");
		a_c.addText("Exif");
		a_c.addText("Gps");
		a_c.addText("Interoperability");
		a_c.addText("Bad Type");
		a_c.addText("type");
		a_c.addText("getDirectoryEntries");
		a_c.addText("dump");
		a_c.addText("entry");
		a_c.addText("hasJpegImageData");
		a_c.addText("hasTiffImageData");
		a_c.addText("getTiffImage");
		a_c.addText("getTiffImage");
		a_c.addText("params");
		a_c.addText("getTiffImage");
		a_c.addText("byteOrder");
		a_c.addText("params");
		a_c.addText("getTiffImage");
		a_c.addText("byteOrder");
		a_c.addText("params");
		a_c.addText("findField");
		a_c.addText("tag");
		a_c.addText("failIfMissing");
		a_c.addText("findField");
		a_c.addText("Missing expected field: ");
		a_c.addText("field");
		a_c.addText("tag");
		a_c.addText("failIfMissing");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getSingleFieldValue");
		a_c.addText("Field \"");
		a_c.addText("\" has incorrect length ");
		a_c.addText("tag");
		a_c.addText("result");
		a_c.addText("getSingleFieldValue");
		a_c.addText("Field \"");
		a_c.addText("\" has incorrect length ");
		a_c.addText("tag");
		a_c.addText("result");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("Field \"");
		a_c.addText("\" has wrong count ");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("Required field \"");
		a_c.addText("\" has incorrect type ");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("Required field \"");
		a_c.addText("\" is missing");
		a_c.addText("tag");
		a_c.addText("mustExist");
		a_c.addText("field");
		a_c.addText("getRawImageDataElements");
		a_c.addText("offsets.length(");
		a_c.addText(") != byteCounts.length(");
		a_c.addText(")");
		a_c.addText("i");
		a_c.addText("offsetsField");
		a_c.addText("byteCountsField");
		a_c.addText("offsets");
		a_c.addText("byteCounts");
		a_c.addText("result");
		a_c.addText("getTiffRawImageDataElements");
		a_c.addText("Couldn\'t find image data.");
		a_c.addText("tileOffsets");
		a_c.addText("tileByteCounts");
		a_c.addText("stripOffsets");
		a_c.addText("stripByteCounts");
		a_c.addText("imageDataInStrips");
		a_c.addText("Couldn\'t find image data.");
		a_c.addText("tileOffsets");
		a_c.addText("tileByteCounts");
		a_c.addText("stripOffsets");
		a_c.addText("stripByteCounts");
		a_c.addText("getJpegRawImageDataElement");
		a_c.addText("Couldn\'t find image data.");
		a_c.addText("offSet");
		a_c.addText("byteCount");
		a_c.addText("jpegInterchangeFormat");
		a_c.addText("jpegInterchangeFormatLength");
		a_c.addText("setTiffImageData");
		a_c.addText("rawImageData");
		a_c.addText("getTiffImageData");
		a_c.addText("setJpegImageData");
		a_c.addText("value");
		a_c.addText("getJpegImageData");
		a_c.addText("getFloatingPointRasterData");
		a_c.addText("params");
		a_c.addText("parser");
		a_c.addText("hasTiffFloatingPointRasterData");
		a_c.addText("sSampleFmt");
	}
	public void c112_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 796);
	}
	public void c113_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, new int[]{1, 791, 791});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 207, 228});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 85);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{91, 101});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{92, 183, 207, 923});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{93, 113});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{106, 107, 107, 108, 108, 109, 144, 271, 289, 318, 320, 322, 323, 325, 339, 342, 347, 361, 364, 369, 370, 380, 382, 384, 385, 387, 388, 402, 405, 410, 411, 421, 423, 425, 426, 428, 429, 443, 446, 451, 452, 466, 469, 474, 475, 476, 478, 489, 491, 493, 494, 496, 497, 511, 514, 519, 520, 530, 532, 534, 535, 537, 551, 554, 559, 569, 571, 573, 574, 576, 577, 591, 594, 599, 600, 610, 612, 614, 615, 617, 618, 632, 635, 640, 641, 650, 652, 654, 655, 657, 658, 672, 675, 680, 681, 691, 693, 695, 696, 698, 699, 713, 716, 721, 722, 732, 734, 736, 737, 739, 740, 754, 757, 762, 763, 808, 809, 859, 860});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{106, 271});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, new int[]{108, 320, 342, 364, 382, 405, 423, 446, 469, 491, 514, 532, 554, 571, 594, 612, 635, 652, 675, 693, 716, 734, 757});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{113, 147, 281, 289, 325, 347, 370, 388, 411, 429, 452, 478, 497, 520, 537, 559, 577, 600, 618, 641, 658, 681, 699, 722, 740, 763, 777, 791, 835, 835, 835, 835, 850, 850, 850, 850, 864, 864});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, new int[]{133, 254, 261});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{147, 154, 166, 183, 207, 228, 254, 261, 281, 289, 299, 308, 325, 347, 370, 388, 411, 429, 452, 478, 497, 520, 537, 559, 577, 600, 618, 641, 658, 681, 699, 722, 740, 763, 777, 791, 820, 835, 850, 881, 923});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{150, 158, 162, 825, 826, 827, 828, 840, 841, 842, 843, 855, 856, 937});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{166, 183, 207, 228, 881});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{166, 183, 207, 228});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.OwnFieldUse, new int[]{179, 203, 250, 869, 873});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), dmDependency.Type.ConstructorCall, new int[]{183, 207, 254, 922});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), dmDependency.Type.MethodCall, new int[]{183, 207, 254, 923});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{254, 261, 281});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.MethodCall, 278);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{278, 296, 305, 315, 320, 323, 333, 342, 355, 364, 377, 382, 385, 396, 405, 418, 423, 426, 437, 446, 460, 469, 486, 491, 494, 505, 514, 527, 532, 535, 545, 554, 566, 571, 574, 585, 594, 607, 612, 615, 626, 635, 647, 652, 655, 666, 675, 688, 693, 696, 707, 716, 729, 734, 737, 748, 757, 771, 785, 812, 835, 850, 864});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Argument, new int[]{289, 347});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.FieldUse, new int[]{296, 355, 361, 363});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Argument, new int[]{299, 452});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.FieldUse, new int[]{305, 460, 466, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{308, 325, 520, 537});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Argument, 308);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.FieldUse, new int[]{315, 318, 319, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Argument, 325);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.FieldUse, new int[]{333, 339, 341});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.MethodCall, 370);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{370, 388, 411, 429, 452, 478, 497, 520, 577, 600, 618, 641, 658, 681, 699, 722, 740, 763});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("short"), dmDependency.Type.Returns, new int[]{370, 388, 559, 577});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Argument, 370);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.FieldUse, new int[]{377, 380, 381, 385});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.MethodCall, 388);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Argument, 388);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.FieldUse, new int[]{396, 402, 404});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.MethodCall, 411);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Argument, 411);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.FieldUse, new int[]{418, 421, 422, 426});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.MethodCall, 429);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Argument, 429);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.FieldUse, new int[]{437, 443, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.MethodCall, 452);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 475);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{476, 478});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, new int[]{478, 497, 641, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Argument, 478);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.FieldUse, new int[]{486, 489, 490, 494});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.MethodCall, 497);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Argument, 497);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.FieldUse, new int[]{505, 511, 513});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.MethodCall, 520);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), dmDependency.Type.Argument, 520);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), dmDependency.Type.FieldUse, new int[]{527, 530, 531, 535});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.Argument, 537);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.FieldUse, new int[]{545, 551, 553});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.Argument, 559);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.FieldUse, new int[]{566, 569, 570, 574});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.MethodCall, 577);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.Argument, 577);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.FieldUse, new int[]{585, 591, 593});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.MethodCall, 600);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.Argument, 600);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.FieldUse, new int[]{607, 610, 611, 615});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.MethodCall, 618);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.Argument, 618);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.FieldUse, new int[]{626, 632, 634});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.MethodCall, 641);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.Argument, 641);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.FieldUse, new int[]{647, 650, 651, 655});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.MethodCall, 658);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.Argument, 658);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.FieldUse, new int[]{666, 672, 674});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.MethodCall, 681);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.Argument, 681);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.FieldUse, new int[]{688, 691, 692, 696});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.MethodCall, 699);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.Argument, 699);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.FieldUse, new int[]{707, 713, 715});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.MethodCall, 722);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.Argument, 722);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.FieldUse, new int[]{729, 732, 733, 737});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.MethodCall, 740);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.Argument, 740);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.FieldUse, new int[]{748, 754, 756});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.MethodCall, 763);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.Argument, 763);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.FieldUse, 771);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.MethodCall, 777);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.Argument, 777);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.FieldUse, 785);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.MethodCall, 791);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.Returns, new int[]{791, 820, 850});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.ConstructorCall, new int[]{818, 862});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.LocalVar, 820);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Argument, 864);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Returns, 870);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Argument, 873);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.OwnFieldUse, new int[]{877, 881});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Returns, 878);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Returns, 881);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), m_classes.get("short"), dmDependency.Type.LocalVar, 943);
	}

	public void c114_texts(dmClass a_c) {
		a_c.addText("exifBytes");
		a_c.addText("ELEMENT_SIZE_COMPARATOR");
		a_c.addText("ITEM_SIZE_COMPARATOR");
		a_c.addText("<init>");
		a_c.addText("exifBytes");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("exifBytes");
		a_c.addText("analyzeOldTiff");
		a_c.addText("-1");
		a_c.addText("3");
		a_c.addText("frozenField");
		a_c.addText("oversizeValue");
		a_c.addText("field");
		a_c.addText("data");
		a_c.addText("jpegImageData");
		a_c.addText("tiffImageData");
		a_c.addText("directory");
		a_c.addText("lastElementByte");
		a_c.addText("element");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("elements");
		a_c.addText("directories");
		a_c.addText("rewritableElements");
		a_c.addText("TOLERANCE");
		a_c.addText("start");
		a_c.addText("index");
		a_c.addText("e");
		a_c.addText("frozenFields");
		a_c.addText("write");
		a_c.addText("Couldn\'t analyze old tiff data.");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("-1");
		a_c.addText("onlyElement");
		a_c.addText("frozenField");
		a_c.addText("entry");
		a_c.addText("outputItem");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("frozenFields");
		a_c.addText("makerNoteField");
		a_c.addText("analysis");
		a_c.addText("oldLength");
		a_c.addText("frozenFieldOffsets");
		a_c.addText("outputSummary");
		a_c.addText("allOutputItems");
		a_c.addText("outputItems");
		a_c.addText("outputLength");
		a_c.addText("updateOffsetsStep");
		a_c.addText("element");
		a_c.addText("elementEnd");
		a_c.addText("element");
		a_c.addText("excessOffset");
		a_c.addText("excessLength");
		a_c.addText("offset");
		a_c.addText("outputItem");
		a_c.addText("outputItemLength");
		a_c.addText("bestFit");
		a_c.addText("analysis");
		a_c.addText("outputItems");
		a_c.addText("overflowIndex");
		a_c.addText("unusedElements");
		a_c.addText("unplacedItems");
		a_c.addText("writeStep");
		a_c.addText("8");
		a_c.addText("element");
		a_c.addText("bos");
		a_c.addText("outputItem");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("analysis");
		a_c.addText("outputItems");
		a_c.addText("outputLength");
		a_c.addText("rootDirectory");
		a_c.addText("output");
		a_c.addText("headerStream");
		a_c.addText("headerBinaryStream");
		a_c.addText("lambda$static$1");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("lambda$static$0");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("<clinit>");
	}

	public void c115_texts(dmClass a_c) {
		a_c.addText("buffer");
		a_c.addText("index");
		a_c.addText("<init>");
		a_c.addText("buffer");
		a_c.addText("index");
		a_c.addText("write");
		a_c.addText("Buffer overflow.");
		a_c.addText("b");
		a_c.addText("write");
		a_c.addText("Buffer overflow.");
		a_c.addText("b");
		a_c.addText("off");
		a_c.addText("len");
	}
	public void c114_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.ConstructorCall, new int[]{53, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{54, 59, 65, 145, 187, 299, 299});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{60, 130, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{60, 130, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Argument, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Returns, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.MethodCall, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), dmDependency.Type.ConstructorCall, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), dmDependency.Type.MethodCall, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.FieldUse, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{77, 91, 96});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{78, 80, 83, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.MethodCall, new int[]{82, 83, 84, 141, 161, 162});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.MethodCall, new int[]{84, 161, 162, 171, 221, 237, 244, 315, 316, 51, 51});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.MethodCall, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.FieldUse, new int[]{103, 110, 110, 114, 115, 115, 124, 124, 150, 150, 150, 193, 199, 199, 202, 226, 240, 247, 249, 250, 308, 308, 308, 50, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$Stub"), dmDependency.Type.ConstructorCall, new int[]{115, 124, 251});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.MethodCall, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{130, 147});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.LocalVar, new int[]{130, 182, 182, 182, 182, 182});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.LocalVar, new int[]{130, 130, 130, 130, 130, 182, 182, 260, 260, 260, 260, 321});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.LocalVar, new int[]{130, 130});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{130, 130, 182, 260, 260, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.LocalVar, 130);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{130, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.Argument, new int[]{130, 260});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), dmDependency.Type.FieldUse, new int[]{140, 142});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.MethodCall, new int[]{140, 168, 294});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.FieldUse, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{154, 178, 302, 315});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), dmDependency.Type.ConstructorCall, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), dmDependency.Type.MethodCall, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.MethodCall, 178);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, new int[]{182, 182, 182, 260, 260, 321});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.LocalVar, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Argument, new int[]{182, 260, 51, 51});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Argument, new int[]{182, 260, 321, 321});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("long"), dmDependency.Type.Returns, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), dmDependency.Type.ConstructorCall, new int[]{301, 315});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, new int[]{302, 315});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.MethodCall, 303);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{317, 317, 317, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, 320);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, new int[]{321, 321});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.LocalVar, 321);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("byte"), dmDependency.Type.LocalVar, 321);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), dmDependency.Type.LocalVar, 321);
	}
	public void c115_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.ConstructorCall, 267);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{268, 274, 278, 283, 286});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{270, 279});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{275, 284});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless$BufferOutputStream"), m_classes.get("byte"), dmDependency.Type.Argument, 279);
	}

	public void c116_texts(dmClass a_c) {
		a_c.addText("GREYSCALE");
		a_c.addText("TRUE_COLOR");
		a_c.addText("INDEXED_COLOR");
		a_c.addText("GREYSCALE_WITH_ALPHA");
		a_c.addText("TRUE_COLOR_WITH_ALPHA");
		a_c.addText("value");
		a_c.addText("greyscale");
		a_c.addText("alpha");
		a_c.addText("samplesPerPixel");
		a_c.addText("allowedBitDepths");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/PngColorType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("value");
		a_c.addText("greyscale");
		a_c.addText("alpha");
		a_c.addText("samplesPerPixel");
		a_c.addText("allowedBitDepths");
		a_c.addText("getValue");
		a_c.addText("isGreyscale");
		a_c.addText("hasAlpha");
		a_c.addText("getSamplesPerPixel");
		a_c.addText("isBitDepthAllowed");
		a_c.addText("bitDepth");
		a_c.addText("getColorType");
		a_c.addText("type");
		a_c.addText("value");
		a_c.addText("getColorType");
		a_c.addText("alpha");
		a_c.addText("grayscale");
		a_c.addText("<clinit>");
		a_c.addText("GREYSCALE");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("TRUE_COLOR");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("INDEXED_COLOR");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("GREYSCALE_WITH_ALPHA");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("TRUE_COLOR_WITH_ALPHA");
		a_c.addText("6");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("16");
	}
	public void c116_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Returns, new int[]{1, 22, 63, 73});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.OwnFieldUse, new int[]{22, 79, 81, 84, 86, 26, 27, 28, 29, 30, 22, 22, 22, 22, 22, 22});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.LocalVar, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.ConstructorCall, new int[]{26, 27, 28, 29, 30, 22});
	}

	public void c117_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("NEWLINE");
		a_c.addText("\r\n");
		a_c.addText("counter");
		a_c.addText("debug");
		a_c.addText("message");
		a_c.addText("debug");
		a_c.addText("\r\n");
		a_c.addText("getDebug");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("\t");
		a_c.addText("\r\n");
		a_c.addText("\r\n");
		a_c.addText("element");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("result");
		a_c.addText("getDebug");
		a_c.addText("250");
		a_c.addText("250");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("max");
		a_c.addText("getDebug");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("13");
		a_c.addText("32");
		a_c.addText("\t");
		a_c.addText(": ");
		a_c.addText(" (");
		a_c.addText(", 0x");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("\t...\r\n");
		a_c.addText("\r\n");
		a_c.addText("c");
		a_c.addText("b");
		a_c.addText("c");
		a_c.addText("i");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("max");
		a_c.addText("result");
		a_c.addText("getDebug");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("\t");
		a_c.addText(" (");
		a_c.addText("255");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("\r\n");
		a_c.addText("element");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("result");
		a_c.addText("debug");
		a_c.addText("message");
		a_c.addText("map");
		a_c.addText("getDebug");
		a_c.addText(" map: ");
		a_c.addText(" map: ");
		a_c.addText("\r\n");
		a_c.addText("\t");
		a_c.addText(": \'");
		a_c.addText("\' -> \'");
		a_c.addText("\'");
		a_c.addText("\r\n");
		a_c.addText("\r\n");
		a_c.addText("key");
		a_c.addText("value");
		a_c.addText("i");
		a_c.addText("message");
		a_c.addText("map");
		a_c.addText("result");
		a_c.addText("keys");
		a_c.addText("byteQuadToString");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("31");
		a_c.addText("5");
		a_c.addText(" bytequad: ");
		a_c.addText(" b1: ");
		a_c.addText(" b2: ");
		a_c.addText(" b3: ");
		a_c.addText(" b4: ");
		a_c.addText("bytequad");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("b3");
		a_c.addText("b4");
		a_c.addText("c1");
		a_c.addText("c2");
		a_c.addText("c3");
		a_c.addText("c4");
		a_c.addText("buffer");
		a_c.addText("debug");
		a_c.addText("null");
		a_c.addText("message");
		a_c.addText("value");
		a_c.addText("debug");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("debug");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("debug");
		a_c.addText("MM/dd/yyyy HH:mm:ss");
		a_c.addText("null");
		a_c.addText("message");
		a_c.addText("value");
		a_c.addText("df");
		a_c.addText("debug");
		a_c.addText("MM/dd/yyyy HH:mm:ss");
		a_c.addText("null");
		a_c.addText("message");
		a_c.addText("value");
		a_c.addText("df");
		a_c.addText("debug");
		a_c.addText(": ");
		a_c.addText("null");
		a_c.addText("message");
		a_c.addText("file");
		a_c.addText("debug");
		a_c.addText("ICC_Profile ");
		a_c.addText(": ");
		a_c.addText("null");
		a_c.addText("\t getProfileClass: ");
		a_c.addText("\t getPCSType: ");
		a_c.addText("\t getColorSpaceType() : ");
		a_c.addText("message");
		a_c.addText("value");
		a_c.addText("debug");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("debug");
		a_c.addText(" [");
		a_c.addText("]");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("\t");
		a_c.addText("aV");
		a_c.addText("message");
		a_c.addText("v");
		a_c.addText("suffix");
		a_c.addText("debug");
		a_c.addText(" ");
		a_c.addText("message");
		a_c.addText("value");
		a_c.addText("debug");
		a_c.addText("e");
		a_c.addText("debug");
		a_c.addText("e");
		a_c.addText("value");
		a_c.addText("getDebug");
		a_c.addText("e");
		a_c.addText("getDebug");
		a_c.addText("35");
		a_c.addText("yyyy-MM-dd kk:mm:ss:SSS");
		a_c.addText("\r\n");
		a_c.addText("Throwable: ");
		a_c.addText("(");
		a_c.addText(")");
		a_c.addText(":");
		a_c.addText("\r\n");
		a_c.addText("Throwable: ");
		a_c.addText("null");
		a_c.addText("\r\n");
		a_c.addText("\r\n");
		a_c.addText("Caught here:\r\n");
		a_c.addText("\r\n");
		a_c.addText("e");
		a_c.addText("max");
		a_c.addText("result");
		a_c.addText("timestamp");
		a_c.addText("datetime");
		a_c.addText("getStackTrace");
		a_c.addText("e");
		a_c.addText("limit");
		a_c.addText("getStackTrace");
		a_c.addText("\tat ");
		a_c.addText(".");
		a_c.addText("(");
		a_c.addText(":");
		a_c.addText(")");
		a_c.addText("\r\n");
		a_c.addText("\t...\r\n");
		a_c.addText("\r\n");
		a_c.addText("ste");
		a_c.addText("i");
		a_c.addText("stes");
		a_c.addText("e");
		a_c.addText("limit");
		a_c.addText("skip");
		a_c.addText("result");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/internal/Debug;");
	}
	public void c117_deps() {
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{70, 75, 200});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("char"), dmDependency.Type.LocalVar, new int[]{105, 105, 120, 171, 171, 171, 171});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("char"), dmDependency.Type.Argument, new int[]{105, 204});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{171, 171, 171, 171});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.text.SimpleDateFormat"), dmDependency.Type.ConstructorCall, new int[]{211, 216, 266});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.text.DateFormat"), dmDependency.Type.MethodCall, new int[]{212, 217});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.text.DateFormat"), dmDependency.Type.LocalVar, new int[]{213, 218});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.io.File"), dmDependency.Type.Argument, 218);
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.io.File"), dmDependency.Type.MethodCall, 221);
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.Argument, 222);
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.MethodCall, new int[]{227, 228, 229});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{238, 238});
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.text.SimpleDateFormat"), dmDependency.Type.MethodCall, 268);
		d(m_classes.get("org.apache.commons.imaging.internal.Debug"), m_classes.get("java.text.SimpleDateFormat"), dmDependency.Type.LocalVar, 283);
	}

	public void c118_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("desiredDepth");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("desiredDepth");
		a_c.addText("read");
		a_c.addText("8");
		a_c.addText("readBits");
		a_c.addText("bitCount");
		a_c.addText("i");
		a_c.addText("readBitsArray");
		a_c.addText("10");
		a_c.addText("i");
		a_c.addText("sampleBits");
		a_c.addText("length");
		a_c.addText("result");
	}
	public void c118_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.OwnFieldUse, new int[]{27, 37});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{29, 33, 44});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.MethodCall, 37);
	}

	public void c120_texts(dmClass a_c) {
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("rowsPerStrip");
		a_c.addText("byteOrder");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageData");
		a_c.addText("<init>");
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("sampleFormat");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compression");
		a_c.addText("byteOrder");
		a_c.addText("rowsPerStrip");
		a_c.addText("imageData");
		a_c.addText("interpretStrip");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("j");
		a_c.addText("i");
		a_c.addText("k");
		a_c.addText("nRows");
		a_c.addText("i0");
		a_c.addText("i1");
		a_c.addText("samples");
		a_c.addText("b");
		a_c.addText("j");
		a_c.addText("i");
		a_c.addText("k");
		a_c.addText("nRows");
		a_c.addText("i0");
		a_c.addText("i1");
		a_c.addText("samples");
		a_c.addText("j");
		a_c.addText("p0");
		a_c.addText("p1");
		a_c.addText("p2");
		a_c.addText("i");
		a_c.addText("rgb");
		a_c.addText("j");
		a_c.addText("i");
		a_c.addText("k");
		a_c.addText("nRows");
		a_c.addText("i0");
		a_c.addText("i1");
		a_c.addText("i");
		a_c.addText("samples");
		a_c.addText("bis");
		a_c.addText("imageBuilder");
		a_c.addText("bytes");
		a_c.addText("pixelsPerStrip");
		a_c.addText("yLimit");
		a_c.addText("allSamplesAreOneByte");
		a_c.addText("readImageData");
		a_c.addText("4294967295");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("rowsPerStripLong");
		a_c.addText("rowsRemaining");
		a_c.addText("rowsInThisStrip");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerStrip");
		a_c.addText("pixelsPerStrip");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("strip");
		a_c.addText("imageBuilder");
		a_c.addText("readImageData");
		a_c.addText("4294967295");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("rowsPerStripLong");
		a_c.addText("rowsRemaining");
		a_c.addText("rowsInThisStrip");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerStrip");
		a_c.addText("pixelsPerStrip");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("strip");
		a_c.addText("subImage");
		a_c.addText("strip0");
		a_c.addText("strip1");
		a_c.addText("workingHeight");
		a_c.addText("y0");
		a_c.addText("yLimit");
		a_c.addText("workingBuilder");
		a_c.addText("readRasterData");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("xRaster");
		a_c.addText("yRaster");
		a_c.addText("rasterWidth");
		a_c.addText("rasterHeight");
		a_c.addText("yStrip");
		a_c.addText("rowsRemaining");
		a_c.addText("rowsInThisStrip");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerStrip");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("blockData");
		a_c.addText("strip");
		a_c.addText("subImage");
		a_c.addText("xRaster");
		a_c.addText("yRaster");
		a_c.addText("rasterWidth");
		a_c.addText("rasterHeight");
		a_c.addText("rasterData");
		a_c.addText("strip0");
		a_c.addText("strip1");
	}
	public void c120_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.ConstructorCall, 57);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.OwnFieldUse, new int[]{63, 241, 249, 303, 368});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{64, 89, 211, 372});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{65, 236, 261, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{65, 236, 261, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, new int[]{65, 236});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("byte"), dmDependency.Type.Argument, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.OwnFieldUse, new int[]{95, 161, 166, 221});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.MethodCall, new int[]{95, 161, 221});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{199, 321, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 211);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.ConstructorCall, 211);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.MethodCall, new int[]{229, 235, 235, 235, 235});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.LocalVar, 236);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.MethodCall, new int[]{241, 249, 303, 368});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.MethodCall, new int[]{249, 303, 368});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{261, 261, 261, 261, 261, 261, 323, 323, 323, 323, 323, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{261, 261, 323, 323, 379, 379});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 261);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.Argument, new int[]{261, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.FieldUse, new int[]{275, 276, 276, 287, 287, 316, 316, 316, 316, 323, 323, 323, 323, 339, 340, 341, 342});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 292);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Returns, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.ConstructorCall, 379);
	}

	public void c122_texts(dmClass a_c) {
		a_c.addText("item");
		a_c.addText("itemOffsetField");
		a_c.addText("<init>");
		a_c.addText("item");
		a_c.addText("itemOffsetField");
	}

	public void c123_texts(dmClass a_c) {
		a_c.addText("byteOrder");
		a_c.addText("rootDirectory");
		a_c.addText("directoryTypeMap");
		a_c.addText("offsetItems");
		a_c.addText("imageDataItems");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("rootDirectory");
		a_c.addText("directoryTypeMap");
		a_c.addText("add");
		a_c.addText("item");
		a_c.addText("itemOffsetField");
		a_c.addText("updateOffsets");
		a_c.addText("value");
		a_c.addText("offset");
		a_c.addText("item");
		a_c.addText("j");
		a_c.addText("imageDataInfo");
		a_c.addText("byteOrder");
		a_c.addText("addTiffImageData");
		a_c.addText("imageDataInfo");
	}
	public void c122_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.OwnFieldUse, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.OwnFieldUse, 49);
	}
	public void c123_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.OwnFieldUse, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Argument, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Argument, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), dmDependency.Type.ConstructorCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{60, 71});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), dmDependency.Type.FieldUse, new int[]{60, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.MethodCall, new int[]{61, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.MethodCall, new int[]{60, 72});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.MethodCall, new int[]{62, 71});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.FieldUse, new int[]{66, 67, 68, 71, 71});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("byte"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary$OffsetItem"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.Argument, 74);
	}

	public void c124_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("applyFloydSteinbergDithering");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("7");
		a_c.addText("update");
		a_c.addText("update");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("nextArgb");
		a_c.addText("a");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("na");
		a_c.addText("nr");
		a_c.addText("ng");
		a_c.addText("nb");
		a_c.addText("errA");
		a_c.addText("errR");
		a_c.addText("errG");
		a_c.addText("errB");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("image");
		a_c.addText("palette");
		a_c.addText("adjustPixel");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("argb");
		a_c.addText("errA");
		a_c.addText("errR");
		a_c.addText("errG");
		a_c.addText("errB");
		a_c.addText("mul");
		a_c.addText("a");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
	}
	public void c124_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.Dithering"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.palette.Dithering"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.palette.Dithering"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.palette.Dithering"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{40, 41, 42, 45, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75});
		d(m_classes.get("org.apache.commons.imaging.palette.Dithering"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.MethodCall, new int[]{43, 44});
	}

	public void c125_texts(dmClass a_c) {
		a_c.addText("componentIdentifier");
		a_c.addText("horizontalSamplingFactor");
		a_c.addText("verticalSamplingFactor");
		a_c.addText("quantTabDestSelector");
		a_c.addText("<init>");
		a_c.addText("componentIdentifier");
		a_c.addText("horizontalSamplingFactor");
		a_c.addText("veritcalSamplingFactor");
		a_c.addText("quantTabDestSelector");
	}

	public void c126_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("numberOfComponents");
		a_c.addText("precision");
		a_c.addText("components");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("SOF0Segment marker_length: ");
		a_c.addText("Data_precision");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("Image_height");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("Image_Width");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("Number_of_components");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("ComponentIdentifier");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("SamplingFactors");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("QuantTabDestSel");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("componentIdentifier");
		a_c.addText("hvSamplingFactors");
		a_c.addText("horizontalSamplingFactor");
		a_c.addText("verticalSamplingFactor");
		a_c.addText("quantTabDestSelector");
		a_c.addText("i");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("getComponents");
		a_c.addText("getComponents");
		a_c.addText("index");
		a_c.addText("getDescription");
		a_c.addText("SOFN (SOF");
		a_c.addText("65472");
		a_c.addText(") (");
		a_c.addText(")");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/jpeg/segments/SofnSegment;");
	}
	public void c125_deps() {
	}
	public void c126_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 57);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{67, 68, 69, 70, 74, 77, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.ConstructorCall, new int[]{72, 83});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.OwnFieldUse, new int[]{72, 83, 94, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.Returns, new int[]{87, 94});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.MethodCall, 94);
	}

	public void c127_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("-1");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("cause");
	}
	public void c127_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImagingException"), m_classes.get("long"), dmDependency.Type.Field, 1);
	}

	public void c128_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("decompress");
		a_c.addText("8");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("255");
		a_c.addText("125");
		a_c.addText("255");
		a_c.addText("i");
		a_c.addText("count");
		a_c.addText("i");
		a_c.addText("count");
		a_c.addText("remaining");
		a_c.addText("resultPos");
		a_c.addText("band");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("data");
		a_c.addText("pixelCount");
		a_c.addText("result");
		a_c.addText("dataPos");
	}
	public void c128_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.Rle24Compression"), m_classes.get("byte"), dmDependency.Type.Returns, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.Rle24Compression"), m_classes.get("byte"), dmDependency.Type.Argument, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.Rle24Compression"), m_classes.get("byte"), dmDependency.Type.LocalVar, 65);
	}

	public void c129_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("removeXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("byteSource");
		a_c.addText("removeXmpXml");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("jfifPieces");
		a_c.addText("pieces");
		a_c.addText("updateXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("xmpXml");
		a_c.addText("byteSource");
		a_c.addText("updateXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("xmpXml");
		a_c.addText("byteSource");
		a_c.addText("updateXmpXml");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("xmpXml");
		a_c.addText("byteSource");
		a_c.addText("updateXmpXml");
		a_c.addText("65535");
		a_c.addText("65505");
		a_c.addText("segmentSize");
		a_c.addText("segmentData");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("xmpXml");
		a_c.addText("jfifPieces");
		a_c.addText("pieces");
		a_c.addText("newPieces");
		a_c.addText("xmpXmlBytes");
		a_c.addText("index");
		a_c.addText("writeXmpSegment");
		a_c.addText("xmpXmlData");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("os");
	}
	public void c129_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{39, 60, 78, 96, 116, 136, 156, 176});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{39, 60, 78, 96, 116, 136, 156, 176, 213});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{39, 156});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{39, 60, 78, 96, 116, 136, 156, 176});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{58, 174});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.LocalVar, new int[]{60, 78, 96, 136, 156, 176});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{60, 116, 213});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{76, 134});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{78, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.ConstructorCall, new int[]{94, 154});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{96, 176});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.FieldUse, new int[]{113, 196});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.LocalVar, new int[]{116, 213});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.LocalVar, new int[]{116, 213});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{116, 136, 156, 176});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, 206);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{213, 213});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.LocalVar, 213);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("byte"), dmDependency.Type.Returns, 213);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 217);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 219);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, 219);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{220, 222});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpRewriter"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 222);
	}

	public void c130_texts(dmClass a_c) {
		a_c.addText("ALL_TAGS");
		a_c.addText("ALL_TAG_MAP");
		a_c.addText("TAG_COUNTS");
		a_c.addText("<init>");
		a_c.addText("makeMergedTagList");
		a_c.addText("result");
		a_c.addText("makeTagMap");
		a_c.addText("tagList");
		a_c.addText("tag");
		a_c.addText("tags");
		a_c.addText("map");
		a_c.addText("countTags");
		a_c.addText("count");
		a_c.addText("tag");
		a_c.addText("tags");
		a_c.addText("map");
		a_c.addText("getTagCount");
		a_c.addText("tag");
		a_c.addText("getTag");
		a_c.addText("directoryType");
		a_c.addText("tag");
		a_c.addText("possibleMatches");
		a_c.addText("getTag");
		a_c.addText("tagInfo");
		a_c.addText("tagInfo");
		a_c.addText("tagInfo");
		a_c.addText("directoryType");
		a_c.addText("possibleMatches");
		a_c.addText("<clinit>");
	}
	public void c130_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Returns, new int[]{50, 78, 114, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants"), dmDependency.Type.FieldUse, 58);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), dmDependency.Type.FieldUse, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), dmDependency.Type.FieldUse, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), dmDependency.Type.FieldUse, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), dmDependency.Type.FieldUse, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), dmDependency.Type.FieldUse, 63);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), dmDependency.Type.FieldUse, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), dmDependency.Type.FieldUse, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), dmDependency.Type.FieldUse, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), dmDependency.Type.FieldUse, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), dmDependency.Type.FieldUse, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), dmDependency.Type.FieldUse, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), dmDependency.Type.FieldUse, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), dmDependency.Type.FieldUse, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), dmDependency.Type.FieldUse, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), dmDependency.Type.FieldUse, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), dmDependency.Type.FieldUse, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{75, 121, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.WangTagConstants"), dmDependency.Type.FieldUse, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.LocalVar, new int[]{78, 95, 95, 110, 124, 165, 165, 165});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{78, 95, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{87, 90, 102, 104, 106, 136, 139, 146, 149, 152, 160});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{136, 139, 146, 160});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.MethodCall, new int[]{150, 153});
	}

	public void c131_texts(dmClass a_c) {
		a_c.addText("quantizationTables");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("QuantizationTablePrecisionAndDestination");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("64");
		a_c.addText("10");
		a_c.addText("64");
		a_c.addText("255");
		a_c.addText("QuantizationTableElement");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("QuantizationTableElement");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("Quantization table precision \'");
		a_c.addText("\' is invalid");
		a_c.addText("i");
		a_c.addText("precisionAndDestination");
		a_c.addText("precision");
		a_c.addText("destinationIdentifier");
		a_c.addText("elements");
		a_c.addText("marker");
		a_c.addText("length");
		a_c.addText("is");
		a_c.addText("getDescription");
		a_c.addText("DQT (");
		a_c.addText(")");
	}

	public void c132_texts(dmClass a_c) {
		a_c.addText("precision");
		a_c.addText("destinationIdentifier");
		a_c.addText("elements");
		a_c.addText("<init>");
		a_c.addText("precision");
		a_c.addText("destinationIdentifier");
		a_c.addText("elements");
		a_c.addText("getElements");
	}
	public void c131_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{1, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{62, 72, 76});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.ConstructorCall, 85);
	}
	public void c132_deps() {
	}

	public void c133_texts(dmClass a_c) {
		a_c.addText("transparentColor");
		a_c.addText("<init>");
		a_c.addText("transparentRed");
		a_c.addText("tRNS: Missing transparentColor");
		a_c.addText("transparentGreen");
		a_c.addText("tRNS: Missing transparentColor");
		a_c.addText("transparentBlue");
		a_c.addText("tRNS: Missing transparentColor");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("transparentRed");
		a_c.addText("transparentGreen");
		a_c.addText("transparentBlue");
		a_c.addText("filter");
		a_c.addText("16777215");
		a_c.addText("rgb");
		a_c.addText("sample");
	}
	public void c133_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{33, 34, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 41);
	}

	public void c134_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("bytesPerPixel");
		a_c.addText("bitsPerPixel");
		a_c.addText("pngChunkPLTE");
		a_c.addText("gammaCorrection");
		a_c.addText("transparencyFilter");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("bitsPerPixel");
		a_c.addText("pngChunkPLTE");
		a_c.addText("gammaCorrection");
		a_c.addText("transparencyFilter");
		a_c.addText("getBitsToBytesRoundingUp");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("bits");
		a_c.addText("getPixelARGB");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("getPixelRGB");
		a_c.addText("255");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("drive");
		a_c.addText("getRGB");
		a_c.addText("-16777216");
		a_c.addText("24");
		a_c.addText("PNG: unknown color type: ");
		a_c.addText("sample");
		a_c.addText("rgb");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("rgb");
		a_c.addText("sample");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("bitParser");
		a_c.addText("pixelIndexInScanline");
		a_c.addText("getScanlineFilter");
		a_c.addText("filterType");
		a_c.addText("bytesPerPixel");
		a_c.addText("unfilterScanline");
		a_c.addText("8");
		a_c.addText("filterType");
		a_c.addText("src");
		a_c.addText("prev");
		a_c.addText("bytesPerPixel");
		a_c.addText("filter");
		a_c.addText("dst");
		a_c.addText("getNextScanline");
		a_c.addText("PNG: missing filter type");
		a_c.addText("PNG: unknown filterType: ");
		a_c.addText("scanline");
		a_c.addText("PNG: missing image data");
		a_c.addText("is");
		a_c.addText("length");
		a_c.addText("prev");
		a_c.addText("bytesPerPixel");
		a_c.addText("filterType");
		a_c.addText("scanline");
	}

	public void c135_texts(dmClass a_c) {
		a_c.addText("<clinit>");
		a_c.addText("10");
		a_c.addText("10");
	}
	public void c134_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{1, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.OwnFieldUse, new int[]{56, 85, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.OwnFieldUse, new int[]{60, 132});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.OwnFieldUse, new int[]{61, 90, 91, 115, 118, 119, 120, 146, 147, 159, 160, 161, 162});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.OwnFieldUse, new int[]{62, 96, 97, 111, 112, 134, 135});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{77, 77, 168, 186, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{77, 77, 186, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.Argument, 77);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter$1"), dmDependency.Type.FieldUse, new int[]{85, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, 85);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.MethodCall, new int[]{88, 105, 106, 107, 130, 143, 144, 154, 155, 156, 157});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.MethodCall, new int[]{91, 118, 119, 120, 147, 160, 161, 162});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.MethodCall, new int[]{97, 112, 135});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.MethodCall, 132);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{168, 202, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Returns, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.Argument, new int[]{168, 186});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.MethodCall, new int[]{173, 204, 210});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone"), dmDependency.Type.ConstructorCall, 175);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub"), dmDependency.Type.ConstructorCall, 177);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp"), dmDependency.Type.ConstructorCall, 179);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage"), dmDependency.Type.ConstructorCall, 181);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth"), dmDependency.Type.ConstructorCall, 183);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{186, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{186, 186, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.MethodCall, 194);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.LocalVar, 195);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{195, 210});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 208);
	}
	public void c135_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter$1"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.MethodCall, new int[]{173, 173, 173, 173, 173, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter$1"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.FieldUse, new int[]{173, 173, 173, 173, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter$1"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, new int[]{85, 85, 85, 85, 85, 85});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter$1"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.FieldUse, new int[]{85, 85, 85, 85, 85});
	}

	public void c136_texts(dmClass a_c) {
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("<init>");
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("getKeyword");
		a_c.addText("getText");
		a_c.addText("toString");
		a_c.addText("toString");
		a_c.addText(": ");
		a_c.addText("prefix");
		a_c.addText("result");
	}

	public void c137_texts(dmClass a_c) {
		a_c.addText("NEWLINE");
		a_c.addText("items");
		a_c.addText("<init>");
		a_c.addText("add");
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("add");
		a_c.addText("item");
		a_c.addText("getItems");
		a_c.addText("toString");
		a_c.addText("toString");
		a_c.addText("\t");
		a_c.addText("item");
		a_c.addText("i");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c136_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Implements, 1);
	}
	public void c137_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.MethodCall, 59);
		d(m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.LocalVar, 65);
	}

	public void c138_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("i");
		a_c.addText("string");
		a_c.addText("i");
		a_c.addText("string");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("nullCount");
		a_c.addText("strings");
		a_c.addText("stringsAdded");
		a_c.addText("nextStringPos");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c138_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{29, 65});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{30, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("byte"), dmDependency.Type.Argument, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{48, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("byte"), dmDependency.Type.Returns, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), dmDependency.Type.MethodCall, 65);
	}

	public void c139_texts(dmClass a_c) {
		a_c.addText("readImageData");
		a_c.addText("<init>");
		a_c.addText("readImageData");
		a_c.addText("addDirectory");
		a_c.addText("directory");
		a_c.addText("readImageData");
	}

	public void c140_texts(dmClass a_c) {
		a_c.addText("tiffHeader");
		a_c.addText("directories");
		a_c.addText("fields");
		a_c.addText("readThumbnails");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("params");
		a_c.addText("tmpReadThumbnails");
		a_c.addText("setTiffHeader");
		a_c.addText("tiffHeader");
		a_c.addText("addDirectory");
		a_c.addText("directory");
		a_c.addText("addField");
		a_c.addText("field");
		a_c.addText("readImageData");
		a_c.addText("readOffsetDirectories");
		a_c.addText("getContents");
	}

	public void c141_texts(dmClass a_c) {
		a_c.addText("setTiffHeader");
		a_c.addText("addDirectory");
		a_c.addText("addField");
		a_c.addText("readImageData");
		a_c.addText("readOffsetDirectories");
	}

	public void c142_texts(dmClass a_c) {
		a_c.addText("strict");
		a_c.addText("<init>");
		a_c.addText("strict");
		a_c.addText("readTiffHeader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("getTiffByteOrder");
		a_c.addText("73");
		a_c.addText("77");
		a_c.addText("Invalid TIFF byte order ");
		a_c.addText("255");
		a_c.addText("byteOrderByte");
		a_c.addText("readTiffHeader");
		a_c.addText("BYTE_ORDER_1");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("BYTE_ORDER_2");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("Byte Order bytes don\'t match (");
		a_c.addText(", ");
		a_c.addText(").");
		a_c.addText("tiffVersion");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("42");
		a_c.addText("Unknown Tiff Version: ");
		a_c.addText("4294967295");
		a_c.addText("offsetToFirstIFD");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("8");
		a_c.addText("Not a Valid TIFF File: couldn\'t find IFDs");
		a_c.addText("is");
		a_c.addText("byteOrder1");
		a_c.addText("byteOrder2");
		a_c.addText("byteOrder");
		a_c.addText("tiffVersion");
		a_c.addText("offsetToFirstIFD");
		a_c.addText("readDirectories");
		a_c.addText("byteSource");
		a_c.addText("formatCompliance");
		a_c.addText("listener");
		a_c.addText("tiffHeader");
		a_c.addText("offset");
		a_c.addText("dirType");
		a_c.addText("visited");
		a_c.addText("readDirectory");
		a_c.addText("byteSource");
		a_c.addText("offset");
		a_c.addText("dirType");
		a_c.addText("formatCompliance");
		a_c.addText("listener");
		a_c.addText("visited");
		a_c.addText("ignoreNextDirectory");
		a_c.addText("readDirectory");
		a_c.addText("DirectoryEntryCount");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("Tag");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("Type");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("4294967295");
		a_c.addText("Count");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("Offset");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("4294967295");
		a_c.addText("4");
		a_c.addText("Attempt to read byte range starting from ");
		a_c.addText(" of length ");
		a_c.addText(" which is outside the file\'s size of ");
		a_c.addText("4294967295");
		a_c.addText("nextDirectoryOffset");
		a_c.addText("Not a Valid TIFF File");
		a_c.addText("10");
		a_c.addText("-2");
		a_c.addText("-3");
		a_c.addText("-4");
		a_c.addText("entryCount");
		a_c.addText("e");
		a_c.addText("fieldType");
		a_c.addText("imageReadEx");
		a_c.addText("value");
		a_c.addText("tag");
		a_c.addText("type");
		a_c.addText("count");
		a_c.addText("offsetBytes");
		a_c.addText("offset");
		a_c.addText("fieldType");
		a_c.addText("valueLength");
		a_c.addText("value");
		a_c.addText("field");
		a_c.addText("i");
		a_c.addText("rawImageData");
		a_c.addText("rawJpegImageData");
		a_c.addText("subDirectoryOffset");
		a_c.addText("subDirectoryType");
		a_c.addText("imageReadException");
		a_c.addText("subDirectoryRead");
		a_c.addText("offsetField");
		a_c.addText("field");
		a_c.addText("i");
		a_c.addText("offsetFields");
		a_c.addText("directoryTypes");
		a_c.addText("fields");
		a_c.addText("entryCount");
		a_c.addText("nextDirectoryOffset");
		a_c.addText("directory");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("directoryOffset");
		a_c.addText("dirType");
		a_c.addText("formatCompliance");
		a_c.addText("listener");
		a_c.addText("ignoreNextDirectory");
		a_c.addText("visited");
		a_c.addText("readFirstDirectory");
		a_c.addText("Image did not contain any directories.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readImageData");
		a_c.addText("formatCompliance");
		a_c.addText("collector");
		a_c.addText("contents");
		a_c.addText("readDirectories");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("Image did not contain any directories.");
		a_c.addText("byteSource");
		a_c.addText("readImageData");
		a_c.addText("formatCompliance");
		a_c.addText("params");
		a_c.addText("collector");
		a_c.addText("contents");
		a_c.addText("readContents");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("collector");
		a_c.addText("read");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("listener");
		a_c.addText("getTiffRawImageData");
		a_c.addText("2147483647");
		a_c.addText("Can\'t find tile width field.");
		a_c.addText("Can\'t find tile length field.");
		a_c.addText("element");
		a_c.addText("i");
		a_c.addText("bsf");
		a_c.addText("element");
		a_c.addText("bytes");
		a_c.addText("i");
		a_c.addText("imageHeight");
		a_c.addText("rowsPerStripField");
		a_c.addText("rowsPerStrip");
		a_c.addText("tileWidthField");
		a_c.addText("tileWidth");
		a_c.addText("tileLengthField");
		a_c.addText("tileLength");
		a_c.addText("byteSource");
		a_c.addText("directory");
		a_c.addText("elements");
		a_c.addText("data");
		a_c.addText("getJpegRawImageData");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("65497");
		a_c.addText("JPEG EOI marker could not be found at expected location");
		a_c.addText("byteSource");
		a_c.addText("directory");
		a_c.addText("element");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("data");
	}
	public void c139_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.ConstructorCall, 342);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 344);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.MethodCall, 348);
	}
	public void c140_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.ConstructorCall, 295);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Argument, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.OwnFieldUse, new int[]{308, 335});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 309);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 315);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.Returns, 331);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.ConstructorCall, 335);
	}
	public void c141_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 1);
	}
	public void c142_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{55, 60, 69, 93, 109, 115, 273, 388, 403, 412, 420, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{55, 69, 93, 109, 115, 273, 388, 403, 412, 420, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Returns, new int[]{55, 69});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{55, 93, 109, 115, 273, 388, 403, 412, 420, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{58, 129, 130, 175, 181, 187, 438, 489, 490, 492});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{60, 60, 60, 60, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{60, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Returns, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{65, 67});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{69, 77, 85, 385, 400, 469, 475, 497});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{74, 75, 83, 89, 91, 134, 140, 149, 150, 151, 152, 202});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.ConstructorCall, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{93, 109, 273, 273, 273, 273, 273, 499});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Argument, new int[]{93, 109, 115, 273, 388, 403, 412});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), dmDependency.Type.Argument, new int[]{93, 109, 115, 412});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), dmDependency.Type.MethodCall, new int[]{100, 197, 212, 225, 229});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.FieldUse, 104);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.LocalVar, 109);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Listener"), dmDependency.Type.LocalVar, new int[]{115, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, 153);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, new int[]{165, 172});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 181);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.ConstructorCall, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.ConstructorCall, 210);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{213, 216, 218, 221, 242, 248, 425, 443, 444, 454, 467, 473, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.ConstructorCall, 230);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), dmDependency.Type.FieldUse, new int[]{230, 230, 230});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.FieldUse, new int[]{266, 268});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.LocalVar, new int[]{273, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.LocalVar, new int[]{273, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{273, 273, 273, 479, 499});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{273, 273, 273, 479, 479, 479, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.LocalVar, new int[]{273, 273});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.Returns, new int[]{273, 388, 403});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$FirstDirectoryCollector"), dmDependency.Type.ConstructorCall, 381);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.MethodCall, new int[]{383, 398, 412});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.FieldUse, new int[]{384, 399});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.LocalVar, new int[]{388, 403});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.ConstructorCall, new int[]{396, 410});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader$Collector"), dmDependency.Type.LocalVar, 403);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Returns, 420);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, new int[]{420, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), dmDependency.Type.ConstructorCall, new int[]{426, 439});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.FieldUse, new int[]{432, 432, 438, 438, 439, 439, 486, 487});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), dmDependency.Type.ConstructorCall, 432);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{444, 454, 467, 473});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{452, 460, 471, 477});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.ConstructorCall, 465);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), dmDependency.Type.ConstructorCall, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.LocalVar, new int[]{479, 479, 479, 499});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Returns, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.ConstructorCall, 499);
	}

	public void c143_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".xpm");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("colorNames");
		a_c.addText("WRITE_PALETTE");
		a_c.addText("<init>");
		a_c.addText("loadColorNames");
		a_c.addText("Lorg/apache/commons/imaging/formats/xpm/XpmImageParser;");
		a_c.addText("Lorg/apache/commons/imaging/formats/xpm/XpmImageParser;");
		a_c.addText("rgb.txt");
		a_c.addText("Couldn\'t find rgb.txt in our resources");
		a_c.addText("33");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("11");
		a_c.addText("11");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Couldn\'t parse color in rgb.txt");
		a_c.addText("Could not parse rgb.txt");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("colorName");
		a_c.addText("nfe");
		a_c.addText("line");
		a_c.addText("reader");
		a_c.addText("isReader");
		a_c.addText("rgbTxtStream");
		a_c.addText("colors");
		a_c.addText("ioException");
		a_c.addText("getName");
		a_c.addText("X PixMap");
		a_c.addText("getDefaultExtension");
		a_c.addText(".xpm");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("-16777216");
		a_c.addText("-16777216");
		a_c.addText("XPM version 3");
		a_c.addText("8");
		a_c.addText("X PixMap");
		a_c.addText("image/x-xpixmap");
		a_c.addText("paletteEntry");
		a_c.addText("entry");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("xpmHeader");
		a_c.addText("transparent");
		a_c.addText("colorType");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("xpmHeader");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readXpmHeader");
		a_c.addText("byteSource");
		a_c.addText("parseXpmHeader");
		a_c.addText("XPM");
		a_c.addText("Parsing XPM file failed, signature isn\'t \'/* XPM */\'");
		a_c.addText("firstComment");
		a_c.addText("preprocessedFile");
		a_c.addText("xpmParseResult");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("parseNextString");
		a_c.addText("34");
		a_c.addText("Parsing XPM file failed, no string found where expected");
		a_c.addText("34");
		a_c.addText(",");
		a_c.addText("}");
		a_c.addText("Parsing XPM file failed, no \',\' or \'}\' found where expected");
		a_c.addText("cParser");
		a_c.addText("stringBuilder");
		a_c.addText("token");
		a_c.addText("parseXpmValuesSection");
		a_c.addText("7");
		a_c.addText("Parsing XPM file failed, <Values> section has incorrect tokens");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("XPMEXT");
		a_c.addText("Parsing XPM file failed, can\'t parse <Values> section XPMEXT");
		a_c.addText("Parsing XPM file failed, error parsing <Values> section");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("numColors");
		a_c.addText("numCharsPerPixel");
		a_c.addText("xHotSpot");
		a_c.addText("yHotSpot");
		a_c.addText("xpmExt");
		a_c.addText("nfe");
		a_c.addText("row");
		a_c.addText("tokens");
		a_c.addText("parseColor");
		a_c.addText("35");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("-16777216");
		a_c.addText("20");
		a_c.addText("12");
		a_c.addText("6");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("9");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("16");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("12");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("16");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("16");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("37");
		a_c.addText("HSV colors are not implemented even in the XPM specification!");
		a_c.addText("None");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("colorLowercase");
		a_c.addText("color");
		a_c.addText("populatePaletteEntry");
		a_c.addText("m");
		a_c.addText("g4");
		a_c.addText("g");
		a_c.addText("s");
		a_c.addText("c");
		a_c.addText("paletteEntry");
		a_c.addText("key");
		a_c.addText("color");
		a_c.addText("parsePaletteEntries");
		a_c.addText("Parsing XPM file failed, file ended while reading palette");
		a_c.addText("-2147483648");
		a_c.addText("m");
		a_c.addText("g4");
		a_c.addText("g");
		a_c.addText("c");
		a_c.addText("s");
		a_c.addText("32");
		a_c.addText("key");
		a_c.addText("color");
		a_c.addText("token");
		a_c.addText("isKey");
		a_c.addText("j");
		a_c.addText("key");
		a_c.addText("color");
		a_c.addText("hasMore");
		a_c.addText("name");
		a_c.addText("tokens");
		a_c.addText("paletteEntry");
		a_c.addText("previousKeyIndex");
		a_c.addText("colorBuffer");
		a_c.addText("i");
		a_c.addText("xpmHeader");
		a_c.addText("cParser");
		a_c.addText("row");
		a_c.addText("parseXpmHeader");
		a_c.addText("static");
		a_c.addText("Parsing XPM file failed, no \'static\' token");
		a_c.addText("char");
		a_c.addText("Parsing XPM file failed, no \'char\' token");
		a_c.addText("*");
		a_c.addText("Parsing XPM file failed, no \'*\' token");
		a_c.addText("Parsing XPM file failed, no variable name");
		a_c.addText("95");
		a_c.addText("Parsing XPM file failed, variable name doesn\'t start with letter or underscore");
		a_c.addText("95");
		a_c.addText("Parsing XPM file failed, variable name contains non-letter non-digit non-underscore");
		a_c.addText("[");
		a_c.addText("Parsing XPM file failed, no \'[\' token");
		a_c.addText("]");
		a_c.addText("Parsing XPM file failed, no \']\' token");
		a_c.addText("=");
		a_c.addText("Parsing XPM file failed, no \'=\' token");
		a_c.addText("{");
		a_c.addText("Parsing XPM file failed, no \'{\' token");
		a_c.addText("Parsing XPM file failed, file too short");
		a_c.addText("c");
		a_c.addText("i");
		a_c.addText("cParser");
		a_c.addText("name");
		a_c.addText("token");
		a_c.addText("row");
		a_c.addText("hasMore");
		a_c.addText("xpmHeader");
		a_c.addText("readXpmImage");
		a_c.addText("256");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("65536");
		a_c.addText("10");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("32");
		a_c.addText("Parsing XPM file failed, insufficient image rows in file");
		a_c.addText("No palette entry was defined for ");
		a_c.addText("16");
		a_c.addText(";");
		a_c.addText("Last token wasn\'t \';\'");
		a_c.addText("paletteEntry");
		a_c.addText("entry");
		a_c.addText("palette");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("bpp");
		a_c.addText("paletteEntry");
		a_c.addText("entry");
		a_c.addText("palette");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("bpp");
		a_c.addText("index");
		a_c.addText("paletteEntry");
		a_c.addText("x");
		a_c.addText("rowOffset");
		a_c.addText("y");
		a_c.addText("xpmHeader");
		a_c.addText("cParser");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("bpp");
		a_c.addText("image");
		a_c.addText("dataBuffer");
		a_c.addText("row");
		a_c.addText("hasMore");
		a_c.addText("token");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("getBufferedImage");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("result");
		a_c.addText("randomName");
		a_c.addText("a");
		a_c.addText("56");
		a_c.addText("255");
		a_c.addText("56");
		a_c.addText("255");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("uuid");
		a_c.addText("stringBuilder");
		a_c.addText("bits");
		a_c.addText("pixelsForIndex");
		a_c.addText("i");
		a_c.addText("multiple");
		a_c.addText("i");
		a_c.addText("index");
		a_c.addText("charsPerPixel");
		a_c.addText("stringBuilder");
		a_c.addText("highestPower");
		a_c.addText("toColor");
		a_c.addText("6");
		a_c.addText("6");
		a_c.addText("5");
		a_c.addText("48");
		a_c.addText("#");
		a_c.addText("#");
		a_c.addText("zeroes");
		a_c.addText("color");
		a_c.addText("hex");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("Unknown parameter: ");
		a_c.addText("2147483647");
		a_c.addText("Xpm: Can\'t write images with more than Integer.MAX_VALUE colors.");
		a_c.addText("2147483647");
		a_c.addText("Xpm: Can\'t write images with more than Integer.MAX_VALUE chars per pixel.");
		a_c.addText("/* XPM */\n");
		a_c.addText("static char *");
		a_c.addText("[] = {\n");
		a_c.addText("\"");
		a_c.addText(" ");
		a_c.addText(" ");
		a_c.addText(" ");
		a_c.addText("\",\n");
		a_c.addText("None");
		a_c.addText("\"");
		a_c.addText(" c ");
		a_c.addText("\",\n");
		a_c.addText(",\n");
		a_c.addText("\"");
		a_c.addText("-16777216");
		a_c.addText("16777215");
		a_c.addText("\"");
		a_c.addText("\n};\n");
		a_c.addText("firstKey");
		a_c.addText("nextMaxColors");
		a_c.addText("nextCharsPerPixel");
		a_c.addText("color");
		a_c.addText("color");
		a_c.addText("i");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("paletteFactory");
		a_c.addText("hasTransparency");
		a_c.addText("palette");
		a_c.addText("maxColors");
		a_c.addText("charsPerPixel");
		a_c.addText("colors");
		a_c.addText("line");
		a_c.addText("separator");
		a_c.addText("<clinit>");
		a_c.addText(".xpm");
		a_c.addText("92");
		a_c.addText("5");
		a_c.addText("32");
		a_c.addText("46");
		a_c.addText("88");
		a_c.addText("111");
		a_c.addText("79");
		a_c.addText("43");
		a_c.addText("6");
		a_c.addText("64");
		a_c.addText("7");
		a_c.addText("35");
		a_c.addText("8");
		a_c.addText("36");
		a_c.addText("9");
		a_c.addText("37");
		a_c.addText("10");
		a_c.addText("38");
		a_c.addText("11");
		a_c.addText("42");
		a_c.addText("12");
		a_c.addText("61");
		a_c.addText("13");
		a_c.addText("45");
		a_c.addText("14");
		a_c.addText("59");
		a_c.addText("15");
		a_c.addText("58");
		a_c.addText("16");
		a_c.addText("62");
		a_c.addText("17");
		a_c.addText("44");
		a_c.addText("18");
		a_c.addText("60");
		a_c.addText("19");
		a_c.addText("49");
		a_c.addText("20");
		a_c.addText("50");
		a_c.addText("21");
		a_c.addText("51");
		a_c.addText("22");
		a_c.addText("52");
		a_c.addText("23");
		a_c.addText("53");
		a_c.addText("24");
		a_c.addText("54");
		a_c.addText("25");
		a_c.addText("55");
		a_c.addText("26");
		a_c.addText("56");
		a_c.addText("27");
		a_c.addText("57");
		a_c.addText("28");
		a_c.addText("48");
		a_c.addText("29");
		a_c.addText("113");
		a_c.addText("30");
		a_c.addText("119");
		a_c.addText("31");
		a_c.addText("101");
		a_c.addText("32");
		a_c.addText("114");
		a_c.addText("33");
		a_c.addText("116");
		a_c.addText("34");
		a_c.addText("121");
		a_c.addText("35");
		a_c.addText("117");
		a_c.addText("36");
		a_c.addText("105");
		a_c.addText("37");
		a_c.addText("112");
		a_c.addText("38");
		a_c.addText("97");
		a_c.addText("39");
		a_c.addText("115");
		a_c.addText("40");
		a_c.addText("100");
		a_c.addText("41");
		a_c.addText("102");
		a_c.addText("42");
		a_c.addText("103");
		a_c.addText("43");
		a_c.addText("104");
		a_c.addText("44");
		a_c.addText("106");
		a_c.addText("45");
		a_c.addText("107");
		a_c.addText("46");
		a_c.addText("108");
		a_c.addText("47");
		a_c.addText("122");
		a_c.addText("48");
		a_c.addText("120");
		a_c.addText("49");
		a_c.addText("99");
		a_c.addText("50");
		a_c.addText("118");
		a_c.addText("51");
		a_c.addText("98");
		a_c.addText("52");
		a_c.addText("110");
		a_c.addText("53");
		a_c.addText("109");
		a_c.addText("54");
		a_c.addText("77");
		a_c.addText("55");
		a_c.addText("78");
		a_c.addText("56");
		a_c.addText("66");
		a_c.addText("57");
		a_c.addText("86");
		a_c.addText("58");
		a_c.addText("67");
		a_c.addText("59");
		a_c.addText("90");
		a_c.addText("60");
		a_c.addText("65");
		a_c.addText("61");
		a_c.addText("83");
		a_c.addText("62");
		a_c.addText("68");
		a_c.addText("63");
		a_c.addText("70");
		a_c.addText("64");
		a_c.addText("71");
		a_c.addText("65");
		a_c.addText("72");
		a_c.addText("66");
		a_c.addText("74");
		a_c.addText("67");
		a_c.addText("75");
		a_c.addText("68");
		a_c.addText("76");
		a_c.addText("69");
		a_c.addText("80");
		a_c.addText("70");
		a_c.addText("73");
		a_c.addText("71");
		a_c.addText("85");
		a_c.addText("72");
		a_c.addText("89");
		a_c.addText("73");
		a_c.addText("84");
		a_c.addText("74");
		a_c.addText("82");
		a_c.addText("75");
		a_c.addText("69");
		a_c.addText("76");
		a_c.addText("87");
		a_c.addText("77");
		a_c.addText("81");
		a_c.addText("78");
		a_c.addText("33");
		a_c.addText("79");
		a_c.addText("126");
		a_c.addText("80");
		a_c.addText("94");
		a_c.addText("81");
		a_c.addText("47");
		a_c.addText("82");
		a_c.addText("40");
		a_c.addText("83");
		a_c.addText("41");
		a_c.addText("84");
		a_c.addText("95");
		a_c.addText("85");
		a_c.addText("96");
		a_c.addText("86");
		a_c.addText("39");
		a_c.addText("87");
		a_c.addText("93");
		a_c.addText("88");
		a_c.addText("91");
		a_c.addText("89");
		a_c.addText("123");
		a_c.addText("90");
		a_c.addText("125");
		a_c.addText("91");
		a_c.addText("124");
	}

	public void c144_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("numColors");
		a_c.addText("numCharsPerPixel");
		a_c.addText("xHotSpot");
		a_c.addText("yHotSpot");
		a_c.addText("xpmExt");
		a_c.addText("palette");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("numColors");
		a_c.addText("numCharsPerPixel");
		a_c.addText("xHotSpot");
		a_c.addText("yHotSpot");
		a_c.addText("xpmExt");
		a_c.addText("dump");
		a_c.addText("XpmHeader");
		a_c.addText("Width: ");
		a_c.addText("Height: ");
		a_c.addText("NumColors: ");
		a_c.addText("NumCharsPerPixel: ");
		a_c.addText("X hotspot: ");
		a_c.addText("Y hotspot: ");
		a_c.addText("XpmExt: ");
		a_c.addText("pw");
	}

	public void c145_texts(dmClass a_c) {
	}

	public void c146_texts(dmClass a_c) {
		a_c.addText("index");
		a_c.addText("haveColor");
		a_c.addText("colorArgb");
		a_c.addText("haveGray");
		a_c.addText("grayArgb");
		a_c.addText("haveGray4Level");
		a_c.addText("gray4LevelArgb");
		a_c.addText("haveMono");
		a_c.addText("monoArgb");
		a_c.addText("<init>");
		a_c.addText("getBestARGB");
		a_c.addText("<init>");
		a_c.addText("x0");
	}

	public void c147_texts(dmClass a_c) {
		a_c.addText("xpmHeader");
		a_c.addText("cParser");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("x0");
	}
	public void c143_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("char"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{56, 125, 132, 153, 164, 170, 242, 261, 281, 316, 360, 381, 435, 503, 584, 591});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{79, 97, 103, 252, 269, 281, 290, 309, 316, 350, 390, 443, 448, 453, 458, 462, 469, 476, 481, 486, 491, 498, 553, 562, 581});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{82, 691, 693, 696, 707, 712, 715, 725, 728, 732});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.InputStreamReader"), dmDependency.Type.ConstructorCall, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.BufferedReader"), dmDependency.Type.ConstructorCall, 83);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.BufferedReader"), dmDependency.Type.MethodCall, new int[]{85, 100, 100, 100, 100});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.InputStreamReader"), dmDependency.Type.MethodCall, new int[]{100, 100, 100, 100});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.BufferedReader"), dmDependency.Type.LocalVar, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.InputStreamReader"), dmDependency.Type.LocalVar, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{106, 261});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 120);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{125, 153});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{125, 132, 153, 164, 170, 242, 261, 381, 435, 503, 584, 591, 638});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{125, 132, 153, 164, 170, 242, 584, 591});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 132);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, new int[]{140, 147, 148, 150});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.FieldUse, new int[]{141, 153, 153, 153, 164, 164, 386, 392, 393, 433, 511, 512, 513, 517, 519, 519, 523, 524, 525, 529, 531, 531, 538, 538, 549, 552, 556, 557, 558, 558, 560});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.MethodCall, new int[]{143, 515, 527, 569});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.FieldUse, new int[]{146, 148, 148, 366, 367, 369, 370, 372, 373, 375, 376, 378, 379, 395, 515, 527, 566});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 153);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 153);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.LocalVar, new int[]{153, 153, 435, 584, 584, 584, 584, 584});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 153);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 153);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.Returns, new int[]{170, 281, 435});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), dmDependency.Type.FieldUse, new int[]{242, 258, 259, 259, 598, 598});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), dmDependency.Type.Returns, 242);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 247);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.MethodCall, new int[]{249, 267, 272, 273, 274, 273, 288, 393, 441, 446, 451, 456, 474, 479, 484, 489, 579});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), dmDependency.Type.ConstructorCall, 256);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 258);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 258);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.ConstructorCall, 258);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{261, 261, 261, 261});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 261);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), dmDependency.Type.LocalVar, 261);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.Argument, new int[]{261, 381, 435, 503});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.ConstructorCall, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.Argument, 360);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.Argument, new int[]{381, 503});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.ConstructorCall, 394);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("char"), dmDependency.Type.LocalVar, new int[]{503, 638});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.LocalVar, 503);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{503, 591});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.ConstructorCall, new int[]{517, 529});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, new int[]{519, 531, 538});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.ConstructorCall, 536);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, 545);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 545);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.MethodCall, 546);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.MethodCall, new int[]{566, 568});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, new int[]{584, 584, 584});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, new int[]{584, 584, 584});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 584);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.LocalVar, 584);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 584);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.MethodCall, 590);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{613, 733, 733});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("char"), dmDependency.Type.OwnFieldUse, new int[]{620, 625, 626, 663, 671, 681, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 638);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 638);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 638);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{654, 674, 677});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, 657);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, new int[]{659, 666});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.MethodCall, new int[]{685, 700, 701, 719, 722});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{691, 693, 696, 707, 712, 715, 725, 728, 732});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{694, 694, 711, 716, 717});
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.LocalVar, 733);
	}
	public void c144_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{196, 197, 198, 199, 200, 202, 203, 205});
	}
	public void c145_deps() {
	}
	public void c146_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$PaletteEntry"), dmDependency.Type.ConstructorCall, 209);
	}
	public void c147_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), m_classes.get("org.apache.commons.imaging.common.BasicCParser"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser$XpmParseResult"), dmDependency.Type.ConstructorCall, 235);
	}

	public void c148_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("-1");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("cause");
		a_c.addText("<init>");
		a_c.addText(": ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("message");
		a_c.addText("data");
		a_c.addText("getType");
		a_c.addText("null");
		a_c.addText("[Object[]: ");
		a_c.addText("]");
		a_c.addText("[char[]: ");
		a_c.addText("]");
		a_c.addText("[byte[]: ");
		a_c.addText("]");
		a_c.addText("[short[]: ");
		a_c.addText("]");
		a_c.addText("[int[]: ");
		a_c.addText("]");
		a_c.addText("[long[]: ");
		a_c.addText("]");
		a_c.addText("[float[]: ");
		a_c.addText("]");
		a_c.addText("[double[]: ");
		a_c.addText("]");
		a_c.addText("[boolean[]: ");
		a_c.addText("]");
		a_c.addText("value");
	}
	public void c148_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageWriteException"), m_classes.get("org.apache.commons.imaging.ImagingException"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageWriteException"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageWriteException"), m_classes.get("org.apache.commons.imaging.ImagingException"), dmDependency.Type.ConstructorCall, new int[]{28, 32, 36});
	}

	public void c149_texts(dmClass a_c) {
		a_c.addText("descriptor");
		a_c.addText("gce");
		a_c.addText("<init>");
		a_c.addText("descriptor");
		a_c.addText("gce");
	}
	public void c149_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.OwnFieldUse, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.OwnFieldUse, 25);
	}

	public void c150_texts(dmClass a_c) {
		a_c.addText("getXmpXml");
	}
	public void c150_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, 1);
	}

	public void c151_texts(dmClass a_c) {
		a_c.addText("tag");
		a_c.addText("tagInfo");
		a_c.addText("fieldType");
		a_c.addText("count");
		a_c.addText("bytes");
		a_c.addText("separateValueItem");
		a_c.addText("sortHint");
		a_c.addText("NEWLINE");
		a_c.addText("<init>");
		a_c.addText("tagInfo");
		a_c.addText("tagtype");
		a_c.addText("count");
		a_c.addText("bytes");
		a_c.addText("<init>");
		a_c.addText("Field Separate value (");
		a_c.addText(")");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("tagInfo");
		a_c.addText("fieldType");
		a_c.addText("count");
		a_c.addText("bytes");
		a_c.addText("createOffsetField");
		a_c.addText("tagInfo");
		a_c.addText("byteOrder");
		a_c.addText("writeField");
		a_c.addText("Unexpected separate value item.");
		a_c.addText("Local value has invalid length: ");
		a_c.addText("Missing separate value item.");
		a_c.addText("i");
		a_c.addText("remainder");
		a_c.addText("bos");
		a_c.addText("getSeperateValue");
		a_c.addText("isLocalValue");
		a_c.addText("bytesEqual");
		a_c.addText("data");
		a_c.addText("setData");
		a_c.addText("Cannot change size of value.");
		a_c.addText("bytes");
		a_c.addText("toString");
		a_c.addText("toString");
		a_c.addText("count: ");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("getSortHint");
		a_c.addText("setSortHint");
		a_c.addText("sortHint");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c151_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{1, 43, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, new int[]{1, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 43, 102, 106});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, 42);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.ConstructorCall, new int[]{42, 65});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.OwnFieldUse, new int[]{48, 140});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.OwnFieldUse, new int[]{49, 71, 149});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{51, 78, 79, 83, 84, 102, 106, 114, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.OwnFieldUse, new int[]{54, 58, 75, 89, 93, 98, 120, 121});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.MethodCall, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.ConstructorCall, 58);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{60, 64, 106});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Returns, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{64, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.MethodCall, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{70, 71, 72, 83, 86, 93});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{76, 79, 90, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.MethodCall, new int[]{93, 121});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Returns, 95);
	}

	public void c152_texts(dmClass a_c) {
		a_c.addText("UNKNOWN");
		a_c.addText("BMP");
		a_c.addText("DCX");
		a_c.addText("GIF");
		a_c.addText("ICNS");
		a_c.addText("ICO");
		a_c.addText("JBIG2");
		a_c.addText("JPEG");
		a_c.addText("PAM");
		a_c.addText("PSD");
		a_c.addText("PBM");
		a_c.addText("PGM");
		a_c.addText("PNM");
		a_c.addText("PPM");
		a_c.addText("PCX");
		a_c.addText("PNG");
		a_c.addText("RGBE");
		a_c.addText("TGA");
		a_c.addText("TIFF");
		a_c.addText("WBMP");
		a_c.addText("XBM");
		a_c.addText("XPM");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/ImageFormats;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("getExtension");
		a_c.addText("<clinit>");
		a_c.addText("UNKNOWN");
		a_c.addText("BMP");
		a_c.addText("DCX");
		a_c.addText("GIF");
		a_c.addText("ICNS");
		a_c.addText("ICO");
		a_c.addText("JBIG2");
		a_c.addText("6");
		a_c.addText("JPEG");
		a_c.addText("7");
		a_c.addText("PAM");
		a_c.addText("8");
		a_c.addText("PSD");
		a_c.addText("9");
		a_c.addText("PBM");
		a_c.addText("10");
		a_c.addText("PGM");
		a_c.addText("11");
		a_c.addText("PNM");
		a_c.addText("12");
		a_c.addText("PPM");
		a_c.addText("13");
		a_c.addText("PCX");
		a_c.addText("14");
		a_c.addText("PNG");
		a_c.addText("15");
		a_c.addText("RGBE");
		a_c.addText("16");
		a_c.addText("TGA");
		a_c.addText("17");
		a_c.addText("TIFF");
		a_c.addText("18");
		a_c.addText("WBMP");
		a_c.addText("19");
		a_c.addText("XBM");
		a_c.addText("20");
		a_c.addText("XPM");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
	}
	public void c152_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageFormats"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageFormats"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.ImageFormats"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.Returns, new int[]{1, 22});
		d(m_classes.get("org.apache.commons.imaging.ImageFormats"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.OwnFieldUse, new int[]{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22});
		d(m_classes.get("org.apache.commons.imaging.ImageFormats"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.ConstructorCall, new int[]{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 22});
	}

	public void c153_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("getDescription");
		a_c.addText("APPN (APP");
		a_c.addText("65504");
		a_c.addText(") (");
		a_c.addText(")");
	}
	public void c153_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.ConstructorCall, 27);
	}

	public void c155_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c155_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("short"), dmDependency.Type.Returns, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), m_classes.get("short"), dmDependency.Type.Argument, 31);
	}

	public void c156_texts(dmClass a_c) {
		a_c.addText("bitcache");
		a_c.addText("bitsInCache");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("rawbits");
		a_c.addText("hasAlpha");
		a_c.addText("getNumComponents");
		a_c.addText("getBitDepth");
		a_c.addText("getImageType");
		a_c.addText("getColorType");
		a_c.addText("getImageTypeDescription");
		a_c.addText("PBM: portable bitmap fileformat");
		a_c.addText("getMIMEType");
		a_c.addText("image/x-portable-bitmap");
		a_c.addText("newline");
		a_c.addText("getRGB");
		a_c.addText("PBM: Unexpected EOF");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("-16777216");
		a_c.addText("PBM: bad bit: ");
		a_c.addText("bits");
		a_c.addText("is");
		a_c.addText("bit");
		a_c.addText("getRGB");
		a_c.addText("-16777216");
		a_c.addText("PBM: bad bit: ");
		a_c.addText("wsr");
		a_c.addText("bit");
	}
	public void c156_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 46);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{73, 96});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{80, 96, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.Argument, 96);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.MethodCall, 101);
	}

	public void c157_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_MODEL_PIXEL_SCALE_TAG");
		a_c.addText("EXIF_TAG_INTERGRAPH_MATRIX_TAG");
		a_c.addText("EXIF_TAG_MODEL_TIEPOINT_TAG");
		a_c.addText("EXIF_TAG_MODEL_TRANSFORMATION_TAG");
		a_c.addText("EXIF_TAG_GEO_KEY_DIRECTORY_TAG");
		a_c.addText("EXIF_TAG_GEO_DOUBLE_PARAMS_TAG");
		a_c.addText("EXIF_TAG_GEO_ASCII_PARAMS_TAG");
		a_c.addText("ALL_GEO_TIFF_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("ModelPixelScaleTag");
		a_c.addText("33550");
		a_c.addText("IntergraphMatrixTag");
		a_c.addText("33920");
		a_c.addText("ModelTiepointTag");
		a_c.addText("33922");
		a_c.addText("ModelTransformationTag");
		a_c.addText("34264");
		a_c.addText("16");
		a_c.addText("GeoKeyDirectoryTag");
		a_c.addText("34735");
		a_c.addText("GeoDoubleParamsTag");
		a_c.addText("34736");
		a_c.addText("GeoAsciiParamsTag");
		a_c.addText("34737");
		a_c.addText("7");
		a_c.addText("6");
	}
	public void c157_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{35, 39, 43, 47, 51, 55, 59});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.ConstructorCall, new int[]{35, 39, 43, 47, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.OwnFieldUse, new int[]{35, 39, 43, 47, 55, 63, 63, 63, 63, 63});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{51, 63});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{59, 63});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 63);
	}

	public void c158_texts(dmClass a_c) {
		a_c.addText("pixelsPerUnitXAxis");
		a_c.addText("pixelsPerUnitYAxis");
		a_c.addText("unitSpecifier");
		a_c.addText("<init>");
		a_c.addText("PixelsPerUnitXAxis");
		a_c.addText("Not a Valid Png File: pHYs Corrupt");
		a_c.addText("PixelsPerUnitYAxis");
		a_c.addText("Not a Valid Png File: pHYs Corrupt");
		a_c.addText("Unit specifier");
		a_c.addText("Not a Valid Png File: pHYs Corrupt");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("is");
	}
	public void c158_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{35, 36, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 38);
	}

	public void c159_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("8");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("Invalid data");
		a_c.addText("number");
		a_c.addText("rationalNumber");
		a_c.addText("number");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("rationalNumbers");
		a_c.addText("number");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("rationalNumbers");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c159_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{33, 34, 36, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{35, 38, 44, 46, 50, 58, 66});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("byte"), dmDependency.Type.LocalVar, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("byte"), dmDependency.Type.Returns, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.MethodCall, new int[]{49, 56, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.ConstructorCall, new int[]{53, 61});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.LocalVar, new int[]{68, 68, 68});
	}

	public void c160_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_RELATED_IMAGE_FILE_FORMAT");
		a_c.addText("EXIF_TAG_RELATED_IMAGE_WIDTH");
		a_c.addText("EXIF_TAG_RELATED_IMAGE_LENGTH");
		a_c.addText("EXIF_TAG_COLOR_SPACE");
		a_c.addText("COLOR_SPACE_VALUE_SRGB");
		a_c.addText("1");
		a_c.addText("COLOR_SPACE_VALUE_ADOBE_RGB");
		a_c.addText("2");
		a_c.addText("COLOR_SPACE_VALUE_UNCALIBRATED");
		a_c.addText("65535");
		a_c.addText("ALL_DCF_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("RelatedImageFileFormat");
		a_c.addText("4096");
		a_c.addText("RelatedImageWidth");
		a_c.addText("4097");
		a_c.addText("RelatedImageLength");
		a_c.addText("4098");
		a_c.addText("ColorSpace");
		a_c.addText("40961");
	}
	public void c160_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{35, 39, 43, 47});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{35, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.ConstructorCall, new int[]{39, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.OwnFieldUse, new int[]{39, 43, 53, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{47, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 53);
	}

	public void c161_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("profileName");
		a_c.addText("compressionMethod");
		a_c.addText("compressedProfile");
		a_c.addText("uncompressedProfile");
		a_c.addText("<init>");
		a_c.addText("PngChunkIccp: No Profile Name");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("ProfileName: ");
		a_c.addText("ProfileName.length(): ");
		a_c.addText("CompressionMethod: ");
		a_c.addText("CompressedProfileLength: ");
		a_c.addText("bytes.length: ");
		a_c.addText("UncompressedProfile: ");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("index");
		a_c.addText("nameBytes");
		a_c.addText("compressedProfileLength");
		a_c.addText("getUncompressedProfile");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/chunks/PngChunkIccp;");
	}
	public void c161_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{75, 97});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 77);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 81);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{86, 87, 97, 97, 109});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.LocalVar, 102);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.Returns, 102);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), m_classes.get("byte"), dmDependency.Type.MethodCall, 109);
	}

	public void c162_texts(dmClass a_c) {
		a_c.addText("root");
		a_c.addText("<init>");
		a_c.addText("root");
		a_c.addText("palette");
		a_c.addText("getPaletteIndex");
		a_c.addText("rgb");
		a_c.addText("cg");
	}
	public void c162_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.ConstructorCall, 23);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.OwnFieldUse, new int[]{24, 29});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.FieldUse, new int[]{31, 32, 35});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), dmDependency.Type.MethodCall, 32);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.LocalVar, 35);
	}

	public void c163_texts(dmClass a_c) {
		a_c.addText("ENCODING_UNCOMPRESSED");
		a_c.addText("0");
		a_c.addText("ENCODING_RLE");
		a_c.addText("1");
		a_c.addText("PALETTE_INFO_COLOR");
		a_c.addText("1");
		a_c.addText("PALETTE_INFO_GRAYSCALE");
		a_c.addText("2");
		a_c.addText("manufacturer");
		a_c.addText("version");
		a_c.addText("encoding");
		a_c.addText("bitsPerPixel");
		a_c.addText("xMin");
		a_c.addText("yMin");
		a_c.addText("xMax");
		a_c.addText("yMax");
		a_c.addText("hDpi");
		a_c.addText("vDpi");
		a_c.addText("colormap");
		a_c.addText("reserved");
		a_c.addText("nPlanes");
		a_c.addText("bytesPerLine");
		a_c.addText("paletteInfo");
		a_c.addText("hScreenSize");
		a_c.addText("vScreenSize");
		a_c.addText("<init>");
		a_c.addText("manufacturer");
		a_c.addText("version");
		a_c.addText("encoding");
		a_c.addText("bitsPerPixel");
		a_c.addText("xMin");
		a_c.addText("yMin");
		a_c.addText("xMax");
		a_c.addText("yMax");
		a_c.addText("hDpi");
		a_c.addText("vDpi");
		a_c.addText("colormap");
		a_c.addText("reserved");
		a_c.addText("nPlanes");
		a_c.addText("bytesPerLine");
		a_c.addText("paletteInfo");
		a_c.addText("hScreenSize");
		a_c.addText("vScreenSize");
		a_c.addText("dump");
		a_c.addText("PcxHeader");
		a_c.addText("Manufacturer: ");
		a_c.addText("Version: ");
		a_c.addText("Encoding: ");
		a_c.addText("BitsPerPixel: ");
		a_c.addText("xMin: ");
		a_c.addText("yMin: ");
		a_c.addText("xMax: ");
		a_c.addText("yMax: ");
		a_c.addText("hDpi: ");
		a_c.addText("vDpi: ");
		a_c.addText("ColorMap: ");
		a_c.addText(",");
		a_c.addText("(");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText(",");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText(",");
		a_c.addText("255");
		a_c.addText(")");
		a_c.addText("Reserved: ");
		a_c.addText("nPlanes: ");
		a_c.addText("BytesPerLine: ");
		a_c.addText("PaletteInfo: ");
		a_c.addText("hScreenSize: ");
		a_c.addText("vScreenSize: ");
		a_c.addText("i");
		a_c.addText("pw");
	}

	public void c164_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".pcx");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Pcx-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".pcx");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("PCX");
		a_c.addText("ZSoft PCX Image");
		a_c.addText("image/x-pcx");
		a_c.addText("8");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("pcxHeader");
		a_c.addText("size");
		a_c.addText("getImageSize");
		a_c.addText("Image width is negative");
		a_c.addText("Image height is negative");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("pcxHeader");
		a_c.addText("xSize");
		a_c.addText("ySize");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readPcxHeader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("readPcxHeader");
		a_c.addText("PcxHeader");
		a_c.addText("128");
		a_c.addText("Not a Valid PCX File");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("12");
		a_c.addText("14");
		a_c.addText("16");
		a_c.addText("10");
		a_c.addText("16");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("64");
		a_c.addText("255");
		a_c.addText("65");
		a_c.addText("66");
		a_c.addText("68");
		a_c.addText("70");
		a_c.addText("72");
		a_c.addText("10");
		a_c.addText("Not a Valid PCX File: manufacturer is ");
		a_c.addText("Not a Valid PCX File: bytesPerLine is odd");
		a_c.addText("i");
		a_c.addText("is");
		a_c.addText("isStrict");
		a_c.addText("pcxHeaderBytes");
		a_c.addText("manufacturer");
		a_c.addText("version");
		a_c.addText("encoding");
		a_c.addText("bitsPerPixel");
		a_c.addText("xMin");
		a_c.addText("yMin");
		a_c.addText("xMax");
		a_c.addText("yMax");
		a_c.addText("hDpi");
		a_c.addText("vDpi");
		a_c.addText("colormap");
		a_c.addText("reserved");
		a_c.addText("nPlanes");
		a_c.addText("bytesPerLine");
		a_c.addText("paletteInfo");
		a_c.addText("hScreenSize");
		a_c.addText("vScreenSize");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("read256ColorPalette");
		a_c.addText("Palette");
		a_c.addText("769");
		a_c.addText("Error reading palette");
		a_c.addText("12");
		a_c.addText("256");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("i");
		a_c.addText("stream");
		a_c.addText("paletteBytes");
		a_c.addText("palette");
		a_c.addText("read256ColorPaletteFromEndOfFile");
		a_c.addText("769");
		a_c.addText("toSkip");
		a_c.addText("ret");
		a_c.addText("stream");
		a_c.addText("byteSource");
		a_c.addText("readImage");
		a_c.addText("Image width is negative");
		a_c.addText("Image height is negative");
		a_c.addText("Unsupported/invalid image with ");
		a_c.addText(" planes");
		a_c.addText("Unsupported/invalid image encoding ");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("16777215");
		a_c.addText("8");
		a_c.addText("No 256 color palette found in image that needs it");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("12");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("1000");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("10");
		a_c.addText("1000");
		a_c.addText("Invalid/unsupported image with bitsPerPixel ");
		a_c.addText(" and planes ");
		a_c.addText("rleReader");
		a_c.addText("rleReader");
		a_c.addText("y");
		a_c.addText("palette");
		a_c.addText("palette");
		a_c.addText("raster");
		a_c.addText("bytesPerImageRow");
		a_c.addText("image");
		a_c.addText("dataBuffer");
		a_c.addText("palette");
		a_c.addText("raster");
		a_c.addText("colorModel");
		a_c.addText("j");
		a_c.addText("b");
		a_c.addText("i");
		a_c.addText("plane");
		a_c.addText("nextByte");
		a_c.addText("y");
		a_c.addText("colorModel");
		a_c.addText("image");
		a_c.addText("unpacked");
		a_c.addText("y");
		a_c.addText("image");
		a_c.addText("dataBuffer");
		a_c.addText("raster");
		a_c.addText("colorModel");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("rowLength");
		a_c.addText("image");
		a_c.addText("dataBuffer");
		a_c.addText("raster");
		a_c.addText("colorModel");
		a_c.addText("pcxHeader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("xSize");
		a_c.addText("ySize");
		a_c.addText("rleReader");
		a_c.addText("scanlineLength");
		a_c.addText("scanline");
		a_c.addText("getBufferedImage");
		a_c.addText("STRICT");
		a_c.addText("pcxHeader");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("isStrict");
		a_c.addText("strictness");
		a_c.addText("writeImage");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("<clinit>");
		a_c.addText(".pcx");
		a_c.addText(".pcc");
	}
	public void c163_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 207);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 230, 231, 232, 233, 234, 235, 236, 237});
	}
	public void c164_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{92, 107});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{92, 99, 107, 141, 147, 245, 289, 323, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{92, 99, 107, 141, 147, 245, 289, 298, 313, 323, 468, 489});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{92, 99, 107, 141, 147, 289, 313, 323, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 99);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.FieldUse, new int[]{107, 107, 107, 117, 117, 119, 119, 119, 119, 133, 133, 137, 137, 328, 328, 332, 332, 336, 336, 337, 340, 342, 345, 347, 347, 349, 349, 349, 349, 349, 352, 361, 363, 379, 382, 387, 390, 390, 395, 395, 395, 397, 397, 397, 407, 408, 418, 418, 426, 428, 441, 441, 441, 441, 447, 468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.FieldUse, new int[]{107, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.MethodCall, new int[]{117, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 119);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, new int[]{119, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 119);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 107);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{135, 139, 277, 284, 330, 334, 337, 345, 375, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 141);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 141);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.Returns, new int[]{147, 245});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{243, 318, 319, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{245, 245, 245, 245, 323, 323, 323, 323, 489, 489, 489, 489});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{245, 323, 489});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{245, 298, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{250, 302, 320});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{256, 257, 258, 259, 260, 261, 271, 272, 273, 274});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.ConstructorCall, 289);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{289, 313, 468, 468, 468, 468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 289);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.MethodCall, 297);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("long"), dmDependency.Type.LocalVar, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{323, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.Argument, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), dmDependency.Type.ConstructorCall, new int[]{341, 343});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), dmDependency.Type.MethodCall, new int[]{355, 404, 424, 446});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.ConstructorCall, new int[]{359, 431, 458});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, new int[]{383, 387, 433, 459});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.ConstructorCall, new int[]{390, 397});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.MethodCall, 394);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, new int[]{394, 400, 440, 466});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, 415);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.MethodCall, 415);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("byte"), dmDependency.Type.ConstructorCall, 419);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.MethodCall, new int[]{437, 463});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.ComponentColorModel"), dmDependency.Type.ConstructorCall, new int[]{437, 463});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, new int[]{440, 466});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), dmDependency.Type.LocalVar, new int[]{468, 468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, new int[]{468, 468, 468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.DataBufferByte"), dmDependency.Type.LocalVar, new int[]{468, 468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.IndexColorModel"), dmDependency.Type.LocalVar, new int[]{468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{468, 489});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, new int[]{468, 468});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser$PcxHeader"), dmDependency.Type.LocalVar, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), dmDependency.Type.ConstructorCall, 495);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxWriter"), dmDependency.Type.MethodCall, 495);
	}

	public void c165_texts(dmClass a_c) {
		a_c.addText("MAX_SEGMENT_SIZE");
		a_c.addText("65535");
		a_c.addText("JFIF0_SIGNATURE");
		a_c.addText("JFIF0_SIGNATURE_ALTERNATIVE");
		a_c.addText("EXIF_IDENTIFIER_CODE");
		a_c.addText("XMP_IDENTIFIER");
		a_c.addText("SOI");
		a_c.addText("EOI");
		a_c.addText("JPEG_APP0");
		a_c.addText("224");
		a_c.addText("JPEG_APP0_MARKER");
		a_c.addText("65504");
		a_c.addText("JPEG_APP1_MARKER");
		a_c.addText("65505");
		a_c.addText("JPEG_APP2_MARKER");
		a_c.addText("65506");
		a_c.addText("JPEG_APP13_MARKER");
		a_c.addText("65517");
		a_c.addText("JPEG_APP14_MARKER");
		a_c.addText("65518");
		a_c.addText("JPEG_APP15_MARKER");
		a_c.addText("65519");
		a_c.addText("JFIF_MARKER");
		a_c.addText("65504");
		a_c.addText("SOF0_MARKER");
		a_c.addText("65472");
		a_c.addText("SOF1_MARKER");
		a_c.addText("65473");
		a_c.addText("SOF2_MARKER");
		a_c.addText("65474");
		a_c.addText("SOF3_MARKER");
		a_c.addText("65475");
		a_c.addText("DHT_MARKER");
		a_c.addText("65476");
		a_c.addText("SOF5_MARKER");
		a_c.addText("65477");
		a_c.addText("SOF6_MARKER");
		a_c.addText("65478");
		a_c.addText("SOF7_MARKER");
		a_c.addText("65479");
		a_c.addText("SOF8_MARKER");
		a_c.addText("65480");
		a_c.addText("SOF9_MARKER");
		a_c.addText("65481");
		a_c.addText("SOF10_MARKER");
		a_c.addText("65482");
		a_c.addText("SOF11_MARKER");
		a_c.addText("65483");
		a_c.addText("DAC_MARKER");
		a_c.addText("65484");
		a_c.addText("SOF13_MARKER");
		a_c.addText("65485");
		a_c.addText("SOF14_MARKER");
		a_c.addText("65486");
		a_c.addText("SOF15_MARKER");
		a_c.addText("65487");
		a_c.addText("DRI_MARKER");
		a_c.addText("65501");
		a_c.addText("RST0_MARKER");
		a_c.addText("65488");
		a_c.addText("RST1_MARKER");
		a_c.addText("65489");
		a_c.addText("RST2_MARKER");
		a_c.addText("65490");
		a_c.addText("RST3_MARKER");
		a_c.addText("65491");
		a_c.addText("RST4_MARKER");
		a_c.addText("65492");
		a_c.addText("RST5_MARKER");
		a_c.addText("65493");
		a_c.addText("RST6_MARKER");
		a_c.addText("65494");
		a_c.addText("RST7_MARKER");
		a_c.addText("65495");
		a_c.addText("EOI_MARKER");
		a_c.addText("65497");
		a_c.addText("SOS_MARKER");
		a_c.addText("65498");
		a_c.addText("DQT_MARKER");
		a_c.addText("65499");
		a_c.addText("DNL_MARKER");
		a_c.addText("65500");
		a_c.addText("COM_MARKER");
		a_c.addText("65534");
		a_c.addText("MARKERS");
		a_c.addText("ICC_PROFILE_LABEL");
		a_c.addText("PHOTOSHOP_IDENTIFICATION_STRING");
		a_c.addText("CONST_8BIM");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("8");
		a_c.addText("74");
		a_c.addText("70");
		a_c.addText("73");
		a_c.addText("70");
		a_c.addText("8");
		a_c.addText("74");
		a_c.addText("70");
		a_c.addText("73");
		a_c.addText("70");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("69");
		a_c.addText("120");
		a_c.addText("105");
		a_c.addText("102");
		a_c.addText("29");
		a_c.addText("8");
		a_c.addText("104");
		a_c.addText("116");
		a_c.addText("116");
		a_c.addText("112");
		a_c.addText("58");
		a_c.addText("47");
		a_c.addText("6");
		a_c.addText("47");
		a_c.addText("7");
		a_c.addText("110");
		a_c.addText("8");
		a_c.addText("115");
		a_c.addText("9");
		a_c.addText("46");
		a_c.addText("10");
		a_c.addText("97");
		a_c.addText("11");
		a_c.addText("100");
		a_c.addText("12");
		a_c.addText("111");
		a_c.addText("13");
		a_c.addText("98");
		a_c.addText("14");
		a_c.addText("101");
		a_c.addText("15");
		a_c.addText("46");
		a_c.addText("16");
		a_c.addText("99");
		a_c.addText("17");
		a_c.addText("111");
		a_c.addText("18");
		a_c.addText("109");
		a_c.addText("19");
		a_c.addText("47");
		a_c.addText("20");
		a_c.addText("120");
		a_c.addText("21");
		a_c.addText("97");
		a_c.addText("22");
		a_c.addText("112");
		a_c.addText("23");
		a_c.addText("47");
		a_c.addText("24");
		a_c.addText("49");
		a_c.addText("25");
		a_c.addText("46");
		a_c.addText("26");
		a_c.addText("48");
		a_c.addText("27");
		a_c.addText("47");
		a_c.addText("28");
		a_c.addText("8");
		a_c.addText("-40");
		a_c.addText("8");
		a_c.addText("-39");
		a_c.addText("38");
		a_c.addText("224");
		a_c.addText("65504");
		a_c.addText("65505");
		a_c.addText("65506");
		a_c.addText("65517");
		a_c.addText("65518");
		a_c.addText("6");
		a_c.addText("65519");
		a_c.addText("7");
		a_c.addText("65504");
		a_c.addText("8");
		a_c.addText("65472");
		a_c.addText("9");
		a_c.addText("65473");
		a_c.addText("10");
		a_c.addText("65474");
		a_c.addText("11");
		a_c.addText("65475");
		a_c.addText("12");
		a_c.addText("65476");
		a_c.addText("13");
		a_c.addText("65477");
		a_c.addText("14");
		a_c.addText("65478");
		a_c.addText("15");
		a_c.addText("65479");
		a_c.addText("16");
		a_c.addText("65480");
		a_c.addText("17");
		a_c.addText("65481");
		a_c.addText("18");
		a_c.addText("65482");
		a_c.addText("19");
		a_c.addText("65483");
		a_c.addText("20");
		a_c.addText("65484");
		a_c.addText("21");
		a_c.addText("65485");
		a_c.addText("22");
		a_c.addText("65486");
		a_c.addText("23");
		a_c.addText("65487");
		a_c.addText("24");
		a_c.addText("65497");
		a_c.addText("25");
		a_c.addText("65498");
		a_c.addText("26");
		a_c.addText("65499");
		a_c.addText("27");
		a_c.addText("65500");
		a_c.addText("28");
		a_c.addText("65534");
		a_c.addText("29");
		a_c.addText("65501");
		a_c.addText("30");
		a_c.addText("65488");
		a_c.addText("31");
		a_c.addText("65489");
		a_c.addText("32");
		a_c.addText("65490");
		a_c.addText("33");
		a_c.addText("65491");
		a_c.addText("34");
		a_c.addText("65492");
		a_c.addText("35");
		a_c.addText("65493");
		a_c.addText("36");
		a_c.addText("65494");
		a_c.addText("37");
		a_c.addText("65495");
		a_c.addText("12");
		a_c.addText("8");
		a_c.addText("73");
		a_c.addText("67");
		a_c.addText("67");
		a_c.addText("95");
		a_c.addText("80");
		a_c.addText("82");
		a_c.addText("6");
		a_c.addText("79");
		a_c.addText("7");
		a_c.addText("70");
		a_c.addText("8");
		a_c.addText("73");
		a_c.addText("9");
		a_c.addText("76");
		a_c.addText("10");
		a_c.addText("69");
		a_c.addText("11");
		a_c.addText("14");
		a_c.addText("8");
		a_c.addText("80");
		a_c.addText("104");
		a_c.addText("111");
		a_c.addText("116");
		a_c.addText("111");
		a_c.addText("115");
		a_c.addText("6");
		a_c.addText("104");
		a_c.addText("7");
		a_c.addText("111");
		a_c.addText("8");
		a_c.addText("112");
		a_c.addText("9");
		a_c.addText("32");
		a_c.addText("10");
		a_c.addText("51");
		a_c.addText("11");
		a_c.addText("46");
		a_c.addText("12");
		a_c.addText("48");
		a_c.addText("13");
		a_c.addText("56");
		a_c.addText("66");
		a_c.addText("73");
		a_c.addText("77");
	}
	public void c165_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.ConstructorCall, new int[]{29, 36, 44, 51, 83, 85, 142, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.OwnFieldUse, new int[]{29, 36, 44, 51, 83, 85, 142, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 161);
	}

	public void c167_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("8");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("7");
		a_c.addText("Invalid data");
		a_c.addText("numbers");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("values");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c167_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{32, 33, 35, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{34, 37, 43, 47, 54});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("byte"), dmDependency.Type.LocalVar, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("byte"), dmDependency.Type.Returns, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 56);
	}

	public void c168_texts(dmClass a_c) {
		a_c.addText("PARAM_KEY_PCX_COMPRESSION");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("PCX_COMPRESSION_UNCOMPRESSED");
		a_c.addText("0");
		a_c.addText("PCX_COMPRESSION_RLE");
		a_c.addText("1");
		a_c.addText("PARAM_KEY_PCX_BIT_DEPTH");
		a_c.addText("PCX_BIT_DEPTH");
		a_c.addText("PARAM_KEY_PCX_PLANES");
		a_c.addText("PCX_PLANES");
		a_c.addText("<init>");
	}

	public void c169_texts(dmClass a_c) {
		a_c.addText("NONE");
		a_c.addText("ADAM7");
		a_c.addText("progressive");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/InterlaceMethod;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("progressive");
		a_c.addText("isProgressive");
		a_c.addText("<clinit>");
		a_c.addText("NONE");
		a_c.addText("ADAM7");
	}
	public void c169_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.Returns, new int[]{1, 24});
		d(m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.OwnFieldUse, new int[]{24, 26, 27, 24, 24, 24});
		d(m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.ConstructorCall, new int[]{26, 27, 24});
	}

	public void c171_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitDepth");
		a_c.addText("pngColorType");
		a_c.addText("compressionMethod");
		a_c.addText("filterMethod");
		a_c.addText("interlaceMethod");
		a_c.addText("<init>");
		a_c.addText("Width");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("Height");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("BitDepth");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("ColorType");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("PNG: unknown color type: ");
		a_c.addText("CompressionMethod");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("FilterMethod");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("InterlaceMethod");
		a_c.addText("Not a Valid Png File: IHDR Corrupt");
		a_c.addText("PNG: unknown interlace method: ");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("type");
		a_c.addText("method");
	}
	public void c171_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{42, 43, 44, 45, 50, 51, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, 46);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.OwnFieldUse, new int[]{46, 47});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{48, 54});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.MethodCall, new int[]{53, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.OwnFieldUse, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 57);
	}

	public void c172_texts(dmClass a_c) {
		a_c.addText("DESC_TYPE");
		a_c.addText("DATA_TYPE");
		a_c.addText("MULTI_LOCALIZED_UNICODE_TYPE");
		a_c.addText("SIGNATURE_TYPE");
		a_c.addText("TEXT_TYPE");
		a_c.addText("LOGGER");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccTagDataTypes;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("getName");
		a_c.addText("getSignature");
		a_c.addText("<init>");
		a_c.addText("x0");
		a_c.addText("x1");
		a_c.addText("x2");
		a_c.addText("x3");
		a_c.addText("x4");
		a_c.addText("access$100");
		a_c.addText("<clinit>");
		a_c.addText("DESC_TYPE");
		a_c.addText("descType");
		a_c.addText("1684370275");
		a_c.addText("DATA_TYPE");
		a_c.addText("dataType");
		a_c.addText("1684108385");
		a_c.addText("MULTI_LOCALIZED_UNICODE_TYPE");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1835824483");
		a_c.addText("SIGNATURE_TYPE");
		a_c.addText("signatureType");
		a_c.addText("1936287520");
		a_c.addText("TEXT_TYPE");
		a_c.addText("textType");
		a_c.addText("1952807028");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccTagDataTypes;");
	}

	public void c173_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("dump");
		a_c.addText("type_signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("ignore");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("s: \'");
		a_c.addText("\'");
		a_c.addText("s");
		a_c.addText("bis");
		a_c.addText("prefix");
		a_c.addText("bytes");
	}

	public void c174_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("dump");
		a_c.addText("type_signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("ignore");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("thesignature ");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("thesignature: ");
		a_c.addText(" (");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText(")");
		a_c.addText("thesignature");
		a_c.addText("bis");
		a_c.addText("prefix");
		a_c.addText("bytes");
	}

	public void c175_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("dump");
		a_c.addText("type_signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("bis");
		a_c.addText("prefix");
		a_c.addText("bytes");
	}

	public void c176_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("dump");
		a_c.addText("type_signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("bis");
		a_c.addText("prefix");
		a_c.addText("bytes");
	}

	public void c177_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("signature");
		a_c.addText("dump");
		a_c.addText("type_signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("ignore");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("stringLength");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("12");
		a_c.addText("s: \'");
		a_c.addText("\'");
		a_c.addText("stringLength");
		a_c.addText("s");
		a_c.addText("bis");
		a_c.addText("prefix");
		a_c.addText("bytes");
	}
	public void c172_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Returns, new int[]{1, 30});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.OwnFieldUse, new int[]{30, 31, 51, 63, 75, 99, 30, 30, 30, 30, 30, 30});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), dmDependency.Type.Argument, 131);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, new int[]{30, 30});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), dmDependency.Type.ConstructorCall, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), dmDependency.Type.ConstructorCall, 63);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), dmDependency.Type.ConstructorCall, 99);
	}
	public void c173_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, 99);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 99);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 99);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("byte"), dmDependency.Type.Argument, 99);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 104);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{105, 106});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{105, 106});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 107);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.FieldUse, 108);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{109, 109, 109, 109});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$5"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 110);
	}
	public void c174_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("byte"), dmDependency.Type.Argument, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 80);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{81, 82, 83});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{81, 82, 83});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.FieldUse, 84);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 86);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{94, 94, 94, 94});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$4"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 95);
	}
	public void c175_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, 63);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 63);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 63);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("byte"), dmDependency.Type.Argument, 63);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 68);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 69);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 69);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{70, 70, 70, 70});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$3"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 71);
	}
	public void c176_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("byte"), dmDependency.Type.Argument, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 57);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 57);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{58, 58, 58, 58});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$2"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 59);
	}
	public void c177_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 31);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 31);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("byte"), dmDependency.Type.Argument, 31);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 36);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{37, 40, 41});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{37, 40, 41});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 44);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.FieldUse, 45);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{46, 46, 46, 46});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes$1"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 47);
	}

	public void c178_texts(dmClass a_c) {
		a_c.addText("PALETTE_4BPP");
		a_c.addText("PALETTE_8BPP");
		a_c.addText("<init>");
		a_c.addText("decode1BPPImage");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("128");
		a_c.addText("-16777216");
		a_c.addText("argb");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageType");
		a_c.addText("imageData");
		a_c.addText("image");
		a_c.addText("position");
		a_c.addText("bitsLeft");
		a_c.addText("value");
		a_c.addText("decode4BPPImage");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("index");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageType");
		a_c.addText("imageData");
		a_c.addText("image");
		a_c.addText("i");
		a_c.addText("visited");
		a_c.addText("decode8BPPImage");
		a_c.addText("255");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageType");
		a_c.addText("imageData");
		a_c.addText("image");
		a_c.addText("decode32BPPImage");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageType");
		a_c.addText("imageData");
		a_c.addText("image");
		a_c.addText("apply1BPPMask");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("1 BPP mask underrun parsing ICNS file");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("128");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16777215");
		a_c.addText("alpha");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("maskData");
		a_c.addText("image");
		a_c.addText("position");
		a_c.addText("bitsLeft");
		a_c.addText("value");
		a_c.addText("totalBytes");
		a_c.addText("apply8BPPMask");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16777215");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("maskData");
		a_c.addText("image");
		a_c.addText("decodeAllImages");
		a_c.addText("image");
		a_c.addText("i");
		a_c.addText("icnsElements");
		a_c.addText("result");
		a_c.addText("decodeImage");
		a_c.addText("32");
		a_c.addText("ex");
		a_c.addText("image");
		a_c.addText("icnsElements");
		a_c.addText("index");
		a_c.addText("imageElement");
		a_c.addText("imageType");
		a_c.addText("decodeImageImpl");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("Short image data but not a 32 bit compressed type");
		a_c.addText("Unsupported bit depth ");
		a_c.addText("8");
		a_c.addText("Unsupported mask bit depth ");
		a_c.addText("imageData");
		a_c.addText("maskType");
		a_c.addText("icnsElement");
		a_c.addText("icnsElement");
		a_c.addText("imageType");
		a_c.addText("imageElement");
		a_c.addText("icnsElements");
		a_c.addText("expectedSize");
		a_c.addText("imageData");
		a_c.addText("imageBuilder");
		a_c.addText("maskType");
		a_c.addText("maskElement");
		a_c.addText("<clinit>");
		a_c.addText("16");
		a_c.addText("10");
		a_c.addText("-199931");
		a_c.addText("-39934");
		a_c.addText("-2291706");
		a_c.addText("-915324");
		a_c.addText("-12189531");
		a_c.addText("6");
		a_c.addText("-16777004");
		a_c.addText("7");
		a_c.addText("-16602134");
		a_c.addText("8");
		a_c.addText("-14698732");
		a_c.addText("9");
		a_c.addText("-16751599");
		a_c.addText("10");
		a_c.addText("-11129851");
		a_c.addText("11");
		a_c.addText("-7311046");
		a_c.addText("12");
		a_c.addText("-4144960");
		a_c.addText("13");
		a_c.addText("-8355712");
		a_c.addText("14");
		a_c.addText("-12566464");
		a_c.addText("15");
		a_c.addText("-16777216");
		a_c.addText("256");
		a_c.addText("10");
		a_c.addText("-52");
		a_c.addText("-103");
		a_c.addText("-154");
		a_c.addText("-205");
		a_c.addText("-256");
		a_c.addText("6");
		a_c.addText("-13057");
		a_c.addText("7");
		a_c.addText("-13108");
		a_c.addText("8");
		a_c.addText("-13159");
		a_c.addText("9");
		a_c.addText("-13210");
		a_c.addText("10");
		a_c.addText("-13261");
		a_c.addText("11");
		a_c.addText("-13312");
		a_c.addText("12");
		a_c.addText("-26113");
		a_c.addText("13");
		a_c.addText("-26164");
		a_c.addText("14");
		a_c.addText("-26215");
		a_c.addText("15");
		a_c.addText("-26266");
		a_c.addText("16");
		a_c.addText("-26317");
		a_c.addText("17");
		a_c.addText("-26368");
		a_c.addText("18");
		a_c.addText("-39169");
		a_c.addText("19");
		a_c.addText("-39220");
		a_c.addText("20");
		a_c.addText("-39271");
		a_c.addText("21");
		a_c.addText("-39322");
		a_c.addText("22");
		a_c.addText("-39373");
		a_c.addText("23");
		a_c.addText("-39424");
		a_c.addText("24");
		a_c.addText("-52225");
		a_c.addText("25");
		a_c.addText("-52276");
		a_c.addText("26");
		a_c.addText("-52327");
		a_c.addText("27");
		a_c.addText("-52378");
		a_c.addText("28");
		a_c.addText("-52429");
		a_c.addText("29");
		a_c.addText("-52480");
		a_c.addText("30");
		a_c.addText("-65281");
		a_c.addText("31");
		a_c.addText("-65332");
		a_c.addText("32");
		a_c.addText("-65383");
		a_c.addText("33");
		a_c.addText("-65434");
		a_c.addText("34");
		a_c.addText("-65485");
		a_c.addText("35");
		a_c.addText("-65536");
		a_c.addText("36");
		a_c.addText("-3342337");
		a_c.addText("37");
		a_c.addText("-3342388");
		a_c.addText("38");
		a_c.addText("-3342439");
		a_c.addText("39");
		a_c.addText("-3342490");
		a_c.addText("40");
		a_c.addText("-3342541");
		a_c.addText("41");
		a_c.addText("-3342592");
		a_c.addText("42");
		a_c.addText("-3355393");
		a_c.addText("43");
		a_c.addText("-3355444");
		a_c.addText("44");
		a_c.addText("-3355495");
		a_c.addText("45");
		a_c.addText("-3355546");
		a_c.addText("46");
		a_c.addText("-3355597");
		a_c.addText("47");
		a_c.addText("-3355648");
		a_c.addText("48");
		a_c.addText("-3368449");
		a_c.addText("49");
		a_c.addText("-3368500");
		a_c.addText("50");
		a_c.addText("-3368551");
		a_c.addText("51");
		a_c.addText("-3368602");
		a_c.addText("52");
		a_c.addText("-3368653");
		a_c.addText("53");
		a_c.addText("-3368704");
		a_c.addText("54");
		a_c.addText("-3381505");
		a_c.addText("55");
		a_c.addText("-3381556");
		a_c.addText("56");
		a_c.addText("-3381607");
		a_c.addText("57");
		a_c.addText("-3381658");
		a_c.addText("58");
		a_c.addText("-3381709");
		a_c.addText("59");
		a_c.addText("-3381760");
		a_c.addText("60");
		a_c.addText("-3394561");
		a_c.addText("61");
		a_c.addText("-3394612");
		a_c.addText("62");
		a_c.addText("-3394663");
		a_c.addText("63");
		a_c.addText("-3394714");
		a_c.addText("64");
		a_c.addText("-3394765");
		a_c.addText("65");
		a_c.addText("-3394816");
		a_c.addText("66");
		a_c.addText("-3407617");
		a_c.addText("67");
		a_c.addText("-3407668");
		a_c.addText("68");
		a_c.addText("-3407719");
		a_c.addText("69");
		a_c.addText("-3407770");
		a_c.addText("70");
		a_c.addText("-3407821");
		a_c.addText("71");
		a_c.addText("-3407872");
		a_c.addText("72");
		a_c.addText("-6684673");
		a_c.addText("73");
		a_c.addText("-6684724");
		a_c.addText("74");
		a_c.addText("-6684775");
		a_c.addText("75");
		a_c.addText("-6684826");
		a_c.addText("76");
		a_c.addText("-6684877");
		a_c.addText("77");
		a_c.addText("-6684928");
		a_c.addText("78");
		a_c.addText("-6697729");
		a_c.addText("79");
		a_c.addText("-6697780");
		a_c.addText("80");
		a_c.addText("-6697831");
		a_c.addText("81");
		a_c.addText("-6697882");
		a_c.addText("82");
		a_c.addText("-6697933");
		a_c.addText("83");
		a_c.addText("-6697984");
		a_c.addText("84");
		a_c.addText("-6710785");
		a_c.addText("85");
		a_c.addText("-6710836");
		a_c.addText("86");
		a_c.addText("-6710887");
		a_c.addText("87");
		a_c.addText("-6710938");
		a_c.addText("88");
		a_c.addText("-6710989");
		a_c.addText("89");
		a_c.addText("-6711040");
		a_c.addText("90");
		a_c.addText("-6723841");
		a_c.addText("91");
		a_c.addText("-6723892");
		a_c.addText("92");
		a_c.addText("-6723943");
		a_c.addText("93");
		a_c.addText("-6723994");
		a_c.addText("94");
		a_c.addText("-6724045");
		a_c.addText("95");
		a_c.addText("-6724096");
		a_c.addText("96");
		a_c.addText("-6736897");
		a_c.addText("97");
		a_c.addText("-6736948");
		a_c.addText("98");
		a_c.addText("-6736999");
		a_c.addText("99");
		a_c.addText("-6737050");
		a_c.addText("100");
		a_c.addText("-6737101");
		a_c.addText("101");
		a_c.addText("-6737152");
		a_c.addText("102");
		a_c.addText("-6749953");
		a_c.addText("103");
		a_c.addText("-6750004");
		a_c.addText("104");
		a_c.addText("-6750055");
		a_c.addText("105");
		a_c.addText("-6750106");
		a_c.addText("106");
		a_c.addText("-6750157");
		a_c.addText("107");
		a_c.addText("-6750208");
		a_c.addText("108");
		a_c.addText("-10027009");
		a_c.addText("109");
		a_c.addText("-10027060");
		a_c.addText("110");
		a_c.addText("-10027111");
		a_c.addText("111");
		a_c.addText("-10027162");
		a_c.addText("112");
		a_c.addText("-10027213");
		a_c.addText("113");
		a_c.addText("-10027264");
		a_c.addText("114");
		a_c.addText("-10040065");
		a_c.addText("115");
		a_c.addText("-10040116");
		a_c.addText("116");
		a_c.addText("-10040167");
		a_c.addText("117");
		a_c.addText("-10040218");
		a_c.addText("118");
		a_c.addText("-10040269");
		a_c.addText("119");
		a_c.addText("-10040320");
		a_c.addText("120");
		a_c.addText("-10053121");
		a_c.addText("121");
		a_c.addText("-10053172");
		a_c.addText("122");
		a_c.addText("-10053223");
		a_c.addText("123");
		a_c.addText("-10053274");
		a_c.addText("124");
		a_c.addText("-10053325");
		a_c.addText("125");
		a_c.addText("-10053376");
		a_c.addText("126");
		a_c.addText("-10066177");
		a_c.addText("127");
		a_c.addText("-10066228");
		a_c.addText("128");
		a_c.addText("-10066279");
		a_c.addText("129");
		a_c.addText("-10066330");
		a_c.addText("130");
		a_c.addText("-10066381");
		a_c.addText("131");
		a_c.addText("-10066432");
		a_c.addText("132");
		a_c.addText("-10079233");
		a_c.addText("133");
		a_c.addText("-10079284");
		a_c.addText("134");
		a_c.addText("-10079335");
		a_c.addText("135");
		a_c.addText("-10079386");
		a_c.addText("136");
		a_c.addText("-10079437");
		a_c.addText("137");
		a_c.addText("-10079488");
		a_c.addText("138");
		a_c.addText("-10092289");
		a_c.addText("139");
		a_c.addText("-10092340");
		a_c.addText("140");
		a_c.addText("-10092391");
		a_c.addText("141");
		a_c.addText("-10092442");
		a_c.addText("142");
		a_c.addText("-10092493");
		a_c.addText("143");
		a_c.addText("-10092544");
		a_c.addText("144");
		a_c.addText("-13369345");
		a_c.addText("145");
		a_c.addText("-13369396");
		a_c.addText("146");
		a_c.addText("-13369447");
		a_c.addText("147");
		a_c.addText("-13369498");
		a_c.addText("148");
		a_c.addText("-13369549");
		a_c.addText("149");
		a_c.addText("-13369600");
		a_c.addText("150");
		a_c.addText("-13382401");
		a_c.addText("151");
		a_c.addText("-13382452");
		a_c.addText("152");
		a_c.addText("-13382503");
		a_c.addText("153");
		a_c.addText("-13382554");
		a_c.addText("154");
		a_c.addText("-13382605");
		a_c.addText("155");
		a_c.addText("-13382656");
		a_c.addText("156");
		a_c.addText("-13395457");
		a_c.addText("157");
		a_c.addText("-13395508");
		a_c.addText("158");
		a_c.addText("-13395559");
		a_c.addText("159");
		a_c.addText("-13395610");
		a_c.addText("160");
		a_c.addText("-13395661");
		a_c.addText("161");
		a_c.addText("-13395712");
		a_c.addText("162");
		a_c.addText("-13408513");
		a_c.addText("163");
		a_c.addText("-13408564");
		a_c.addText("164");
		a_c.addText("-13408615");
		a_c.addText("165");
		a_c.addText("-13408666");
		a_c.addText("166");
		a_c.addText("-13408717");
		a_c.addText("167");
		a_c.addText("-13408768");
		a_c.addText("168");
		a_c.addText("-13421569");
		a_c.addText("169");
		a_c.addText("-13421620");
		a_c.addText("170");
		a_c.addText("-13421671");
		a_c.addText("171");
		a_c.addText("-13421722");
		a_c.addText("172");
		a_c.addText("-13421773");
		a_c.addText("173");
		a_c.addText("-13421824");
		a_c.addText("174");
		a_c.addText("-13434625");
		a_c.addText("175");
		a_c.addText("-13434676");
		a_c.addText("176");
		a_c.addText("-13434727");
		a_c.addText("177");
		a_c.addText("-13434778");
		a_c.addText("178");
		a_c.addText("-13434829");
		a_c.addText("179");
		a_c.addText("-13434880");
		a_c.addText("180");
		a_c.addText("-16711681");
		a_c.addText("181");
		a_c.addText("-16711732");
		a_c.addText("182");
		a_c.addText("-16711783");
		a_c.addText("183");
		a_c.addText("-16711834");
		a_c.addText("184");
		a_c.addText("-16711885");
		a_c.addText("185");
		a_c.addText("-16711936");
		a_c.addText("186");
		a_c.addText("-16724737");
		a_c.addText("187");
		a_c.addText("-16724788");
		a_c.addText("188");
		a_c.addText("-16724839");
		a_c.addText("189");
		a_c.addText("-16724890");
		a_c.addText("190");
		a_c.addText("-16724941");
		a_c.addText("191");
		a_c.addText("-16724992");
		a_c.addText("192");
		a_c.addText("-16737793");
		a_c.addText("193");
		a_c.addText("-16737844");
		a_c.addText("194");
		a_c.addText("-16737895");
		a_c.addText("195");
		a_c.addText("-16737946");
		a_c.addText("196");
		a_c.addText("-16737997");
		a_c.addText("197");
		a_c.addText("-16738048");
		a_c.addText("198");
		a_c.addText("-16750849");
		a_c.addText("199");
		a_c.addText("-16750900");
		a_c.addText("200");
		a_c.addText("-16750951");
		a_c.addText("201");
		a_c.addText("-16751002");
		a_c.addText("202");
		a_c.addText("-16751053");
		a_c.addText("203");
		a_c.addText("-16751104");
		a_c.addText("204");
		a_c.addText("-16763905");
		a_c.addText("205");
		a_c.addText("-16763956");
		a_c.addText("206");
		a_c.addText("-16764007");
		a_c.addText("207");
		a_c.addText("-16764058");
		a_c.addText("208");
		a_c.addText("-16764109");
		a_c.addText("209");
		a_c.addText("-16764160");
		a_c.addText("210");
		a_c.addText("-16776961");
		a_c.addText("211");
		a_c.addText("-16777012");
		a_c.addText("212");
		a_c.addText("-16777063");
		a_c.addText("213");
		a_c.addText("-16777114");
		a_c.addText("214");
		a_c.addText("-16777165");
		a_c.addText("215");
		a_c.addText("-1179648");
		a_c.addText("216");
		a_c.addText("-2293760");
		a_c.addText("217");
		a_c.addText("-4521984");
		a_c.addText("218");
		a_c.addText("-5636096");
		a_c.addText("219");
		a_c.addText("-7864320");
		a_c.addText("220");
		a_c.addText("-8978432");
		a_c.addText("221");
		a_c.addText("-11206656");
		a_c.addText("222");
		a_c.addText("-12320768");
		a_c.addText("223");
		a_c.addText("-14548992");
		a_c.addText("224");
		a_c.addText("-15663104");
		a_c.addText("225");
		a_c.addText("-16716288");
		a_c.addText("226");
		a_c.addText("-16720640");
		a_c.addText("227");
		a_c.addText("-16729344");
		a_c.addText("228");
		a_c.addText("-16733696");
		a_c.addText("229");
		a_c.addText("-16742400");
		a_c.addText("230");
		a_c.addText("-16746752");
		a_c.addText("231");
		a_c.addText("-16755456");
		a_c.addText("232");
		a_c.addText("-16759808");
		a_c.addText("233");
		a_c.addText("-16768512");
		a_c.addText("234");
		a_c.addText("-16772864");
		a_c.addText("235");
		a_c.addText("-16776978");
		a_c.addText("236");
		a_c.addText("-16776995");
		a_c.addText("237");
		a_c.addText("-16777029");
		a_c.addText("238");
		a_c.addText("-16777046");
		a_c.addText("239");
		a_c.addText("-16777080");
		a_c.addText("240");
		a_c.addText("-16777097");
		a_c.addText("241");
		a_c.addText("-16777131");
		a_c.addText("242");
		a_c.addText("-16777148");
		a_c.addText("243");
		a_c.addText("-16777182");
		a_c.addText("244");
		a_c.addText("-16777199");
		a_c.addText("245");
		a_c.addText("-1118482");
		a_c.addText("246");
		a_c.addText("-2236963");
		a_c.addText("247");
		a_c.addText("-4473925");
		a_c.addText("248");
		a_c.addText("-5592406");
		a_c.addText("249");
		a_c.addText("-7829368");
		a_c.addText("250");
		a_c.addText("-8947849");
		a_c.addText("251");
		a_c.addText("-11184811");
		a_c.addText("252");
		a_c.addText("-12303292");
		a_c.addText("253");
		a_c.addText("-14540254");
		a_c.addText("254");
		a_c.addText("-15658735");
		a_c.addText("255");
		a_c.addText("-16777216");
	}
	public void c178_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.Argument, new int[]{88, 111, 128, 137, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{88, 111, 128, 137, 149, 182});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, new int[]{88, 111, 128, 137, 149, 182});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.MethodCall, new int[]{94, 95, 116, 117, 131, 132, 133, 140, 141, 143, 144, 145, 209, 230, 236, 236, 248, 248, 249, 252, 254, 254, 263, 264, 265, 279, 284, 288, 291, 298, 301, 311, 313, 316});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{108, 125, 134, 146, 158, 158, 165, 166, 179, 179, 185, 186, 187, 189, 188, 320});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{149, 192, 203, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{162, 257, 279, 316});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.Argument, new int[]{192, 203, 242, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{192, 203, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{203, 203, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.FieldUse, new int[]{209, 228, 251, 254, 260, 291, 301, 312, 314});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.FieldUse, new int[]{215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.Imaging"), dmDependency.Type.MethodCall, 228);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 236);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.LocalVar, new int[]{242, 320, 320, 320});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.LocalVar, new int[]{242, 320, 320});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.formats.icns.Rle24Compression"), dmDependency.Type.MethodCall, 253);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 264);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{320, 320});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 320);
	}

	public void c179_texts(dmClass a_c) {
		a_c.addText("rawbits");
		a_c.addText("<init>");
		a_c.addText("rawbits");
		a_c.addText("writeImage");
		a_c.addText("80");
		a_c.addText("54");
		a_c.addText("51");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("width");
		a_c.addText("height");
	}
	public void c179_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{40, 41, 42, 47, 48, 50, 51, 53, 54, 64, 65, 66, 68, 70, 71, 74, 75, 77});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{44, 45, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{47, 50, 53, 68, 71, 75});
	}

	public void c180_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("fieldTypes");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("fieldType");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("8");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c180_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 28, 33});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{27, 32, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, new int[]{28, 33});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("byte"), dmDependency.Type.Returns, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), m_classes.get("byte"), dmDependency.Type.Argument, 38);
	}

	public void c181_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("<init>");
		a_c.addText("getICCProfileInfo");
		a_c.addText("iccProfile");
		a_c.addText("getICCProfileInfo");
		a_c.addText("bytes");
		a_c.addText("getICCProfileInfo");
		a_c.addText("file");
		a_c.addText("getICCProfileInfo");
		a_c.addText("e");
		a_c.addText("bytes");
		a_c.addText("tag");
		a_c.addText("e");
		a_c.addText("result");
		a_c.addText("e");
		a_c.addText("e");
		a_c.addText("e");
		a_c.addText("byteSource");
		a_c.addText("is");
		a_c.addText("readICCProfileInfo");
		a_c.addText("ProfileSize");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("Signature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("CMMTypeSignature");
		a_c.addText("ProfileVersion");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileDeviceClassSignature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileDeviceClassSignature");
		a_c.addText("ColorSpace");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ColorSpace");
		a_c.addText("ProfileConnectionSpace");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileConnectionSpace");
		a_c.addText("12");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileFileSignature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileFileSignature");
		a_c.addText("PrimaryPlatformSignature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("PrimaryPlatformSignature");
		a_c.addText("VariousFlags");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("VariousFlags");
		a_c.addText("DeviceManufacturer");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("DeviceManufacturer");
		a_c.addText("DeviceModel");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("DeviceModel");
		a_c.addText("8");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("RenderingIntent");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("RenderingIntent");
		a_c.addText("12");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileCreatorSignature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ProfileCreatorSignature");
		a_c.addText("16");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("28");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("TagCount");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("TagSignature[");
		a_c.addText("]");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("OffsetToData[");
		a_c.addText("]");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("ElementSize[");
		a_c.addText("]");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("Couldn\'t read ICC Profile.");
		a_c.addText("issRGB: ");
		a_c.addText("tagSignature");
		a_c.addText("offsetToData");
		a_c.addText("elementSize");
		a_c.addText("fIccTagType");
		a_c.addText("tag");
		a_c.addText("i");
		a_c.addText("profileSize");
		a_c.addText("cmmTypeSignature");
		a_c.addText("profileVersion");
		a_c.addText("profileDeviceClassSignature");
		a_c.addText("colorSpace");
		a_c.addText("profileConnectionSpace");
		a_c.addText("profileFileSignature");
		a_c.addText("primaryPlatformSignature");
		a_c.addText("variousFlags");
		a_c.addText("deviceManufacturer");
		a_c.addText("deviceModel");
		a_c.addText("renderingIntent");
		a_c.addText("profileCreatorSignature");
		a_c.addText("profileId");
		a_c.addText("tagCount");
		a_c.addText("tags");
		a_c.addText("data");
		a_c.addText("result");
		a_c.addText("e");
		a_c.addText("is");
		a_c.addText("cis");
		a_c.addText("getIccTagType");
		a_c.addText("iccTagType");
		a_c.addText("quad");
		a_c.addText("issRGB");
		a_c.addText("iccProfile");
		a_c.addText("issRGB");
		a_c.addText("bytes");
		a_c.addText("issRGB");
		a_c.addText("file");
		a_c.addText("issRGB");
		a_c.addText("ProfileSize");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("20");
		a_c.addText("12");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("12");
		a_c.addText("ProfileFileSignature");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("DeviceManufacturer");
		a_c.addText("DeviceModel");
		a_c.addText("Not a Valid ICC Profile");
		a_c.addText("DeviceModel");
		a_c.addText("1229275936");
		a_c.addText("1934772034");
		a_c.addText("deviceManufacturer");
		a_c.addText("deviceModel");
		a_c.addText("result");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccProfileParser;");
	}
	public void c181_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 41);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.Returns, new int[]{42, 49, 57, 65, 107});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.Argument, new int[]{42, 282});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.MethodCall, new int[]{49, 286});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{49, 57, 286, 290});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{49, 286});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{57, 290});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{65, 294});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{65, 294});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{74, 85, 305});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{99, 81, 99, 99, 99, 245, 329, 329, 329, 329});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.MethodCall, new int[]{84, 264});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.FieldUse, new int[]{85, 85});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.MethodCall, 87);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{107, 272, 272});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.LocalVar, new int[]{107, 272, 272});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.LocalVar, new int[]{107, 272});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{107, 329});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 107);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{120, 133, 135, 138, 140, 143, 146, 148, 151, 153, 156, 158, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 187, 190, 192, 194, 198, 205, 209, 215, 220, 221, 306, 311, 313, 315, 317, 319, 322, 324});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.ConstructorCall, new int[]{212, 236});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), dmDependency.Type.MethodCall, 249);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 252);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.ConstructorCall, 255);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.LocalVar, new int[]{272, 282});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), dmDependency.Type.LocalVar, 272);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.Returns, 272);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), dmDependency.Type.MethodCall, 276);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.MethodCall, 277);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{282, 286, 290, 294});
	}

	public void c182_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("signature");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("fIccTagType");
		a_c.addText("data");
		a_c.addText("itdt");
		a_c.addText("dataTypeSignature");
		a_c.addText("<init>");
		a_c.addText("signature");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("fIccTagType");
		a_c.addText("setData");
		a_c.addText("data type signature");
		a_c.addText("ICC: corrupt tag data");
		a_c.addText("bis");
		a_c.addText("bytes");
		a_c.addText("getIccTagDataType");
		a_c.addText("iccTagDataType");
		a_c.addText("quad");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("prefix");
		a_c.addText("dump");
		a_c.addText("tag signature: ");
		a_c.addText(" (");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText(")");
		a_c.addText("data: ");
		a_c.addText("data: ");
		a_c.addText("data type signature: ");
		a_c.addText(" (");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText(")");
		a_c.addText("IccTagType : unknown");
		a_c.addText("IccTagType : ");
		a_c.addText("pw");
		a_c.addText("prefix");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccTag;");
	}
	public void c182_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.OwnFieldUse, 50);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{51, 75, 85});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("byte"), dmDependency.Type.Argument, 51);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{54, 100, 101, 103, 120});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 57);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 57);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.OwnFieldUse, new int[]{60, 116, 119, 120});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{65, 65, 65, 65});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 66);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.Returns, 66);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataTypes"), dmDependency.Type.MethodCall, 69);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.MethodCall, new int[]{70, 119, 120});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), dmDependency.Type.LocalVar, 75);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{75, 85});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 79);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 79);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{81, 84, 84, 84, 84, 89, 101, 103, 105, 117, 119, 125, 126});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{82, 83, 84, 84, 84, 84});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 85);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 85);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 85);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTag"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{91, 107});
	}

	public void c183_texts(dmClass a_c) {
		a_c.addText("colorTable");
		a_c.addText("<init>");
		a_c.addText("256");
		a_c.addText("10");
		a_c.addText("256");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("256");
		a_c.addText("255");
		a_c.addText("512");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("i");
		a_c.addText("colorModeData");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("sample");
		a_c.addText("getBasicChannelsCount");
	}
	public void c183_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 37);
	}

	public void c184_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("correctImage");
		a_c.addText("src");
		a_c.addText("file");
		a_c.addText("icc");
		a_c.addText("cs");
		a_c.addText("relabelColorSpace");
		a_c.addText("bi");
		a_c.addText("profile");
		a_c.addText("cs");
		a_c.addText("relabelColorSpace");
		a_c.addText("bi");
		a_c.addText("cs");
		a_c.addText("cm");
		a_c.addText("relabelColorSpace");
		a_c.addText("bi");
		a_c.addText("cm");
		a_c.addText("deriveColorModel");
		a_c.addText("bi");
		a_c.addText("cs");
		a_c.addText("deriveColorModel");
		a_c.addText("bi");
		a_c.addText("cs");
		a_c.addText("forceNoAlpha");
		a_c.addText("deriveColorModel");
		a_c.addText("Could not clone unknown ColorModel Type.");
		a_c.addText("ccm");
		a_c.addText("dcm");
		a_c.addText("oldMask");
		a_c.addText("oldBits");
		a_c.addText("colorModel");
		a_c.addText("cs");
		a_c.addText("forceNoAlpha");
		a_c.addText("countBitsInMask");
		a_c.addText("i");
		a_c.addText("count");
		a_c.addText("convertToColorSpace");
		a_c.addText("bi");
		a_c.addText("to");
		a_c.addText("from");
		a_c.addText("hints");
		a_c.addText("op");
		a_c.addText("result");
		a_c.addText("convertTosRGB");
		a_c.addText("bi");
		a_c.addText("srgbCM");
		a_c.addText("convertFromColorSpace");
		a_c.addText("bi");
		a_c.addText("from");
		a_c.addText("srgbCM");
		a_c.addText("convertBetweenICCProfiles");
		a_c.addText("bi");
		a_c.addText("from");
		a_c.addText("to");
		a_c.addText("csFrom");
		a_c.addText("csTo");
		a_c.addText("convertToICCProfile");
		a_c.addText("bi");
		a_c.addText("to");
		a_c.addText("csTo");
		a_c.addText("convertBetweenColorSpacesX2");
		a_c.addText("bi");
		a_c.addText("from");
		a_c.addText("to");
		a_c.addText("hints");
		a_c.addText("op");
		a_c.addText("convertBetweenColorSpaces");
		a_c.addText("bi");
		a_c.addText("from");
		a_c.addText("to");
		a_c.addText("hints");
		a_c.addText("op");
		a_c.addText("result");
	}
	public void c184_deps() {
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 42);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 42);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{42, 53, 60, 73, 156, 175, 180, 185, 192, 197, 224});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{42, 53, 60, 73, 85, 91, 156, 175, 180, 185, 192, 197, 224});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.io.File"), dmDependency.Type.Argument, 42);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("org.apache.commons.imaging.Imaging"), dmDependency.Type.MethodCall, 46);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.ConstructorCall, new int[]{51, 58, 189, 190, 196});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.LocalVar, 53);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.LocalVar, new int[]{53, 60, 192, 192, 197});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ImagingOpException"), dmDependency.Type.Throws, new int[]{53, 60, 73, 85, 91, 96});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.Argument, new int[]{53, 185, 185, 192});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.Argument, new int[]{60, 85, 91, 96, 156, 180, 197, 197, 224, 224});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, new int[]{73, 180, 185});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.Argument, new int[]{73, 96});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{85, 96, 160});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 85);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.Returns, new int[]{85, 91, 96});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ComponentColorModel"), dmDependency.Type.MethodCall, new int[]{107, 109, 110, 110, 111});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ComponentColorModel"), dmDependency.Type.ConstructorCall, new int[]{107, 111});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.MethodCall, new int[]{115, 115, 116, 116, 120, 121, 121, 121, 122, 122});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.ConstructorCall, 122);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ImagingOpException"), dmDependency.Type.ConstructorCall, 145);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ComponentColorModel"), dmDependency.Type.LocalVar, 145);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.LocalVar, 145);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, new int[]{160, 179, 180, 184, 185});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.RenderingHints"), dmDependency.Type.FieldUse, new int[]{162, 162, 164, 164, 166, 166, 202, 202, 204, 204, 206, 206, 230, 230, 232, 232, 234, 234});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.RenderingHints"), dmDependency.Type.ConstructorCall, new int[]{162, 202, 230});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.RenderingHints"), dmDependency.Type.MethodCall, new int[]{164, 166, 204, 206, 232, 234});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorConvertOp"), dmDependency.Type.ConstructorCall, new int[]{169, 215, 237});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorConvertOp"), dmDependency.Type.MethodCall, new int[]{171, 216, 220, 241});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.LocalVar, 175);
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.RenderingHints"), dmDependency.Type.LocalVar, new int[]{175, 224, 245});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.ColorConvertOp"), dmDependency.Type.LocalVar, new int[]{175, 224, 245});
		d(m_classes.get("org.apache.commons.imaging.ColorTools"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{175, 245});
	}

	public void c185_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("keyword");
		a_c.addText("text");
	}

	public void c186_texts(dmClass a_c) {
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("<init>");
		a_c.addText("keyword");
		a_c.addText("text");
	}

	public void c187_texts(dmClass a_c) {
		a_c.addText("languageTag");
		a_c.addText("translatedKeyword");
		a_c.addText("<init>");
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("languageTag");
		a_c.addText("translatedKeyword");
	}

	public void c188_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("keyword");
		a_c.addText("text");
	}
	public void c185_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Text"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Text"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.ConstructorCall, 30);
	}
	public void c186_deps() {
	}
	public void c187_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Itxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Itxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.ConstructorCall, 57);
	}
	public void c188_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Ztxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngText$Ztxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.ConstructorCall, 36);
	}

	public void c189_texts(dmClass a_c) {
		a_c.addText("id");
		a_c.addText("nameData");
		a_c.addText("data");
		a_c.addText("<init>");
		a_c.addText("id");
		a_c.addText("nameData");
		a_c.addText("data");
		a_c.addText("getName");
		a_c.addText("getName: ");
	}
	public void c189_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{30, 31, 35, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 36);
	}

	public void c190_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("hash");
		a_c.addText("<init>");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("b");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("tempHash");
		a_c.addText("hashCode");
		a_c.addText("equals");
		a_c.addText("i");
		a_c.addText("other");
		a_c.addText("o");
	}

	public void c191_texts(dmClass a_c) {
		a_c.addText("codeSize");
		a_c.addText("initialCodeSize");
		a_c.addText("codes");
		a_c.addText("byteOrder");
		a_c.addText("earlyLimit");
		a_c.addText("clearCode");
		a_c.addText("eoiCode");
		a_c.addText("listener");
		a_c.addText("map");
		a_c.addText("<init>");
		a_c.addText("initialCodeSize");
		a_c.addText("byteOrder");
		a_c.addText("earlyLimit");
		a_c.addText("<init>");
		a_c.addText("initialCodeSize");
		a_c.addText("byteOrder");
		a_c.addText("earlyLimit");
		a_c.addText("listener");
		a_c.addText("initializeStringTable");
		a_c.addText("key");
		a_c.addText("intialEntriesCount");
		a_c.addText("clearTable");
		a_c.addText("incrementCodeSize");
		a_c.addText("12");
		a_c.addText("arrayToKey");
		a_c.addText("8");
		a_c.addText("b");
		a_c.addText("arrayToKey");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("writeDataCode");
		a_c.addText("bos");
		a_c.addText("code");
		a_c.addText("writeClearCode");
		a_c.addText("bos");
		a_c.addText("writeEoiCode");
		a_c.addText("bos");
		a_c.addText("writeCode");
		a_c.addText("bos");
		a_c.addText("code");
		a_c.addText("isInTable");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("key");
		a_c.addText("codeFromString");
		a_c.addText("CodeFromString");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("key");
		a_c.addText("code");
		a_c.addText("addTableEntry");
		a_c.addText("bos");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("key");
		a_c.addText("addTableEntry");
		a_c.addText("12");
		a_c.addText("bos");
		a_c.addText("key");
		a_c.addText("cleared");
		a_c.addText("limit");
		a_c.addText("compress");
		a_c.addText("code");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("baos");
		a_c.addText("bos");
		a_c.addText("wStart");
		a_c.addText("wLength");
		a_c.addText("code");
	}

	public void c192_texts(dmClass a_c) {
		a_c.addText("dataCode");
		a_c.addText("eoiCode");
		a_c.addText("clearCode");
		a_c.addText("init");
	}
	public void c190_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{97, 128, 128});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.LocalVar, 135);
	}
	public void c191_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 40});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener"), dmDependency.Type.Argument, 40);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener"), dmDependency.Type.OwnFieldUse, new int[]{44, 145, 146, 152, 153, 159, 160});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{45, 231});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$Listener"), dmDependency.Type.MethodCall, new int[]{54, 146, 153, 160});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.LocalVar, new int[]{73, 173, 183, 189});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.Returns, new int[]{84, 87});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{84, 87, 168, 173, 183, 216});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.ConstructorCall, 140);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{140, 149, 156, 163, 173, 183, 189, 216});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), dmDependency.Type.Argument, new int[]{140, 149, 156, 163, 183, 189});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), dmDependency.Type.MethodCall, new int[]{167, 258});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 181);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor$ByteArray"), dmDependency.Type.Argument, 189);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("byte"), dmDependency.Type.Returns, 216);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 230);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), dmDependency.Type.ConstructorCall, 231);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 260);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 260);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitOutputStream"), dmDependency.Type.LocalVar, 260);
	}
	public void c192_deps() {
	}

	public void c194_texts(dmClass a_c) {
		a_c.addText("getPaletteIndex");
		a_c.addText("getEntry");
		a_c.addText("length");
	}
	public void c194_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.Palette"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 1);
	}

	public void c195_texts(dmClass a_c) {
		a_c.addText("RECORD_VERSION");
		a_c.addText("OBJECT_TYPE_REFERENCE");
		a_c.addText("OBJECT_ATTRIBUTE_REFERENCE");
		a_c.addText("OBJECT_NAME");
		a_c.addText("EDIT_STATUS");
		a_c.addText("EDITORIAL_UPDATE");
		a_c.addText("URGENCY");
		a_c.addText("SUBJECT_REFERENCE");
		a_c.addText("CATEGORY");
		a_c.addText("SUPPLEMENTAL_CATEGORY");
		a_c.addText("FIXTURE_IDENTIFIER");
		a_c.addText("KEYWORDS");
		a_c.addText("CONTENT_LOCATION_CODE");
		a_c.addText("CONTENT_LOCATION_NAME");
		a_c.addText("RELEASE_DATE");
		a_c.addText("RELEASE_TIME");
		a_c.addText("EXPIRATION_DATE");
		a_c.addText("EXPIRATION_TIME");
		a_c.addText("SPECIAL_INSTRUCTIONS");
		a_c.addText("ACTION_ADVISED");
		a_c.addText("REFERENCE_SERVICE");
		a_c.addText("REFERENCE_DATE");
		a_c.addText("REFERENCE_NUMBER");
		a_c.addText("DATE_CREATED");
		a_c.addText("TIME_CREATED");
		a_c.addText("DIGITAL_CREATION_DATE");
		a_c.addText("DIGITAL_CREATION_TIME");
		a_c.addText("ORIGINATING_PROGRAM");
		a_c.addText("PROGRAM_VERSION");
		a_c.addText("OBJECT_CYCLE");
		a_c.addText("BYLINE");
		a_c.addText("BYLINE_TITLE");
		a_c.addText("CITY");
		a_c.addText("SUBLOCATION");
		a_c.addText("PROVINCE_STATE");
		a_c.addText("COUNTRY_PRIMARY_LOCATION_CODE");
		a_c.addText("COUNTRY_PRIMARY_LOCATION_NAME");
		a_c.addText("ORIGINAL_TRANSMISSION_REFERENCE");
		a_c.addText("HEADLINE");
		a_c.addText("CREDIT");
		a_c.addText("SOURCE");
		a_c.addText("COPYRIGHT_NOTICE");
		a_c.addText("CONTACT");
		a_c.addText("CAPTION_ABSTRACT");
		a_c.addText("WRITER_EDITOR");
		a_c.addText("RASTERIZED_CAPTION");
		a_c.addText("IMAGE_TYPE");
		a_c.addText("IMAGE_ORIENTATION");
		a_c.addText("LANGUAGE_IDENTIFIER");
		a_c.addText("AUDIO_TYPE");
		a_c.addText("AUDIO_SAMPLING_RATE");
		a_c.addText("AUDIO_SAMPLING_RESOLUTION");
		a_c.addText("AUDIO_DURATION");
		a_c.addText("AUDIO_OUTCUE");
		a_c.addText("OBJECT_DATA_PREVIEW_FILE_FORMAT");
		a_c.addText("OBJECT_DATA_PREVIEW_FILE_FORMAT_VERSION");
		a_c.addText("OBJECT_DATA_PREVIEW_DATA");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/jpeg/iptc/IptcTypes;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getName");
		a_c.addText("getType");
		a_c.addText("toString");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("getUnknown");
		a_c.addText("type");
		a_c.addText("<clinit>");
		a_c.addText("RECORD_VERSION");
		a_c.addText("Record Version");
		a_c.addText("OBJECT_TYPE_REFERENCE");
		a_c.addText("Object Type Reference");
		a_c.addText("OBJECT_ATTRIBUTE_REFERENCE");
		a_c.addText("Object Attribute Reference");
		a_c.addText("OBJECT_NAME");
		a_c.addText("Object Name");
		a_c.addText("EDIT_STATUS");
		a_c.addText("7");
		a_c.addText("Edit Status");
		a_c.addText("EDITORIAL_UPDATE");
		a_c.addText("8");
		a_c.addText("Editorial Update");
		a_c.addText("URGENCY");
		a_c.addText("6");
		a_c.addText("10");
		a_c.addText("Urgency");
		a_c.addText("SUBJECT_REFERENCE");
		a_c.addText("7");
		a_c.addText("12");
		a_c.addText("Subject Reference");
		a_c.addText("CATEGORY");
		a_c.addText("8");
		a_c.addText("15");
		a_c.addText("Category");
		a_c.addText("SUPPLEMENTAL_CATEGORY");
		a_c.addText("9");
		a_c.addText("20");
		a_c.addText("Supplemental Category");
		a_c.addText("FIXTURE_IDENTIFIER");
		a_c.addText("10");
		a_c.addText("22");
		a_c.addText("Fixture Identifier");
		a_c.addText("KEYWORDS");
		a_c.addText("11");
		a_c.addText("25");
		a_c.addText("Keywords");
		a_c.addText("CONTENT_LOCATION_CODE");
		a_c.addText("12");
		a_c.addText("26");
		a_c.addText("Content Location Code");
		a_c.addText("CONTENT_LOCATION_NAME");
		a_c.addText("13");
		a_c.addText("27");
		a_c.addText("Content Location Name");
		a_c.addText("RELEASE_DATE");
		a_c.addText("14");
		a_c.addText("30");
		a_c.addText("Release Date");
		a_c.addText("RELEASE_TIME");
		a_c.addText("15");
		a_c.addText("35");
		a_c.addText("Release Time");
		a_c.addText("EXPIRATION_DATE");
		a_c.addText("16");
		a_c.addText("37");
		a_c.addText("Expiration Date");
		a_c.addText("EXPIRATION_TIME");
		a_c.addText("17");
		a_c.addText("38");
		a_c.addText("Expiration Time");
		a_c.addText("SPECIAL_INSTRUCTIONS");
		a_c.addText("18");
		a_c.addText("40");
		a_c.addText("Special Instructions");
		a_c.addText("ACTION_ADVISED");
		a_c.addText("19");
		a_c.addText("42");
		a_c.addText("Action Advised");
		a_c.addText("REFERENCE_SERVICE");
		a_c.addText("20");
		a_c.addText("45");
		a_c.addText("Reference Service");
		a_c.addText("REFERENCE_DATE");
		a_c.addText("21");
		a_c.addText("47");
		a_c.addText("Reference Date");
		a_c.addText("REFERENCE_NUMBER");
		a_c.addText("22");
		a_c.addText("50");
		a_c.addText("Reference Number");
		a_c.addText("DATE_CREATED");
		a_c.addText("23");
		a_c.addText("55");
		a_c.addText("Date Created");
		a_c.addText("TIME_CREATED");
		a_c.addText("24");
		a_c.addText("60");
		a_c.addText("Time Created");
		a_c.addText("DIGITAL_CREATION_DATE");
		a_c.addText("25");
		a_c.addText("62");
		a_c.addText("Digital Creation Date");
		a_c.addText("DIGITAL_CREATION_TIME");
		a_c.addText("26");
		a_c.addText("63");
		a_c.addText("Digital Creation Time");
		a_c.addText("ORIGINATING_PROGRAM");
		a_c.addText("27");
		a_c.addText("65");
		a_c.addText("Originating Program");
		a_c.addText("PROGRAM_VERSION");
		a_c.addText("28");
		a_c.addText("70");
		a_c.addText("Program Version");
		a_c.addText("OBJECT_CYCLE");
		a_c.addText("29");
		a_c.addText("75");
		a_c.addText("Object Cycle");
		a_c.addText("BYLINE");
		a_c.addText("30");
		a_c.addText("80");
		a_c.addText("By-line");
		a_c.addText("BYLINE_TITLE");
		a_c.addText("31");
		a_c.addText("85");
		a_c.addText("By-line Title");
		a_c.addText("CITY");
		a_c.addText("32");
		a_c.addText("90");
		a_c.addText("City");
		a_c.addText("SUBLOCATION");
		a_c.addText("33");
		a_c.addText("92");
		a_c.addText("Sublocation");
		a_c.addText("PROVINCE_STATE");
		a_c.addText("34");
		a_c.addText("95");
		a_c.addText("Province/State");
		a_c.addText("COUNTRY_PRIMARY_LOCATION_CODE");
		a_c.addText("35");
		a_c.addText("100");
		a_c.addText("Country/Primary Location Code");
		a_c.addText("COUNTRY_PRIMARY_LOCATION_NAME");
		a_c.addText("36");
		a_c.addText("101");
		a_c.addText("Country/Primary Location Name");
		a_c.addText("ORIGINAL_TRANSMISSION_REFERENCE");
		a_c.addText("37");
		a_c.addText("103");
		a_c.addText("Original Transmission, Reference");
		a_c.addText("HEADLINE");
		a_c.addText("38");
		a_c.addText("105");
		a_c.addText("Headline");
		a_c.addText("CREDIT");
		a_c.addText("39");
		a_c.addText("110");
		a_c.addText("Credit");
		a_c.addText("SOURCE");
		a_c.addText("40");
		a_c.addText("115");
		a_c.addText("Source");
		a_c.addText("COPYRIGHT_NOTICE");
		a_c.addText("41");
		a_c.addText("116");
		a_c.addText("Copyright Notice");
		a_c.addText("CONTACT");
		a_c.addText("42");
		a_c.addText("118");
		a_c.addText("Contact");
		a_c.addText("CAPTION_ABSTRACT");
		a_c.addText("43");
		a_c.addText("120");
		a_c.addText("Caption/Abstract");
		a_c.addText("WRITER_EDITOR");
		a_c.addText("44");
		a_c.addText("122");
		a_c.addText("Writer/Editor");
		a_c.addText("RASTERIZED_CAPTION");
		a_c.addText("45");
		a_c.addText("125");
		a_c.addText("Rasterized Caption");
		a_c.addText("IMAGE_TYPE");
		a_c.addText("46");
		a_c.addText("130");
		a_c.addText("ImageType");
		a_c.addText("IMAGE_ORIENTATION");
		a_c.addText("47");
		a_c.addText("131");
		a_c.addText("Image Orientation");
		a_c.addText("LANGUAGE_IDENTIFIER");
		a_c.addText("48");
		a_c.addText("135");
		a_c.addText("Language Identifier");
		a_c.addText("AUDIO_TYPE");
		a_c.addText("49");
		a_c.addText("150");
		a_c.addText("Audio Type");
		a_c.addText("AUDIO_SAMPLING_RATE");
		a_c.addText("50");
		a_c.addText("151");
		a_c.addText("Audio Sampling Rate");
		a_c.addText("AUDIO_SAMPLING_RESOLUTION");
		a_c.addText("51");
		a_c.addText("152");
		a_c.addText("Audio Sampling Resolution");
		a_c.addText("AUDIO_DURATION");
		a_c.addText("52");
		a_c.addText("153");
		a_c.addText("Audio Duration");
		a_c.addText("AUDIO_OUTCUE");
		a_c.addText("53");
		a_c.addText("154");
		a_c.addText("Audio Outcue");
		a_c.addText("OBJECT_DATA_PREVIEW_FILE_FORMAT");
		a_c.addText("54");
		a_c.addText("200");
		a_c.addText("Object Data Preview, File Format");
		a_c.addText("OBJECT_DATA_PREVIEW_FILE_FORMAT_VERSION");
		a_c.addText("55");
		a_c.addText("201");
		a_c.addText("Object Data Preview, File Format Version");
		a_c.addText("OBJECT_DATA_PREVIEW_DATA");
		a_c.addText("56");
		a_c.addText("202");
		a_c.addText("Object Data Preview Data");
		a_c.addText("57");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("56");
	}

	public void c196_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Unknown");
		a_c.addText("getType");
		a_c.addText("toString");
		a_c.addText("Unknown (");
		a_c.addText(")");
	}
	public void c195_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.Returns, new int[]{1, 19});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.OwnFieldUse, new int[]{19, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Returns, 155);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes$1"), dmDependency.Type.ConstructorCall, 159);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.ConstructorCall, new int[]{20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 19});
	}
	public void c196_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Implements, 1);
	}

	public void c198_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("1");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("<init>");
		a_c.addText("message");
		a_c.addText("cause");
	}
	public void c198_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException"), m_classes.get("long"), dmDependency.Type.Field, 1);
	}

	public void c199_texts(dmClass a_c) {
		a_c.addText("huffmanTables");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("255");
		a_c.addText("TableClassAndDestinationId");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("17");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("Li");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("Vij");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("tableClassAndDestinationId");
		a_c.addText("tableClass");
		a_c.addText("destinationIdentifier");
		a_c.addText("bits");
		a_c.addText("bitsSum");
		a_c.addText("huffVal");
		a_c.addText("marker");
		a_c.addText("length");
		a_c.addText("is");
		a_c.addText("huffmanTables");
		a_c.addText("getDescription");
		a_c.addText("DHT (");
		a_c.addText(")");
	}

	public void c200_texts(dmClass a_c) {
		a_c.addText("tableClass");
		a_c.addText("destinationIdentifier");
		a_c.addText("huffVal");
		a_c.addText("huffSize");
		a_c.addText("huffCode");
		a_c.addText("minCode");
		a_c.addText("maxCode");
		a_c.addText("valPtr");
		a_c.addText("<init>");
		a_c.addText("4096");
		a_c.addText("10");
		a_c.addText("17");
		a_c.addText("10");
		a_c.addText("17");
		a_c.addText("10");
		a_c.addText("17");
		a_c.addText("10");
		a_c.addText("16");
		a_c.addText("10");
		a_c.addText("16");
		a_c.addText("tableClass");
		a_c.addText("destinationIdentifier");
		a_c.addText("bits");
		a_c.addText("huffVal");
		a_c.addText("k");
		a_c.addText("i");
		a_c.addText("j");
		a_c.addText("lastK");
		a_c.addText("code");
		a_c.addText("si");
		a_c.addText("getHuffVal");
		a_c.addText("i");
		a_c.addText("getMinCode");
		a_c.addText("i");
		a_c.addText("getMaxCode");
		a_c.addText("i");
		a_c.addText("getValPtr");
		a_c.addText("i");
	}
	public void c199_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 139});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 138);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), dmDependency.Type.ConstructorCall, 138);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 139);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, 143);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{147, 155, 161});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.ConstructorCall, 165);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.LocalVar, 169);
	}
	public void c200_deps() {
	}

	public void c201_texts(dmClass a_c) {
		a_c.addText("byteOrder");
		a_c.addText("directories");
		a_c.addText("NEWLINE");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("getOutputItems");
		a_c.addText("directory");
		a_c.addText("outputSummary");
		a_c.addText("result");
		a_c.addText("addDirectory");
		a_c.addText("Output set already contains a directory of that type.");
		a_c.addText("directory");
		a_c.addText("getDirectories");
		a_c.addText("getRootDirectory");
		a_c.addText("getExifDirectory");
		a_c.addText("-2");
		a_c.addText("getOrCreateRootDirectory");
		a_c.addText("result");
		a_c.addText("getOrCreateExifDirectory");
		a_c.addText("-2");
		a_c.addText("result");
		a_c.addText("getOrCreateGPSDirectory");
		a_c.addText("-3");
		a_c.addText("result");
		a_c.addText("getGPSDirectory");
		a_c.addText("-3");
		a_c.addText("getInteroperabilityDirectory");
		a_c.addText("-4");
		a_c.addText("findDirectory");
		a_c.addText("directory");
		a_c.addText("directoryType");
		a_c.addText("setGPSInDegrees");
		a_c.addText("W");
		a_c.addText("E");
		a_c.addText("S");
		a_c.addText("N");
		a_c.addText("60.0");
		a_c.addText("60.0");
		a_c.addText("60.0");
		a_c.addText("60.0");
		a_c.addText("value");
		a_c.addText("longitudeDegrees");
		a_c.addText("longitudeMinutes");
		a_c.addText("longitudeSeconds");
		a_c.addText("value");
		a_c.addText("latitudeDegrees");
		a_c.addText("latitudeMinutes");
		a_c.addText("latitudeSeconds");
		a_c.addText("longitude");
		a_c.addText("latitude");
		a_c.addText("gpsDirectory");
		a_c.addText("longitudeRef");
		a_c.addText("latitudeRef");
		a_c.addText("removeField");
		a_c.addText("tagInfo");
		a_c.addText("removeField");
		a_c.addText("directory");
		a_c.addText("tag");
		a_c.addText("findField");
		a_c.addText("tagInfo");
		a_c.addText("findField");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("tag");
		a_c.addText("addRootDirectory");
		a_c.addText("result");
		a_c.addText("addExifDirectory");
		a_c.addText("-2");
		a_c.addText("result");
		a_c.addText("addGPSDirectory");
		a_c.addText("-3");
		a_c.addText("result");
		a_c.addText("addInteroperabilityDirectory");
		a_c.addText("-4");
		a_c.addText("result");
		a_c.addText("toString");
		a_c.addText("toString");
		a_c.addText("39");
		a_c.addText("TiffOutputSet {");
		a_c.addText("byteOrder: ");
		a_c.addText("%s\tdirectory %d: %s (%d)%n");
		a_c.addText("\t\tfield ");
		a_c.addText(": ");
		a_c.addText("125");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("fields");
		a_c.addText("i");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("dump");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c201_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffConstants"), dmDependency.Type.FieldUse, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{43, 218, 225, 232, 242, 266});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{44, 54, 75, 84, 96, 125, 214, 221, 228, 235});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.Argument, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Returns, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.MethodCall, new int[]{51, 141, 142, 149, 150, 153, 154, 167, 168, 184, 185, 199, 209, 272, 274});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.LocalVar, new int[]{54, 84, 96, 108, 125, 191, 201, 214, 221, 228, 235, 245, 286});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Argument, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.FieldUse, new int[]{59, 121, 272});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Returns, new int[]{64, 67, 71, 75, 84, 96, 108, 112, 116, 214, 221, 228, 235});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), dmDependency.Type.FieldUse, new int[]{141, 142, 149, 150, 153, 154, 167, 168, 184, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), dmDependency.Type.MethodCall, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.ConstructorCall, new int[]{168, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.MethodCall, new int[]{169, 170, 171, 186, 187, 188});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{191, 201});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{194, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Returns, new int[]{201, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.LocalVar, new int[]{214, 286, 286});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.ConstructorCall, new int[]{218, 225, 232, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.FieldUse, 277);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, 290);
	}

	public void c202_texts(dmClass a_c) {
		a_c.addText("precision");
		a_c.addText("subsets");
		a_c.addText("straight");
		a_c.addText("<init>");
		a_c.addText("index");
		a_c.addText("k");
		a_c.addText("j");
		a_c.addText("u");
		a_c.addText("subset");
		a_c.addText("i");
		a_c.addText("subsets");
		a_c.addText("precision");
		a_c.addText("getPaletteIndex");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("rgb");
		a_c.addText("precisionMask");
		a_c.addText("index");
		a_c.addText("getEntry");
		a_c.addText("index");
		a_c.addText("subset");
		a_c.addText("length");
	}
	public void c202_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.OwnFieldUse, new int[]{31, 43, 58});
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.MethodCall, new int[]{35, 58});
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.FieldUse, new int[]{37, 37, 38, 38, 39, 39, 64});
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.LocalVar, new int[]{48, 64});
		d(m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 48);
	}

	public void c203_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_GDAL_METADATA");
		a_c.addText("EXIF_TAG_GDAL_NO_DATA");
		a_c.addText("ALL_GDAL_LIBRARY_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("GDALMetadata");
		a_c.addText("42112");
		a_c.addText("GDALNoData");
		a_c.addText("42113");
	}
	public void c203_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{35, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{35, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{35, 39, 43, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 43);
	}

	public void c204_texts(dmClass a_c) {
		a_c.addText("getPaletteSize");
		a_c.addText("getBitsPerPixel");
		a_c.addText("writePalette");
		a_c.addText("getImageData");
	}
	public void c204_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), m_classes.get("byte"), dmDependency.Type.Returns, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
	}

	public void c205_texts(dmClass a_c) {
		a_c.addText("IEC");
		a_c.addText("1229275936");
		a_c.addText("sRGB");
		a_c.addText("1934772034");
		a_c.addText("<init>");
	}

	public void c206_texts(dmClass a_c) {
		a_c.addText("rationalNumber");
		a_c.addText("error");
		a_c.addText("<init>");
		a_c.addText("rationalNumber");
		a_c.addText("error");
		a_c.addText("factory");
		a_c.addText("rationalNumber");
		a_c.addText("value");
		a_c.addText("toString");
	}

	public void c207_texts(dmClass a_c) {
		a_c.addText("serialVersionUID");
		a_c.addText("-8412262656468158691");
		a_c.addText("TOLERANCE");
		a_c.addText("1.0E-8");
		a_c.addText("numerator");
		a_c.addText("divisor");
		a_c.addText("<init>");
		a_c.addText("numerator");
		a_c.addText("divisor");
		a_c.addText("factoryMethod");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("Invalid value, numerator: ");
		a_c.addText(", divisor: ");
		a_c.addText("n");
		a_c.addText("d");
		a_c.addText("gcd");
		a_c.addText("gcd");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("negate");
		a_c.addText("doubleValue");
		a_c.addText("floatValue");
		a_c.addText("intValue");
		a_c.addText("longValue");
		a_c.addText("toString");
		a_c.addText("Invalid rational (");
		a_c.addText("/");
		a_c.addText(")");
		a_c.addText("/");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("nf");
		a_c.addText("toDisplayString");
		a_c.addText("nf");
		a_c.addText("valueOf");
		a_c.addText("2.147483647E9");
		a_c.addText("2147483647");
		a_c.addText("-2.147483647E9");
		a_c.addText("-2147483647");
		a_c.addText("100");
		a_c.addText("1.0E-8");
		a_c.addText("100");
		a_c.addText("l");
		a_c.addText("h");
		a_c.addText("approx");
		a_c.addText("l");
		a_c.addText("h");
		a_c.addText("l");
		a_c.addText("h");
		a_c.addText("approx");
		a_c.addText("mediant");
		a_c.addText("mediantOption");
		a_c.addText("count");
		a_c.addText("value");
		a_c.addText("negative");
		a_c.addText("l");
		a_c.addText("h");
		a_c.addText("low");
		a_c.addText("high");
		a_c.addText("bestOption");
		a_c.addText("maxIterations");
	}
	public void c206_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.OwnFieldUse, new int[]{128, 138});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), dmDependency.Type.Returns, 130);
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 130);
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.MethodCall, new int[]{133, 138});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), dmDependency.Type.ConstructorCall, 133);
	}
	public void c207_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, new int[]{37, 73, 120});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("long"), dmDependency.Type.Argument, new int[]{37, 37, 63, 63});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.ConstructorCall, new int[]{63, 78, 150, 152, 165, 169, 170, 172, 173, 178, 179, 181, 182});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{63, 63, 73});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("long"), dmDependency.Type.Returns, new int[]{63, 93});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("java.text.NumberFormat"), dmDependency.Type.MethodCall, new int[]{106, 109, 111, 118, 119, 120});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("java.text.NumberFormat"), dmDependency.Type.LocalVar, new int[]{111, 120});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), dmDependency.Type.MethodCall, new int[]{185, 186, 199});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), dmDependency.Type.FieldUse, new int[]{188, 188, 193, 194, 194, 194, 194, 202, 202, 208, 208, 215, 215, 220, 220});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.LocalVar, new int[]{220, 220, 220, 220, 220, 220, 220, 220, 220});
		d(m_classes.get("org.apache.commons.imaging.common.RationalNumber"), m_classes.get("org.apache.commons.imaging.common.RationalNumber$Option"), dmDependency.Type.LocalVar, new int[]{220, 220, 220, 220});
	}

	public void c208_texts(dmClass a_c) {
		a_c.addText("nodes");
		a_c.addText("<init>");
		a_c.addText("insert");
		a_c.addText("Can\'t add child to a leaf");
		a_c.addText("48");
		a_c.addText("Can\'t add child to a leaf");
		a_c.addText("nextChar");
		a_c.addText("patternPosition");
		a_c.addText("pattern");
		a_c.addText("value");
		a_c.addText("position");
		a_c.addText("node");
		a_c.addText("growAndGetNode");
		a_c.addText("position");
		a_c.addText("node");
		a_c.addText("decode");
		a_c.addText("Error reading stream for huffman tree");
		a_c.addText("Invalid bit pattern");
		a_c.addText("Invalid bit pattern");
		a_c.addText("nextBit");
		a_c.addText("ioEx");
		a_c.addText("nextBit");
		a_c.addText("bitStream");
		a_c.addText("position");
		a_c.addText("node");
	}

	public void c209_texts(dmClass a_c) {
	}

	public void c210_texts(dmClass a_c) {
		a_c.addText("empty");
		a_c.addText("value");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("x0");
	}
	public void c208_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException"), dmDependency.Type.Throws, new int[]{27, 61});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.FieldUse, new int[]{37, 48, 52, 60, 67, 84, 88});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException"), dmDependency.Type.ConstructorCall, new int[]{38, 49, 72, 81, 85});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("char"), dmDependency.Type.LocalVar, 53);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.LocalVar, new int[]{53, 61, 88});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.Returns, 53);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.ConstructorCall, 57);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.Argument, 61);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.MethodCall, 70);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 88);
	}
	public void c209_deps() {
	}
	public void c210_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree$Node"), dmDependency.Type.ConstructorCall, 29);
	}

	public void c211_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c211_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c212_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("i");
		a_c.addText("string");
		a_c.addText("i");
		a_c.addText("string");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("nullCount");
		a_c.addText("strings");
		a_c.addText("stringsAdded");
		a_c.addText("nextStringPos");
		a_c.addText("writeData");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Unknown data type: ");
		a_c.addText("bytes");
		a_c.addText("result");
		a_c.addText("bytes");
		a_c.addText("result");
		a_c.addText("bytes");
		a_c.addText("string");
		a_c.addText("bytes");
		a_c.addText("string");
		a_c.addText("strings");
		a_c.addText("totalLength");
		a_c.addText("result");
		a_c.addText("position");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c212_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{50, 58, 77, 86, 92});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{65, 98, 98, 98, 98, 98, 98, 98});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("byte"), dmDependency.Type.Returns, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 98);
	}

	public void c213_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("bytes");
		a_c.addText("filter");
		a_c.addText("TransparencyFilterIndexedColor index: ");
		a_c.addText(", bytes.length: ");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16777215");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("length");
		a_c.addText("alpha");
	}
	public void c213_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 37);
	}

	public void c214_texts(dmClass a_c) {
		a_c.addText("latitudeRef");
		a_c.addText("longitudeRef");
		a_c.addText("latitudeDegrees");
		a_c.addText("latitudeMinutes");
		a_c.addText("latitudeSeconds");
		a_c.addText("longitudeDegrees");
		a_c.addText("longitudeMinutes");
		a_c.addText("longitudeSeconds");
		a_c.addText("<init>");
		a_c.addText("latitudeRef");
		a_c.addText("longitudeRef");
		a_c.addText("latitudeDegrees");
		a_c.addText("latitudeMinutes");
		a_c.addText("latitudeSeconds");
		a_c.addText("longitudeDegrees");
		a_c.addText("longitudeMinutes");
		a_c.addText("longitudeSeconds");
		a_c.addText("toString");
		a_c.addText("[GPS. Latitude: ");
		a_c.addText(" degrees, ");
		a_c.addText(" minutes, ");
		a_c.addText(" seconds ");
		a_c.addText(", Longitude: ");
		a_c.addText(" degrees, ");
		a_c.addText(" minutes, ");
		a_c.addText(" seconds ");
		a_c.addText("93");
		a_c.addText("getLongitudeAsDegreesEast");
		a_c.addText("60.0");
		a_c.addText("3600.0");
		a_c.addText("e");
		a_c.addText("w");
		a_c.addText("Unknown longitude ref: \"");
		a_c.addText("\"");
		a_c.addText("result");
		a_c.addText("getLatitudeAsDegreesNorth");
		a_c.addText("60.0");
		a_c.addText("3600.0");
		a_c.addText("n");
		a_c.addText("s");
		a_c.addText("Unknown latitude ref: \"");
		a_c.addText("\"");
		a_c.addText("result");
	}

	public void c215_texts(dmClass a_c) {
		a_c.addText("type");
		a_c.addText("directory");
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("directory");
		a_c.addText("add");
		a_c.addText("entry");
		a_c.addText("getThumbnail");
		a_c.addText("getTiffImageData");
		a_c.addText("findField");
		a_c.addText("tagInfo");
		a_c.addText("getAllFields");
		a_c.addText("getJpegImageData");
		a_c.addText("toString");
		a_c.addText(": ");
		a_c.addText(" (tiffImageData)");
		a_c.addText(" (jpegImageData)");
		a_c.addText("\n");
		a_c.addText("\n");
		a_c.addText("prefix");
		a_c.addText("getOutputDirectory");
		a_c.addText("item");
		a_c.addText("srcField");
		a_c.addText("tagInfo");
		a_c.addText("fieldType");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("count");
		a_c.addText("dstField");
		a_c.addText("entry");
		a_c.addText("dstDir");
		a_c.addText("entries");
		a_c.addText("e");
		a_c.addText("byteOrder");
		a_c.addText("access$000");
		a_c.addText("x0");
	}

	public void c216_texts(dmClass a_c) {
		a_c.addText("entry");
		a_c.addText("<init>");
		a_c.addText("entry");
		a_c.addText("getTiffField");
	}

	public void c217_texts(dmClass a_c) {
		a_c.addText("contents");
		a_c.addText("<init>");
		a_c.addText("contents");
		a_c.addText("getDirectories");
		a_c.addText("getItems");
		a_c.addText("dir");
		a_c.addText("item");
		a_c.addText("result");
		a_c.addText("items");
		a_c.addText("getOutputSet");
		a_c.addText("srcDir");
		a_c.addText("outputDirectory");
		a_c.addText("srcDir1");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("srcDirs");
		a_c.addText("findField");
		a_c.addText("tagInfo");
		a_c.addText("findField");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("directory1");
		a_c.addText("field");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("directory1");
		a_c.addText("directory");
		a_c.addText("field");
		a_c.addText("directory1");
		a_c.addText("tagInfo");
		a_c.addText("exactDirectoryMatch");
		a_c.addText("tagCount");
		a_c.addText("tagsMatching");
		a_c.addText("directories");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("bytes");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("getFieldValue");
		a_c.addText("tag");
		a_c.addText("field");
		a_c.addText("findDirectory");
		a_c.addText("directory");
		a_c.addText("directory1");
		a_c.addText("directoryType");
		a_c.addText("directories");
		a_c.addText("getAllFields");
		a_c.addText("directory");
		a_c.addText("directory1");
		a_c.addText("result");
		a_c.addText("directories");
		a_c.addText("getGPS");
		a_c.addText("-3");
		a_c.addText("Expected three values for latitude and longitude.");
		a_c.addText("gpsDirectory");
		a_c.addText("latitudeRefField");
		a_c.addText("latitudeField");
		a_c.addText("longitudeRefField");
		a_c.addText("longitudeField");
		a_c.addText("latitudeRef");
		a_c.addText("latitude");
		a_c.addText("longitudeRef");
		a_c.addText("longitude");
		a_c.addText("latitudeDegrees");
		a_c.addText("latitudeMinutes");
		a_c.addText("latitudeSeconds");
		a_c.addText("longitudeDegrees");
		a_c.addText("longitudeMinutes");
		a_c.addText("longitudeSeconds");
	}
	public void c214_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.OwnFieldUse, new int[]{508, 509, 510, 511, 512, 513, 523, 524, 526, 528, 532, 534, 543, 543, 544, 558, 558, 559});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.MethodCall, new int[]{524, 526, 528, 532, 534, 536, 543, 544, 545, 558, 559, 560});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{523, 552});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{552, 567});
	}
	public void c215_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.ConstructorCall, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.FieldUse, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.OwnFieldUse, new int[]{69, 79, 83, 87, 91, 95, 100, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{70, 79});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), dmDependency.Type.ConstructorCall, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{75, 83});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{79, 83, 87, 91, 95, 100});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Returns, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, new int[]{83, 87});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, 83);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Returns, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.MethodCall, 104);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 100);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Returns, 100);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 100);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.ConstructorCall, 110);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), dmDependency.Type.MethodCall, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{118, 121, 126, 127, 132, 147, 148});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.MethodCall, new int[]{118, 149, 152, 153});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.MethodCall, new int[]{121, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, 145);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.ConstructorCall, 147);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.MethodCall, 148);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.MethodCall, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("byte"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.LocalVar, new int[]{157, 157});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.LocalVar, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Returns, 157);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.Argument, 157);
	}
	public void c216_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{185, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem"), dmDependency.Type.ConstructorCall, 185);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.OwnFieldUse, new int[]{186, 190});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$TiffMetadataItem"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, 187);
	}
	public void c217_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.OwnFieldUse, new int[]{55, 196});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Returns, new int[]{56, 164});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.MethodCall, new int[]{164, 171});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.MethodCall, new int[]{174, 210, 233, 246, 252, 262, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.LocalVar, new int[]{177, 214, 268, 268, 268, 435, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.LocalVar, new int[]{177, 177, 177, 214, 214, 268, 268, 268, 268, 435, 435, 445, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 177);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.Returns, 177);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.FieldUse, 196);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.FieldUse, 196);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.ConstructorCall, 197);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.FieldUse, new int[]{203, 232, 244, 250, 431, 432});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.MethodCall, new int[]{203, 211});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.LocalVar, 214);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 214);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.LocalVar, 214);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{214, 218, 268, 276, 287, 299, 311, 323, 336, 347, 359, 371, 384, 396, 408, 416, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, new int[]{214, 218, 435});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{214, 218, 268});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{224, 228, 232, 244, 250});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), dmDependency.Type.MethodCall, 224);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{228, 232});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.MethodCall, new int[]{244, 250});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{268, 268, 268, 268, 276, 287, 299, 311, 323, 336, 347, 359, 371, 384, 396, 408, 416, 424, 445, 483, 483, 483, 483});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{276, 284, 287, 295, 298, 299, 307, 310, 311, 319, 322, 323, 332, 335, 336, 344, 347, 355, 358, 359, 367, 370, 371, 380, 383, 384, 392, 395, 396, 404, 407, 408, 466, 467, 468, 469});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{276, 336});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Argument, 276);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.FieldUse, 284);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Argument, 287);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.FieldUse, 295);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.MethodCall, 299);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{299, 311, 323, 336, 359, 371, 384, 396, 408});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("short"), dmDependency.Type.Returns, new int[]{299, 347});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Argument, 299);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.FieldUse, 307);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.MethodCall, 311);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Argument, 311);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.FieldUse, 319);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.MethodCall, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, new int[]{323, 371});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Argument, 323);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.FieldUse, 332);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.MethodCall, 336);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.Argument, 336);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.FieldUse, 344);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.Argument, 347);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.FieldUse, 355);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.MethodCall, 359);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.Argument, 359);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.FieldUse, 367);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.MethodCall, 371);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.Argument, 371);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.FieldUse, 380);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.MethodCall, 384);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.Argument, 384);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.FieldUse, 392);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.MethodCall, 396);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.Argument, 396);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.FieldUse, 404);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.MethodCall, 408);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.Argument, 408);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.MethodCall, 416);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.Argument, 416);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.MethodCall, 424);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Returns, 424);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), dmDependency.Type.Returns, 445);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), dmDependency.Type.FieldUse, new int[]{455, 456, 457, 458});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{455, 456, 457, 458});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 472);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$GPSInfo"), dmDependency.Type.ConstructorCall, 483);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.LocalVar, 483);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.LocalVar, new int[]{483, 483, 483, 483, 483, 483, 483, 483});
	}

	public void c218_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
	}
	public void c218_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 24);
	}

	public void c220_texts(dmClass a_c) {
		a_c.addText("tiles");
		a_c.addText("tileWidth");
		a_c.addText("tileLength");
		a_c.addText("<init>");
		a_c.addText("tiles");
		a_c.addText("tileWidth");
		a_c.addText("tileLength");
		a_c.addText("getImageData");
		a_c.addText("stripsNotTiles");
		a_c.addText("getDataReader");
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compression");
		a_c.addText("byteOrder");
		a_c.addText("sampleFormat");
		a_c.addText("getTileWidth");
		a_c.addText("getTileHeight");
	}

	public void c221_texts(dmClass a_c) {
		a_c.addText("strips");
		a_c.addText("rowsPerStrip");
		a_c.addText("<init>");
		a_c.addText("strips");
		a_c.addText("rowsPerStrip");
		a_c.addText("getImageData");
		a_c.addText("getImageData");
		a_c.addText("offset");
		a_c.addText("getImageDataLength");
		a_c.addText("stripsNotTiles");
		a_c.addText("getDataReader");
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compression");
		a_c.addText("byteorder");
		a_c.addText("sampleFormat");
	}

	public void c222_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getImageData");
		a_c.addText("stripsNotTiles");
		a_c.addText("getDataReader");
		a_c.addText("extractSampleFormat");
		a_c.addText("directory");
		a_c.addText("sSampleFmt");
		a_c.addText("access$000");
		a_c.addText("x0");
	}

	public void c223_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("data");
		a_c.addText("getElementDescription");
		a_c.addText("Tiff image data: ");
		a_c.addText(" bytes");
	}

	public void c224_texts(dmClass a_c) {
		a_c.addText("byteSourceFile");
		a_c.addText("<init>");
		a_c.addText("8");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteSource");
		a_c.addText("getElementDescription");
		a_c.addText("Tiff image data: ");
		a_c.addText(" bytes");
		a_c.addText("getData");
		a_c.addText("8");
		a_c.addText("ioex");
	}
	public void c220_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.OwnFieldUse, new int[]{39, 46});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Returns, 42);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.Returns, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.FieldUse, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), dmDependency.Type.ConstructorCall, 61);
	}
	public void c221_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.ConstructorCall, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.OwnFieldUse, new int[]{98, 104, 108, 112});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Returns, new int[]{100, 104});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.Returns, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.FieldUse, 126);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips"), dmDependency.Type.ConstructorCall, 127);
	}
	public void c222_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Returns, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{30, 30, 187});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.Returns, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, new int[]{30, 30, 187});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, 182);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), m_classes.get("short"), dmDependency.Type.LocalVar, 187);
	}
	public void c223_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.ConstructorCall, 148);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), m_classes.get("byte"), dmDependency.Type.LocalVar, 149);
	}
	public void c224_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), dmDependency.Type.ConstructorCall, 162);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.OwnFieldUse, new int[]{163, 174});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.LocalVar, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("byte"), dmDependency.Type.Returns, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.MethodCall, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$ByteSourceData"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 176);
	}

	public void c225_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("L");
		a_c.addText("<init>");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("L");
		a_c.addText("toString");
		a_c.addText("{H: ");
		a_c.addText(", S: ");
		a_c.addText(", L: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("colorHsl");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("120.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("240.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
	}
	public void c225_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsl"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsl"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsl"), m_classes.get("long"), dmDependency.Type.LocalVar, 128);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsl"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsl"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78});
	}

	public void c227_texts(dmClass a_c) {
		a_c.addText("transparentColor");
		a_c.addText("<init>");
		a_c.addText("transparentColor");
		a_c.addText("tRNS: Missing transparentColor");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("filter");
		a_c.addText("rgb");
		a_c.addText("index");
	}
	public void c227_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 34);
	}

	public void c228_texts(dmClass a_c) {
		a_c.addText("max");
		a_c.addText("scale");
		a_c.addText("bytesPerSample");
		a_c.addText("<init>");
		a_c.addText("PPM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("65535");
		a_c.addText("65535.0");
		a_c.addText("PPM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("rawbits");
		a_c.addText("max");
		a_c.addText("hasAlpha");
		a_c.addText("getNumComponents");
		a_c.addText("getBitDepth");
		a_c.addText("getImageType");
		a_c.addText("getImageTypeDescription");
		a_c.addText("PPM: portable pixmap file format");
		a_c.addText("getMIMEType");
		a_c.addText("image/x-portable-pixmap");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("is");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("wsr");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
	}
	public void c228_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{35, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{80, 94});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.Argument, 94);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.MethodCall, new int[]{102, 103, 104});
	}

	public void c229_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
	}
	public void c229_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, 24);
	}

	public void c230_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("bitsPerPixel");
		a_c.addText("pngChunkPLTE");
		a_c.addText("gammaCorrection");
		a_c.addText("transparencyFilter");
		a_c.addText("drive");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("unfiltered");
		a_c.addText("bitParser");
		a_c.addText("y");
		a_c.addText("bitsPerScanLine");
		a_c.addText("pixelBytesPerScanLine");
		a_c.addText("prev");
	}
	public void c230_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.ConstructorCall, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, 53);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{57, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), dmDependency.Type.LocalVar, 57);
	}

	public void c231_texts(dmClass a_c) {
		a_c.addText("photoshop");
		a_c.addText("exif");
		a_c.addText("NEWLINE");
		a_c.addText("<init>");
		a_c.addText("photoshop");
		a_c.addText("exif");
		a_c.addText("getExif");
		a_c.addText("getPhotoshop");
		a_c.addText("findEXIFValue");
		a_c.addText("cannotHappen");
		a_c.addText("tagInfo");
		a_c.addText("findEXIFValueWithExactMatch");
		a_c.addText("cannotHappen");
		a_c.addText("tagInfo");
		a_c.addText("getEXIFThumbnailSize");
		a_c.addText("data");
		a_c.addText("getEXIFThumbnailData");
		a_c.addText("dir");
		a_c.addText("data");
		a_c.addText("d");
		a_c.addText("dirs");
		a_c.addText("getEXIFThumbnail");
		a_c.addText("input");
		a_c.addText("input");
		a_c.addText("input");
		a_c.addText("input");
		a_c.addText("imageSucceeded");
		a_c.addText("dir");
		a_c.addText("image");
		a_c.addText("jpegImageData");
		a_c.addText("d");
		a_c.addText("dirs");
		a_c.addText("getRawImageData");
		a_c.addText("dir");
		a_c.addText("rawImageData");
		a_c.addText("d");
		a_c.addText("dirs");
		a_c.addText("getItems");
		a_c.addText("result");
		a_c.addText("toString");
		a_c.addText("toString");
		a_c.addText("No Exif metadata.");
		a_c.addText("Exif metadata:");
		a_c.addText("\t");
		a_c.addText("No Photoshop (IPTC) metadata.");
		a_c.addText("Photoshop (IPTC) metadata:");
		a_c.addText("\t");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("dump");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c231_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.OwnFieldUse, new int[]{46, 55, 196, 197, 229, 234});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.OwnFieldUse, new int[]{47, 51, 60, 60, 68, 68, 99, 102, 131, 135, 172, 175, 192, 193, 217, 222});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.Returns, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.Returns, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, new int[]{55, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{55, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.MethodCall, new int[]{60, 68, 102, 135, 175, 193, 222});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.LocalVar, new int[]{62, 70});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{70, 88, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{70, 88, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.Imaging"), dmDependency.Type.MethodCall, new int[]{86, 149});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{88, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("byte"), dmDependency.Type.Returns, 88);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.MethodCall, new int[]{107, 108, 139, 144, 179});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.MethodCall, new int[]{108, 149, 158, 158, 158, 158});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.LocalVar, new int[]{117, 168, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.LocalVar, new int[]{117, 117, 168, 168, 185, 185, 200});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, new int[]{158, 158, 158, 158});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("javax.imageio.ImageIO"), dmDependency.Type.MethodCall, new int[]{159, 159, 159, 159});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, new int[]{168, 168, 168, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.LocalVar, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Returns, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.LocalVar, 185);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Returns, 185);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.MethodCall, new int[]{197, 234});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, 241);
	}

	public void c232_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("bytes");
		a_c.addText("getDescription");
		a_c.addText("Unknown (");
		a_c.addText(")");
	}
	public void c232_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.ConstructorCall, new int[]{24, 28});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 25);
	}

	public void c233_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("read");
		a_c.addText("PNM: Unexpected EOF");
		a_c.addText("result");
		a_c.addText("nextChar");
		a_c.addText("35");
		a_c.addText("10");
		a_c.addText("13");
		a_c.addText("c");
		a_c.addText("readtoWhiteSpace");
		a_c.addText("c");
		a_c.addText("buffer");
		a_c.addText("readLine");
		a_c.addText("10");
		a_c.addText("13");
		a_c.addText("c");
		a_c.addText("buffer");
	}
	public void c233_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{26, 30});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{27, 34, 45, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("char"), dmDependency.Type.Returns, new int[]{27, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), m_classes.get("char"), dmDependency.Type.LocalVar, new int[]{45, 62, 70});
	}

	public void c235_texts(dmClass a_c) {
		a_c.addText("PNM_PREFIX_BYTE");
		a_c.addText("80");
		a_c.addText("PBM_TEXT_CODE");
		a_c.addText("49");
		a_c.addText("PGM_TEXT_CODE");
		a_c.addText("50");
		a_c.addText("PPM_TEXT_CODE");
		a_c.addText("51");
		a_c.addText("PGM_RAW_CODE");
		a_c.addText("53");
		a_c.addText("PBM_RAW_CODE");
		a_c.addText("52");
		a_c.addText("PPM_RAW_CODE");
		a_c.addText("54");
		a_c.addText("PAM_RAW_CODE");
		a_c.addText("55");
		a_c.addText("PNM_SEPARATOR");
		a_c.addText("32");
		a_c.addText("PNM_NEWLINE");
		a_c.addText("10");
		a_c.addText("<init>");
	}
	public void c235_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmConstants"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
	}

	public void c236_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("values");
		a_c.addText("byteOrder");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("offset");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("values");
		a_c.addText("byteOrder");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("offset");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("values");
		a_c.addText("byteOrder");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("offset");
		a_c.addText("bits");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("values");
		a_c.addText("byteOrder");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("40");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("48");
		a_c.addText("7");
		a_c.addText("255");
		a_c.addText("56");
		a_c.addText("7");
		a_c.addText("255");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("40");
		a_c.addText("255");
		a_c.addText("48");
		a_c.addText("255");
		a_c.addText("56");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("offset");
		a_c.addText("bits");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("values");
		a_c.addText("byteOrder");
		a_c.addText("toBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toBytes");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("24");
		a_c.addText("6");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("offset");
		a_c.addText("toShort");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toShort");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("toShorts");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toShorts");
		a_c.addText("9");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toUInt16");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toUInt16");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("toUInt16s");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toUInt16s");
		a_c.addText("10");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toInt");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toInt");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("byte3");
		a_c.addText("toInts");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toInts");
		a_c.addText("10");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toFloat");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toFloat");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("bits");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("byte3");
		a_c.addText("bits");
		a_c.addText("toFloats");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toFloats");
		a_c.addText("6");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toDouble");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toDouble");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("7");
		a_c.addText("56");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("bits");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("byte3");
		a_c.addText("byte4");
		a_c.addText("byte5");
		a_c.addText("byte6");
		a_c.addText("byte7");
		a_c.addText("bits");
		a_c.addText("toDoubles");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toDoubles");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
		a_c.addText("toRational");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toRational");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("7");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("numerator");
		a_c.addText("divisor");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("byteOrder");
		a_c.addText("byte0");
		a_c.addText("byte1");
		a_c.addText("byte2");
		a_c.addText("byte3");
		a_c.addText("byte4");
		a_c.addText("byte5");
		a_c.addText("byte6");
		a_c.addText("byte7");
		a_c.addText("numerator");
		a_c.addText("divisor");
		a_c.addText("toRationals");
		a_c.addText("bytes");
		a_c.addText("byteOrder");
		a_c.addText("toRationals");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("byteOrder");
		a_c.addText("result");
	}
	public void c236_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{27, 32, 36, 55, 60, 64, 87, 92, 96, 120, 125, 129, 162, 167, 171});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("short"), dmDependency.Type.Argument, new int[]{27, 32, 36, 44});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{27, 32, 36, 44, 55, 60, 64, 72, 87, 92, 96, 104, 120, 125, 129, 138, 162, 167, 171, 180, 204, 207, 211, 215, 224, 228, 237, 242, 251, 255, 266, 271, 280, 284, 298, 302, 311, 315, 337, 341, 350, 354, 375, 379});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{32, 44, 60, 72, 92, 104, 125, 138, 167, 180});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{44, 72, 104, 138, 180, 204, 207, 211, 215, 224, 228, 237, 242, 251, 255, 266, 271, 280, 284, 298, 302, 311, 315, 337, 341, 350, 354, 375, 379});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{48, 76, 109, 143, 185, 234, 263, 293, 328, 368});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 125);
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{162, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, new int[]{162, 167, 171, 180});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.FieldUse, new int[]{186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("short"), dmDependency.Type.Returns, new int[]{204, 207, 211, 215});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("short"), dmDependency.Type.LocalVar, 224);
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, new int[]{350, 354, 375, 379});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.ConstructorCall, new int[]{375, 384});
		d(m_classes.get("org.apache.commons.imaging.common.ByteConversions"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.LocalVar, 388);
	}

	public void c237_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("V");
		a_c.addText("<init>");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("V");
		a_c.addText("toString");
		a_c.addText("{H: ");
		a_c.addText(", S: ");
		a_c.addText(", V: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("colorHsv");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("120.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("240.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
	}
	public void c237_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsv"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsv"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsv"), m_classes.get("long"), dmDependency.Type.LocalVar, 128);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsv"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHsv"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78});
	}

	public void c238_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("isOffset");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c238_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 28});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{27, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{27, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{32, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{32, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("short"), dmDependency.Type.Argument, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{35, 39});
	}

	public void c239_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getColorBufferedImage");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("getGrayscaleBufferedImage");
		a_c.addText("10");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
	}
	public void c239_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.SimpleBufferedImageFactory"), m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.common.SimpleBufferedImageFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{22, 29});
		d(m_classes.get("org.apache.commons.imaging.common.SimpleBufferedImageFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, new int[]{27, 29, 36, 39});
	}

	public void c240_texts(dmClass a_c) {
		a_c.addText("UNSPECIFIED");
		a_c.addText("DO_NOT_DISPOSE");
		a_c.addText("RESTORE_TO_BACKGROUND");
		a_c.addText("RESTORE_TO_PREVIOUS");
		a_c.addText("TO_BE_DEFINED_1");
		a_c.addText("TO_BE_DEFINED_2");
		a_c.addText("TO_BE_DEFINED_3");
		a_c.addText("TO_BE_DEFINED_4");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/gif/DisposalMethod;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("UNSPECIFIED");
		a_c.addText("DO_NOT_DISPOSE");
		a_c.addText("RESTORE_TO_BACKGROUND");
		a_c.addText("RESTORE_TO_PREVIOUS");
		a_c.addText("TO_BE_DEFINED_1");
		a_c.addText("TO_BE_DEFINED_2");
		a_c.addText("TO_BE_DEFINED_3");
		a_c.addText("6");
		a_c.addText("TO_BE_DEFINED_4");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
	}
	public void c240_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Returns, new int[]{1, 23});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.OwnFieldUse, new int[]{23, 28, 33, 38, 43, 48, 53, 58, 63, 23, 23, 23, 23, 23, 23, 23, 23, 23});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.ConstructorCall, new int[]{28, 33, 38, 43, 48, 53, 58, 63, 23});
	}

	public void c241_texts(dmClass a_c) {
		a_c.addText("code");
		a_c.addText("init");
	}

	public void c242_texts(dmClass a_c) {
		a_c.addText("MAX_TABLE_SIZE");
		a_c.addText("4096");
		a_c.addText("table");
		a_c.addText("codeSize");
		a_c.addText("initialCodeSize");
		a_c.addText("codes");
		a_c.addText("byteOrder");
		a_c.addText("listener");
		a_c.addText("clearCode");
		a_c.addText("eoiCode");
		a_c.addText("written");
		a_c.addText("tiffLZWMode");
		a_c.addText("<init>");
		a_c.addText("initialCodeSize");
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("4096");
		a_c.addText("initialCodeSize");
		a_c.addText("byteOrder");
		a_c.addText("listener");
		a_c.addText("initializeTable");
		a_c.addText("8");
		a_c.addText("i");
		a_c.addText("intialEntriesCount");
		a_c.addText("clearTable");
		a_c.addText("getNextCode");
		a_c.addText("is");
		a_c.addText("code");
		a_c.addText("stringFromCode");
		a_c.addText("Bad Code: ");
		a_c.addText(" codes: ");
		a_c.addText(" code_size: ");
		a_c.addText(", table: ");
		a_c.addText("code");
		a_c.addText("isInTable");
		a_c.addText("code");
		a_c.addText("firstChar");
		a_c.addText("bytes");
		a_c.addText("addStringToTable");
		a_c.addText("bytes");
		a_c.addText("appendBytes");
		a_c.addText("8");
		a_c.addText("bytes");
		a_c.addText("b");
		a_c.addText("result");
		a_c.addText("writeToResult");
		a_c.addText("os");
		a_c.addText("bytes");
		a_c.addText("setTiffLZWMode");
		a_c.addText("decompress");
		a_c.addText("outString");
		a_c.addText("is");
		a_c.addText("expectedLength");
		a_c.addText("code");
		a_c.addText("oldCode");
		a_c.addText("mbis");
		a_c.addText("baos");
		a_c.addText("checkCodeSize");
		a_c.addText("limit");
		a_c.addText("incrementCodeSize");
		a_c.addText("12");
	}
	public void c241_deps() {
	}
	public void c242_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 46});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.ConstructorCall, 45);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener"), dmDependency.Type.Argument, 46);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener"), dmDependency.Type.OwnFieldUse, new int[]{50, 85, 86});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{51, 139});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.ConstructorCall, 55);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{55, 72, 93, 96, 109});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor$Listener"), dmDependency.Type.MethodCall, new int[]{60, 86});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{80, 88, 104, 123, 134});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.Argument, 80);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.MethodCall, new int[]{83, 141});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{88, 100, 116, 134});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 93);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{100, 104, 116, 116, 123});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{123, 184});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 123);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, 128);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 134);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.ConstructorCall, 139);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 144);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 184);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.LocalVar, 184);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 184);
	}

	public void c243_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".tif");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Tiff-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".tif");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("directory");
		a_c.addText("getImageSize");
		a_c.addText("TIFF image missing size info.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("directory");
		a_c.addText("widthField");
		a_c.addText("heightField");
		a_c.addText("height");
		a_c.addText("width");
		a_c.addText("getMetadata");
		a_c.addText("entry");
		a_c.addText("metadataDirectory");
		a_c.addText("entries");
		a_c.addText("dir");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("tiffReader");
		a_c.addText("contents");
		a_c.addText("directories");
		a_c.addText("result");
		a_c.addText("getImageInfo");
		a_c.addText("TIFF image missing size info.");
		a_c.addText("-1.0");
		a_c.addText("2.54");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("TIFF Tag-based Image File Format");
		a_c.addText("image/tiff");
		a_c.addText("Tiff v.");
		a_c.addText("65535");
		a_c.addText("TIFF Tag-based Image File Format");
		a_c.addText("image/tiff");
		a_c.addText("xResolutionPixelsPerUnit");
		a_c.addText("yResolutionPixelsPerUnit");
		a_c.addText("xResolutionField");
		a_c.addText("yResolutionField");
		a_c.addText("comment");
		a_c.addText("field");
		a_c.addText("compressionFieldValue");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("directory");
		a_c.addText("widthField");
		a_c.addText("heightField");
		a_c.addText("height");
		a_c.addText("width");
		a_c.addText("resolutionUnitField");
		a_c.addText("resolutionUnit");
		a_c.addText("unitsPerInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("bitsPerSampleField");
		a_c.addText("bitsPerSample");
		a_c.addText("bitsPerPixel");
		a_c.addText("entries");
		a_c.addText("comments");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("formatDetails");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorMapField");
		a_c.addText("colorType");
		a_c.addText("compressionFieldValue");
		a_c.addText("compression");
		a_c.addText("compressionAlgorithm");
		a_c.addText("result");
		a_c.addText("getXmpXml");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("directory");
		a_c.addText("bytes");
		a_c.addText("dumpImageFile");
		a_c.addText("tiff.dumpImageFile");
		a_c.addText("imageData");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("entries");
		a_c.addText("d");
		a_c.addText("formatCompliance");
		a_c.addText("params");
		a_c.addText("contents");
		a_c.addText("directories");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("getFormatCompliance");
		a_c.addText("byteSource");
		a_c.addText("formatCompliance");
		a_c.addText("params");
		a_c.addText("collectRawImageData");
		a_c.addText("bytes");
		a_c.addText("element");
		a_c.addText("directory");
		a_c.addText("dataElements");
		a_c.addText("i");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("contents");
		a_c.addText("result");
		a_c.addText("getBufferedImage");
		a_c.addText("TIFF does not contain an image.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("formatCompliance");
		a_c.addText("reader");
		a_c.addText("contents");
		a_c.addText("byteOrder");
		a_c.addText("directory");
		a_c.addText("result");
		a_c.addText("getAllBufferedImages");
		a_c.addText("directory");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("byteSource");
		a_c.addText("formatCompliance");
		a_c.addText("tiffReader");
		a_c.addText("contents");
		a_c.addText("results");
		a_c.addText("getIntegerParameter");
		a_c.addText("Non-Integer parameter ");
		a_c.addText("key");
		a_c.addText("params");
		a_c.addText("obj");
		a_c.addText("checkForSubImage");
		a_c.addText("SUBIMAGE_X");
		a_c.addText("SUBIMAGE_Y");
		a_c.addText("SUBIMAGE_WIDTH");
		a_c.addText("SUBIMAGE_HEIGHT");
		a_c.addText("32");
		a_c.addText(" x0,");
		a_c.addText(" y0,");
		a_c.addText(" width,");
		a_c.addText(" height,");
		a_c.addText("Incomplete subimage parameters, missing");
		a_c.addText("params");
		a_c.addText("ix0");
		a_c.addText("iy0");
		a_c.addText("iwidth");
		a_c.addText("iheight");
		a_c.addText("sb");
		a_c.addText("getBufferedImage");
		a_c.addText("TIFF missing entries");
		a_c.addText("65535");
		a_c.addText("65535");
		a_c.addText("negative or zero subimage width");
		a_c.addText("negative or zero subimage height");
		a_c.addText("subimage x is outside raster");
		a_c.addText("subimage (x+width) is outside raster");
		a_c.addText("subimage y is outside raster");
		a_c.addText("subimage (y+height) is outside raster");
		a_c.addText("10");
		a_c.addText("Tiff: samplesPerPixel (");
		a_c.addText(")!=fBitsPerSample.length (");
		a_c.addText(")");
		a_c.addText("CUSTOM_PHOTOMETRIC_INTERPRETER");
		a_c.addText("compressionFieldValue");
		a_c.addText("predictorField");
		a_c.addText("photometricInterpreter");
		a_c.addText("hasAlpha");
		a_c.addText("imageBuilder");
		a_c.addText("directory");
		a_c.addText("byteOrder");
		a_c.addText("params");
		a_c.addText("entries");
		a_c.addText("photometricInterpretation");
		a_c.addText("compressionFieldValue");
		a_c.addText("compression");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("subImage");
		a_c.addText("samplesPerPixel");
		a_c.addText("samplesPerPixelField");
		a_c.addText("bitsPerSample");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSampleField");
		a_c.addText("predictor");
		a_c.addText("photometricInterpreter");
		a_c.addText("test");
		a_c.addText("imageData");
		a_c.addText("dataReader");
		a_c.addText("result");
		a_c.addText("getPhotometricInterpreter");
		a_c.addText("Tiff: fColorMap.length (");
		a_c.addText(")!=expectedColormapSize (");
		a_c.addText(")");
		a_c.addText("TIFF: Unknown fPhotometricInterpretation: ");
		a_c.addText("invert");
		a_c.addText("colorMap");
		a_c.addText("expectedColormapSize");
		a_c.addText("directory");
		a_c.addText("photometricInterpretation");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("writeImage");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("getFloatingPointRasterData");
		a_c.addText("TIFF missing entries");
		a_c.addText("TIFF does not provide floating-point data");
		a_c.addText("TIFF floating-point data uses unsupported samples per pixel: ");
		a_c.addText("10");
		a_c.addText("32");
		a_c.addText("64");
		a_c.addText("TIFF floating-point data uses unsupported bits-per-pixel: ");
		a_c.addText("65535");
		a_c.addText("negative or zero subimage width");
		a_c.addText("negative or zero subimage height");
		a_c.addText("subimage x is outside raster");
		a_c.addText("subimage (x+width) is outside raster");
		a_c.addText("subimage y is outside raster");
		a_c.addText("subimage (y+height) is outside raster");
		a_c.addText("TIFF floating-point data uses unsupported horizontal-differencing predictor");
		a_c.addText("compressionFieldValue");
		a_c.addText("predictorField");
		a_c.addText("directory");
		a_c.addText("byteOrder");
		a_c.addText("params");
		a_c.addText("entries");
		a_c.addText("sSampleFmt");
		a_c.addText("samplesPerPixel");
		a_c.addText("samplesPerPixelField");
		a_c.addText("bitsPerSample");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSampleField");
		a_c.addText("compressionFieldValue");
		a_c.addText("compression");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("subImage");
		a_c.addText("predictor");
		a_c.addText("photometricInterpreter");
		a_c.addText("imageData");
		a_c.addText("dataReader");
		a_c.addText("<clinit>");
		a_c.addText(".tif");
		a_c.addText(".tiff");
	}
	public void c243_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{87, 246});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{87, 99, 123, 151, 310, 328, 389, 399, 418, 473, 492, 511, 544, 668, 748});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{87, 99, 123, 151, 310, 328, 389, 399, 418, 473, 544, 738, 748});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{87, 99, 123, 151, 310, 328, 389, 399, 418, 473});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.MethodCall, new int[]{94, 106, 129, 157, 316, 350, 395, 404, 463, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), dmDependency.Type.ConstructorCall, new int[]{95, 107, 130, 158, 317, 352, 397, 405, 464, 480});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), dmDependency.Type.MethodCall, new int[]{95, 107, 131, 140, 158, 317, 352, 397, 405, 465, 467, 481, 487});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.FieldUse, new int[]{97, 109, 134, 160, 249, 254, 319, 355, 409, 410, 468, 484, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), dmDependency.Type.FieldUse, 99);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{99, 111, 113, 142, 162, 164, 176, 205, 207, 226, 258, 266, 267, 321, 411, 469, 486, 556, 559, 560, 565, 566, 603, 610, 627, 652, 685, 791, 798, 811, 825, 827, 833, 835, 879, 897});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.LocalVar, new int[]{99, 123, 151, 151, 310, 328, 389, 389, 418, 473, 492});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 99);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{111, 113, 162, 164, 176, 205, 207, 226, 258, 266, 267, 321, 556, 559, 560, 565, 566, 603, 610, 627, 685, 791, 798, 811, 825, 826, 832, 834, 879});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{117, 168, 471, 511, 541, 553, 573, 576, 579, 582, 585, 588, 635, 691, 738, 788, 794, 804, 819, 842, 845, 848, 851, 854, 857, 887});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{120, 121, 171, 172, 180, 181, 211, 212, 217, 218, 230, 231, 242, 373, 606, 613, 614, 630, 686, 801, 814, 815, 882});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 123);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{123, 123, 151, 151, 310, 310, 310, 310, 310, 310, 310, 310, 310, 389, 389, 668, 668, 668, 903, 903, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 123);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.ConstructorCall, 136);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.ConstructorCall, 140);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.MethodCall, 145);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.MethodCall, 148);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory"), dmDependency.Type.LocalVar, 151);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), dmDependency.Type.LocalVar, new int[]{151, 389, 473, 492});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.LocalVar, 151);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 151);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.FieldUse, new int[]{239, 364, 550, 785});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.FieldUse, 254);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 263);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, new int[]{276, 279, 282, 285, 288, 291, 294, 297, 300});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("short"), dmDependency.Type.LocalVar, new int[]{310, 310, 668, 668, 903, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, new int[]{310, 310, 310, 310, 310, 310, 310, 310, 310});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 310);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 310);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, new int[]{310, 389});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 328);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{328, 418});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 328);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{335, 388, 346, 388, 388, 377, 388, 388});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 343);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.LocalVar, new int[]{389, 399, 492});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, 389);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.FieldUse, new int[]{413, 413});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 413);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement"), dmDependency.Type.LocalVar, new int[]{418, 418});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{418, 473, 544});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 473);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{473, 492, 492, 668});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffReader"), dmDependency.Type.LocalVar, 492);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.Returns, 511);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.ConstructorCall, 544);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, new int[]{544, 668, 748});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{544, 748});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.FieldUse, new int[]{572, 575, 578, 578, 581, 581, 584, 584, 587, 587, 593, 593, 593, 593, 841, 844, 847, 847, 850, 850, 853, 853, 856, 856, 862, 862, 862, 862});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.MethodCall, new int[]{654, 899});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.MethodCall, new int[]{660, 665, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 663);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 666);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.LocalVar, new int[]{668, 668, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 668);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.LocalVar, new int[]{668, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.LocalVar, new int[]{668, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.LocalVar, new int[]{668, 903});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Returns, 668);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), dmDependency.Type.ConstructorCall, new int[]{681, 893});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), dmDependency.Type.ConstructorCall, 696);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), dmDependency.Type.ConstructorCall, 700);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), dmDependency.Type.ConstructorCall, 703);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), dmDependency.Type.ConstructorCall, 721);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), dmDependency.Type.ConstructorCall, 727);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv"), dmDependency.Type.ConstructorCall, 733);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 738);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 738);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 738);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), dmDependency.Type.ConstructorCall, 747);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), dmDependency.Type.MethodCall, 747);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Returns, 748);
	}

	public void c244_texts(dmClass a_c) {
		a_c.addText("PIXEL_NO_UNIT");
		a_c.addText("0");
		a_c.addText("PIXEL_PER_INCH");
		a_c.addText("254");
		a_c.addText("PIXEL_PER_METRE");
		a_c.addText("10000");
		a_c.addText("PIXEL_PER_CENTIMETRE");
		a_c.addText("100");
		a_c.addText("horizontalDensity");
		a_c.addText("verticalDensity");
		a_c.addText("unitLength");
		a_c.addText("<init>");
		a_c.addText("horizontalDensity");
		a_c.addText("verticalDensity");
		a_c.addText("unitLength");
		a_c.addText("createUnitless");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("createFromPixelsPerInch");
		a_c.addText("254");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("createFromPixelsPerMetre");
		a_c.addText("10000");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("createFromPixelsPerCentimetre");
		a_c.addText("100");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("isUnitless");
		a_c.addText("isInInches");
		a_c.addText("254");
		a_c.addText("isInCentimetres");
		a_c.addText("100");
		a_c.addText("isInMetres");
		a_c.addText("10000");
		a_c.addText("getRawHorizontalDensity");
		a_c.addText("getRawVerticalDensity");
		a_c.addText("horizontalDensityInches");
		a_c.addText("254.0");
		a_c.addText("verticalDensityInches");
		a_c.addText("254.0");
		a_c.addText("horizontalDensityMetres");
		a_c.addText("10000.0");
		a_c.addText("verticalDensityMetres");
		a_c.addText("10000.0");
		a_c.addText("horizontalDensityCentimetres");
		a_c.addText("100.0");
		a_c.addText("verticalDensityCentimetres");
		a_c.addText("100.0");
	}
	public void c244_deps() {
		d(m_classes.get("org.apache.commons.imaging.PixelDensity"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.Returns, new int[]{39, 42, 46, 50});
		d(m_classes.get("org.apache.commons.imaging.PixelDensity"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.ConstructorCall, new int[]{42, 46, 50, 54});
	}

	public void c245_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("setByteOrder");
		a_c.addText("byteOrder");
		a_c.addText("getByteOrder");
		a_c.addText("debugNumber");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("e");
		a_c.addText("msg");
		a_c.addText("data");
		a_c.addText("bytes");
		a_c.addText("debugNumber");
		a_c.addText(": ");
		a_c.addText(" (");
		a_c.addText(",");
		a_c.addText("255");
		a_c.addText(" [");
		a_c.addText("]");
		a_c.addText("8");
		a_c.addText(") [0x");
		a_c.addText(", ");
		a_c.addText("]");
		a_c.addText("singleByte");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("msg");
		a_c.addText("data");
		a_c.addText("bytes");
		a_c.addText("byteData");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/common/BinaryFileParser;");
	}
	public void c245_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 42});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{31, 31});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{31, 34, 31, 45, 49});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Returns, 46);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 53);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 53);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{55, 58, 58, 58, 58, 64, 68, 71, 74, 75});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{56, 57, 58, 58, 58, 58});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.IOException"), dmDependency.Type.MethodCall, 59);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 61);
	}

	public void c246_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("formatDetails");
		a_c.addText("bitsPerPixel");
		a_c.addText("comments");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("height");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("width");
		a_c.addText("progressive");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("<init>");
		a_c.addText("formatDetails");
		a_c.addText("bitsPerPixel");
		a_c.addText("comments");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("height");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("width");
		a_c.addText("progressive");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("getBitsPerPixel");
		a_c.addText("getComments");
		a_c.addText("getFormat");
		a_c.addText("getFormatName");
		a_c.addText("getHeight");
		a_c.addText("getMimeType");
		a_c.addText("getNumberOfImages");
		a_c.addText("getPhysicalHeightDpi");
		a_c.addText("getPhysicalHeightInch");
		a_c.addText("getPhysicalWidthDpi");
		a_c.addText("getPhysicalWidthInch");
		a_c.addText("getWidth");
		a_c.addText("isProgressive");
		a_c.addText("getColorType");
		a_c.addText("dump");
		a_c.addText("toString");
		a_c.addText("Image Data: Error");
		a_c.addText("sw");
		a_c.addText("pw");
		a_c.addText("e");
		a_c.addText("toString");
		a_c.addText("Format Details: ");
		a_c.addText("Bits Per Pixel: ");
		a_c.addText("Comments: ");
		a_c.addText("\t");
		a_c.addText(": \'");
		a_c.addText("\'");
		a_c.addText("Format: ");
		a_c.addText("Format Name: ");
		a_c.addText("Compression Algorithm: ");
		a_c.addText("Height: ");
		a_c.addText("MimeType: ");
		a_c.addText("Number Of Images: ");
		a_c.addText("Physical Height Dpi: ");
		a_c.addText("Physical Height Inch: ");
		a_c.addText("Physical Width Dpi: ");
		a_c.addText("Physical Width Inch: ");
		a_c.addText("Width: ");
		a_c.addText("Is Progressive: ");
		a_c.addText("Is Transparent: ");
		a_c.addText("Color Type: ");
		a_c.addText("Uses Palette: ");
		a_c.addText("s");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("prefix");
		a_c.addText("getFormatDetails");
		a_c.addText("isTransparent");
		a_c.addText("usesPalette");
		a_c.addText("getCompressionAlgorithm");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/ImageInfo;");
	}

	public void c247_texts(dmClass a_c) {
		a_c.addText("BW");
		a_c.addText("GRAYSCALE");
		a_c.addText("RGB");
		a_c.addText("CMYK");
		a_c.addText("YCbCr");
		a_c.addText("YCCK");
		a_c.addText("YCC");
		a_c.addText("OTHER");
		a_c.addText("UNKNOWN");
		a_c.addText("description");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/ImageInfo$ColorType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("description");
		a_c.addText("toString");
		a_c.addText("<clinit>");
		a_c.addText("BW");
		a_c.addText("Black and White");
		a_c.addText("GRAYSCALE");
		a_c.addText("Grayscale");
		a_c.addText("RGB");
		a_c.addText("RGB");
		a_c.addText("CMYK");
		a_c.addText("CMYK");
		a_c.addText("YCbCr");
		a_c.addText("YCbCr");
		a_c.addText("YCCK");
		a_c.addText("YCCK");
		a_c.addText("YCC");
		a_c.addText("6");
		a_c.addText("YCC");
		a_c.addText("OTHER");
		a_c.addText("7");
		a_c.addText("Other");
		a_c.addText("UNKNOWN");
		a_c.addText("8");
		a_c.addText("Unknown");
		a_c.addText("9");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
	}

	public void c248_texts(dmClass a_c) {
		a_c.addText("UNKNOWN");
		a_c.addText("NONE");
		a_c.addText("LZW");
		a_c.addText("PACKBITS");
		a_c.addText("JPEG");
		a_c.addText("RLE");
		a_c.addText("ADAPTIVE_RLE");
		a_c.addText("PSD");
		a_c.addText("PNG_FILTER");
		a_c.addText("CCITT_GROUP_3");
		a_c.addText("CCITT_GROUP_4");
		a_c.addText("CCITT_1D");
		a_c.addText("description");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/ImageInfo$CompressionAlgorithm;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("description");
		a_c.addText("toString");
		a_c.addText("<clinit>");
		a_c.addText("UNKNOWN");
		a_c.addText("Unknown");
		a_c.addText("NONE");
		a_c.addText("None");
		a_c.addText("LZW");
		a_c.addText("LZW");
		a_c.addText("PACKBITS");
		a_c.addText("PackBits");
		a_c.addText("JPEG");
		a_c.addText("JPEG");
		a_c.addText("RLE");
		a_c.addText("RLE: Run-Length Encoding");
		a_c.addText("ADAPTIVE_RLE");
		a_c.addText("6");
		a_c.addText("Adaptive RLE");
		a_c.addText("PSD");
		a_c.addText("7");
		a_c.addText("Photoshop");
		a_c.addText("PNG_FILTER");
		a_c.addText("8");
		a_c.addText("PNG Filter");
		a_c.addText("CCITT_GROUP_3");
		a_c.addText("9");
		a_c.addText("CCITT Group 3 1-Dimensional Modified Huffman run-length encoding.");
		a_c.addText("CCITT_GROUP_4");
		a_c.addText("10");
		a_c.addText("CCITT Group 4");
		a_c.addText("CCITT_1D");
		a_c.addText("11");
		a_c.addText("CCITT 1D");
		a_c.addText("12");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
	}
	public void c246_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.OwnFieldUse, new int[]{119, 168, 322});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.OwnFieldUse, new int[]{135, 290, 336});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.OwnFieldUse, new int[]{136, 324, 376});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 137);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 137);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 156);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 281);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 300);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 301);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{304, 313, 315, 316, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, 306);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 308);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 308);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 308);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.MethodCall, 322);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.MethodCall, 336);
		d(m_classes.get("org.apache.commons.imaging.ImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Returns, 367);
	}
	public void c247_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, new int[]{1, 31});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.OwnFieldUse, new int[]{31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.ConstructorCall, new int[]{32, 33, 34, 35, 36, 37, 38, 39, 40, 31});
	}
	public void c248_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Returns, new int[]{1, 54});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.OwnFieldUse, new int[]{54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54});
		d(m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.ConstructorCall, new int[]{55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 54});
	}

	public void c250_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("data");
		a_c.addText("<init>");
		a_c.addText("Raster dimensions less than or equal to zero are not supported");
		a_c.addText("6");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("nCells");
		a_c.addText("<init>");
		a_c.addText("Raster dimensions less than or equal to zero are not supported");
		a_c.addText("Specified data does not contain sufficient elements");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("data");
		a_c.addText("setValue");
		a_c.addText("Coordinates out of range (");
		a_c.addText(", ");
		a_c.addText(")");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("value");
		a_c.addText("getValue");
		a_c.addText("Coordinates out of range (");
		a_c.addText(", ");
		a_c.addText(")");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("getSimpleStatistics");
		a_c.addText("NaN");
		a_c.addText("getSimpleStatistics");
		a_c.addText("valueToExclude");
		a_c.addText("getWidth");
		a_c.addText("getHeight");
		a_c.addText("getData");
	}
	public void c250_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics"), dmDependency.Type.Returns, new int[]{100, 110});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics"), dmDependency.Type.ConstructorCall, new int[]{110, 121});
	}

	public void c251_texts(dmClass a_c) {
		a_c.addText("unitsPerPixelXAxis");
		a_c.addText("unitsPerPixelYAxis");
		a_c.addText("unitSpecifier");
		a_c.addText("<init>");
		a_c.addText("PNG sCAL invalid unit specifier: ");
		a_c.addText("PNG sCAL x and y axis value separator not found.");
		a_c.addText("PNG sCAL chunk missing the y axis value.");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("separator");
		a_c.addText("xIndex");
		a_c.addText("xStr");
		a_c.addText("yIndex");
		a_c.addText("yStr");
		a_c.addText("toDouble");
		a_c.addText("PNG sCAL error reading axis value - ");
		a_c.addText("e");
		a_c.addText("str");
	}
	public void c251_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{1, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{37, 42, 51, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{46, 54});
	}

	public void c252_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
	}
	public void c252_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 25);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 25);
	}

	public void c253_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("fieldTypes");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("fieldType");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c253_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 28, 33});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{27, 32, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, new int[]{28, 33});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.LocalVar, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("byte"), dmDependency.Type.Returns, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), m_classes.get("byte"), dmDependency.Type.Argument, 38);
	}

	public void c254_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("10");
		a_c.addText("Invalid data");
		a_c.addText("numbers");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("values");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c254_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{32, 33, 35, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{34, 37, 43, 46, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("byte"), dmDependency.Type.LocalVar, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("byte"), dmDependency.Type.Returns, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 55);
	}

	public void c257_texts(dmClass a_c) {
		a_c.addText("bytesPerPixel");
		a_c.addText("<init>");
		a_c.addText("bytesPerPixel");
		a_c.addText("paethPredictor");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("c");
		a_c.addText("p");
		a_c.addText("pa");
		a_c.addText("pb");
		a_c.addText("pc");
		a_c.addText("unfilter");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("256");
		a_c.addText("left");
		a_c.addText("prevIndex");
		a_c.addText("above");
		a_c.addText("upperleft");
		a_c.addText("paethPredictor");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("dst");
		a_c.addText("up");
	}
	public void c257_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterPaeth"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{43, 43, 43});
	}

	public void c258_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("unfilter");
		a_c.addText("256");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("dst");
		a_c.addText("up");
	}
	public void c258_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 23);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 23);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterUp"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{23, 23, 23});
	}

	public void c259_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("baos");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("getCache");
		a_c.addText("read");
		a_c.addText("result");
		a_c.addText("available");
		a_c.addText("close");
	}
	public void c259_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 25);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.OwnFieldUse, new int[]{25, 32, 38});
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{28, 37, 44, 49});
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("byte"), dmDependency.Type.Returns, 29);
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{32, 38});
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{32, 39, 44});
		d(m_classes.get("org.apache.commons.imaging.icc.CachingInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{37, 44, 49});
	}

	public void c260_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("write");
		a_c.addText("os");
		a_c.addText("outputSet");
		a_c.addText("outputSummary");
		a_c.addText("outputItems");
		a_c.addText("bos");
		a_c.addText("updateOffsetsStep");
		a_c.addText("8");
		a_c.addText("itemLength");
		a_c.addText("remainder");
		a_c.addText("outputItem");
		a_c.addText("outputItems");
		a_c.addText("offset");
		a_c.addText("writeStep");
		a_c.addText("j");
		a_c.addText("length");
		a_c.addText("remainder");
		a_c.addText("outputItem");
		a_c.addText("bos");
		a_c.addText("outputItems");
	}
	public void c260_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), dmDependency.Type.ConstructorCall, new int[]{31, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{37, 67});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{37, 67});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.Argument, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.MethodCall, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{48, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.LocalVar, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, new int[]{54, 67, 85});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Argument, new int[]{54, 67});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.MethodCall, new int[]{60, 61, 75, 77});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, 81);
	}

	public void c261_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".psd");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("PSD_SECTION_HEADER");
		a_c.addText("0");
		a_c.addText("PSD_SECTION_COLOR_MODE");
		a_c.addText("1");
		a_c.addText("PSD_SECTION_IMAGE_RESOURCES");
		a_c.addText("2");
		a_c.addText("PSD_SECTION_LAYER_AND_MASK_DATA");
		a_c.addText("3");
		a_c.addText("PSD_SECTION_IMAGE_DATA");
		a_c.addText("4");
		a_c.addText("PSD_HEADER_LENGTH");
		a_c.addText("26");
		a_c.addText("COLOR_MODE_INDEXED");
		a_c.addText("2");
		a_c.addText("IMAGE_RESOURCE_ID_ICC_PROFILE");
		a_c.addText("1039");
		a_c.addText("IMAGE_RESOURCE_ID_XMP");
		a_c.addText("1060");
		a_c.addText("BLOCK_NAME_XMP");
		a_c.addText("XMP");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("PSD-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".psd");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("readHeader");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("readHeader");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("66");
		a_c.addText("80");
		a_c.addText("83");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Version");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Reserved");
		a_c.addText("6");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Channels");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Rows");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Columns");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Depth");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Mode");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("is");
		a_c.addText("version");
		a_c.addText("reserved");
		a_c.addText("channels");
		a_c.addText("rows");
		a_c.addText("columns");
		a_c.addText("depth");
		a_c.addText("mode");
		a_c.addText("readImageContents");
		a_c.addText("ColorModeDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ImageResourcesLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Compression");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("is");
		a_c.addText("header");
		a_c.addText("ColorModeDataLength");
		a_c.addText("ImageResourcesLength");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Compression");
		a_c.addText("readImageResourceBlocks");
		a_c.addText("bytes");
		a_c.addText("imageResourceIDs");
		a_c.addText("maxBlocksToRead");
		a_c.addText("keepImageResourceBlock");
		a_c.addText("imageResourceID");
		a_c.addText("ID");
		a_c.addText("imageResourceIDs");
		a_c.addText("readImageResourceBlocks");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("66");
		a_c.addText("73");
		a_c.addText("77");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ID");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("NameLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("NameData");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("NameDiscard");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Size");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Data");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("DataDiscard");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("id");
		a_c.addText("nameLength");
		a_c.addText("nameBytes");
		a_c.addText("dataSize");
		a_c.addText("data");
		a_c.addText("is");
		a_c.addText("imageResourceIDs");
		a_c.addText("maxBlocksToRead");
		a_c.addText("available");
		a_c.addText("result");
		a_c.addText("readImageResourceBlocks");
		a_c.addText("ImageResources");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("imageContents");
		a_c.addText("ImageResources");
		a_c.addText("ret");
		a_c.addText("resourceStream");
		a_c.addText("imageStream");
		a_c.addText("byteSource");
		a_c.addText("imageResourceIDs");
		a_c.addText("maxBlocksToRead");
		a_c.addText("getInputStream");
		a_c.addText("26");
		a_c.addText("ColorModeDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ImageResourcesLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Compression");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("getInputStream: Unknown Section: ");
		a_c.addText("colorModeDataLength");
		a_c.addText("imageResourcesLength");
		a_c.addText("layerAndMaskDataLength");
		a_c.addText("byteSource");
		a_c.addText("section");
		a_c.addText("is");
		a_c.addText("notFound");
		a_c.addText("getData");
		a_c.addText("Header");
		a_c.addText("26");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("26");
		a_c.addText("ColorModeDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ColorModeData");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ImageResourcesLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("ImageResources");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("LayerAndMaskData");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("Compression");
		a_c.addText("Not a Valid PSD File");
		a_c.addText("getInputStream: Unknown Section: ");
		a_c.addText("ColorModeDataLength");
		a_c.addText("ImageResourcesLength");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("section");
		a_c.addText("readImageContents");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("getICCProfileBytes");
		a_c.addText("10");
		a_c.addText("1039");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("blocks");
		a_c.addText("irb");
		a_c.addText("bytes");
		a_c.addText("getImageSize");
		a_c.addText("PSD: couldn\'t read header");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("bhi");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getChannelsPerMode");
		a_c.addText("mode");
		a_c.addText("getImageInfo");
		a_c.addText("PSD: Couldn\'t read blocks");
		a_c.addText("PSD: Couldn\'t read Header");
		a_c.addText("Photoshop");
		a_c.addText("image/x-photoshop");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("Psd");
		a_c.addText("Psd");
		a_c.addText("Photoshop");
		a_c.addText("image/x-photoshop");
		a_c.addText("72");
		a_c.addText("72");
		a_c.addText("compressionAlgorithm");
		a_c.addText("compressionAlgorithm");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageContents");
		a_c.addText("header");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("comments");
		a_c.addText("BitsPerPixel");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("formatDetails");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("dumpImageFile");
		a_c.addText("gif.dumpImageFile");
		a_c.addText("blocks.size(): ");
		a_c.addText("\t");
		a_c.addText(" (");
		a_c.addText(", \'");
		a_c.addText("\' (");
		a_c.addText("),  data: ");
		a_c.addText(" type: \'");
		a_c.addText("\' )");
		a_c.addText("block");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("fImageData");
		a_c.addText("imageContents");
		a_c.addText("blocks");
		a_c.addText("getBufferedImage");
		a_c.addText("PSD: Couldn\'t read blocks");
		a_c.addText("PSD: Couldn\'t read Header");
		a_c.addText("Unknown Mode: ");
		a_c.addText("Unknown Compression: ");
		a_c.addText("dataParser");
		a_c.addText("dataParser");
		a_c.addText("dataParser");
		a_c.addText("dataParser");
		a_c.addText("dataParser");
		a_c.addText("ColorModeData");
		a_c.addText("dataParser");
		a_c.addText("fDataReader");
		a_c.addText("fDataReader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageContents");
		a_c.addText("header");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("result");
		a_c.addText("dataParser");
		a_c.addText("fDataReader");
		a_c.addText("getXmpXml");
		a_c.addText("PSD: Couldn\'t read blocks");
		a_c.addText("PSD: Couldn\'t read Header");
		a_c.addText("10");
		a_c.addText("1060");
		a_c.addText("PSD contains more than one XMP block.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageContents");
		a_c.addText("header");
		a_c.addText("blocks");
		a_c.addText("xmpBlocks");
		a_c.addText("block");
		a_c.addText("<clinit>");
		a_c.addText(".psd");
	}
	public void c261_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 88);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{93, 474});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{93, 102, 116, 152, 179, 235, 253, 314, 374, 382, 400, 411, 440, 505, 553, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{93, 102, 116, 152, 179, 235, 253, 314, 374, 382, 400, 411, 440, 505, 553, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.Returns, new int[]{93, 102});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{93, 235, 253, 314, 374, 382, 400, 411, 440, 505, 553, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{99, 241, 261, 320, 380});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{102, 102, 102, 102, 253, 253, 253, 253, 253, 253, 253, 253, 311, 311, 311, 311, 311, 311, 311, 373, 373, 373, 373, 373, 373, 373, 373, 373, 373, 373, 373, 382, 382, 382, 382, 656, 656, 656, 656});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.LocalVar, new int[]{102, 152});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{102, 253, 253, 314, 374, 382, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{102, 116, 179});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{106, 108, 109, 110, 111, 112, 113, 114, 123, 125, 130, 132, 137, 139, 144, 188, 192, 195, 198, 203, 208, 214, 219, 246, 267, 270, 276, 280, 286, 290, 296, 300, 323, 326, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.ConstructorCall, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{116, 164, 235, 235, 253, 400, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Returns, new int[]{116, 374});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.ConstructorCall, 152);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), dmDependency.Type.Returns, new int[]{152, 179, 235});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), dmDependency.Type.ConstructorCall, 224);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), dmDependency.Type.LocalVar, new int[]{235, 253, 553, 553, 719, 719, 719});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.FieldUse, new int[]{246, 455, 494, 526, 566, 596, 634, 638, 646, 682});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.LocalVar, new int[]{253, 553});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Returns, 253);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{314, 374, 408, 452, 457, 563, 568, 634, 646, 679, 684, 712});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{314, 382});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceBlock"), dmDependency.Type.FieldUse, new int[]{396, 538, 538, 538, 538, 538, 719, 719});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("byte"), dmDependency.Type.MethodCall, 400);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 400);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.FieldUse, new int[]{411, 411, 460, 461, 466, 466, 490, 583, 584, 596, 634});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 411);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 411);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 440);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 491);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, new int[]{496, 499, 502});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 505);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, new int[]{505, 505, 505});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 505);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 505);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 505);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{515, 533, 538, 551});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 522);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.MethodCall, 525);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.MethodCall, 526);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{538, 719});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), dmDependency.Type.MethodCall, 547);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 553);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 553);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), dmDependency.Type.MethodCall, 592);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap"), dmDependency.Type.ConstructorCall, 598);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale"), dmDependency.Type.ConstructorCall, 602);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb"), dmDependency.Type.ConstructorCall, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk"), dmDependency.Type.ConstructorCall, 608);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab"), dmDependency.Type.ConstructorCall, 611);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed"), dmDependency.Type.ConstructorCall, 623);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), dmDependency.Type.ConstructorCall, 640);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.CompressedDataReader"), dmDependency.Type.ConstructorCall, 643);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), dmDependency.Type.MethodCall, 651);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.LocalVar, new int[]{658, 658, 658, 658, 658, 658, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), dmDependency.Type.LocalVar, new int[]{658, 658, 658});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 658);
	}

	public void c262_texts(dmClass a_c) {
		a_c.addText("getType");
		a_c.addText("getName");
		a_c.addText("toString");
	}

	public void c263_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c263_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("short"), dmDependency.Type.Argument, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, 35);
	}

	public void c265_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("exifDirectory");
	}
	public void c265_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, 27);
	}

	public void c266_texts(dmClass a_c) {
		a_c.addText("IHDR");
		a_c.addText("PLTE");
		a_c.addText("IDAT");
		a_c.addText("IEND");
		a_c.addText("tRNS");
		a_c.addText("cHRM");
		a_c.addText("gAMA");
		a_c.addText("iCCP");
		a_c.addText("sBIT");
		a_c.addText("sRGB");
		a_c.addText("tEXt");
		a_c.addText("zTXt");
		a_c.addText("iTXt");
		a_c.addText("bKGD");
		a_c.addText("hIST");
		a_c.addText("pHYs");
		a_c.addText("sCAL");
		a_c.addText("sPLT");
		a_c.addText("tIME");
		a_c.addText("array");
		a_c.addText("value");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/ChunkType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("chars");
		a_c.addText("<clinit>");
		a_c.addText("IHDR");
		a_c.addText("PLTE");
		a_c.addText("IDAT");
		a_c.addText("IEND");
		a_c.addText("tRNS");
		a_c.addText("cHRM");
		a_c.addText("gAMA");
		a_c.addText("6");
		a_c.addText("iCCP");
		a_c.addText("7");
		a_c.addText("sBIT");
		a_c.addText("8");
		a_c.addText("sRGB");
		a_c.addText("9");
		a_c.addText("tEXt");
		a_c.addText("10");
		a_c.addText("zTXt");
		a_c.addText("11");
		a_c.addText("iTXt");
		a_c.addText("12");
		a_c.addText("bKGD");
		a_c.addText("13");
		a_c.addText("hIST");
		a_c.addText("14");
		a_c.addText("pHYs");
		a_c.addText("15");
		a_c.addText("sCAL");
		a_c.addText("16");
		a_c.addText("sPLT");
		a_c.addText("17");
		a_c.addText("tIME");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
	}
	public void c266_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.Returns, new int[]{1, 28});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.OwnFieldUse, new int[]{28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28});
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("char"), dmDependency.Type.LocalVar, 94);
		d(m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.ConstructorCall, new int[]{31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 28});
	}

	public void c267_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_CFAREPEAT_PATTERN_DIM");
		a_c.addText("EXIF_TAG_CFAPATTERN_2");
		a_c.addText("EXIF_TAG_BATTERY_LEVEL");
		a_c.addText("EXIF_TAG_INTER_COLOR_PROFILE");
		a_c.addText("EXIF_TAG_INTERLACE");
		a_c.addText("EXIF_TAG_TIME_ZONE_OFFSET");
		a_c.addText("EXIF_TAG_SELF_TIMER_MODE");
		a_c.addText("EXIF_TAG_FLASH_ENERGY");
		a_c.addText("EXIF_TAG_SPATIAL_FREQUENCY_RESPONSE_1");
		a_c.addText("EXIF_TAG_NOISE_1");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_XRESOLUTION");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_YRESOLUTION");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_RESOLUTION_UNIT");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_VALUE_NONE");
		a_c.addText("1");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_VALUE_INCHES");
		a_c.addText("2");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_VALUE_CM");
		a_c.addText("3");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_VALUE_MM");
		a_c.addText("4");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_VALUE_UM");
		a_c.addText("5");
		a_c.addText("EXIF_TAG_IMAGE_NUMBER_EXIF_IFD");
		a_c.addText("EXIF_TAG_SECURITY_CLASSIFICATION_EXIF_IFD");
		a_c.addText("EXIF_TAG_IMAGE_HISTORY_EXIF_IFD");
		a_c.addText("EXIF_TAG_EXPOSURE_INDEX");
		a_c.addText("EXIF_TAG_TIFF_EPSTANDARD_ID_1");
		a_c.addText("EXIF_TAG_SENSING_METHOD");
		a_c.addText("SENSING_METHOD_VALUE_MONOCHROME_AREA");
		a_c.addText("1");
		a_c.addText("SENSING_METHOD_VALUE_ONE_CHIP_COLOR_AREA");
		a_c.addText("2");
		a_c.addText("SENSING_METHOD_VALUE_TWO_CHIP_COLOR_AREA");
		a_c.addText("3");
		a_c.addText("SENSING_METHOD_VALUE_THREE_CHIP_COLOR_AREA");
		a_c.addText("4");
		a_c.addText("SENSING_METHOD_VALUE_COLOR_SEQUENTIAL_AREA");
		a_c.addText("5");
		a_c.addText("SENSING_METHOD_VALUE_MONOCHROME_LINEAR");
		a_c.addText("6");
		a_c.addText("SENSING_METHOD_VALUE_TRILINEAR");
		a_c.addText("7");
		a_c.addText("SENSING_METHOD_VALUE_COLOR_SEQUENTIAL_LINEAR");
		a_c.addText("8");
		a_c.addText("ALL_TIFF_EP_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("CFARepeatPatternDim");
		a_c.addText("33421");
		a_c.addText("CFAPattern2");
		a_c.addText("33422");
		a_c.addText("BatteryLevel");
		a_c.addText("33423");
		a_c.addText("InterColorProfile");
		a_c.addText("34675");
		a_c.addText("Interlace");
		a_c.addText("34857");
		a_c.addText("TimeZoneOffset");
		a_c.addText("34858");
		a_c.addText("SelfTimerMode");
		a_c.addText("34859");
		a_c.addText("FlashEnergy");
		a_c.addText("37387");
		a_c.addText("SpatialFrequencyResponse");
		a_c.addText("37388");
		a_c.addText("Noise");
		a_c.addText("37389");
		a_c.addText("FocalPlaneXResolution");
		a_c.addText("37390");
		a_c.addText("FocalPlaneYResolution");
		a_c.addText("37391");
		a_c.addText("FocalPlaneResolutionUnit");
		a_c.addText("37392");
		a_c.addText("ImageNumber");
		a_c.addText("37393");
		a_c.addText("SecurityClassification");
		a_c.addText("37394");
		a_c.addText("ImageHistory");
		a_c.addText("37395");
		a_c.addText("ExposureIndex");
		a_c.addText("37397");
		a_c.addText("TIFF/EPStandardID");
		a_c.addText("37398");
		a_c.addText("SensingMethod");
		a_c.addText("37399");
		a_c.addText("19");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
	}
	public void c267_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 97, 101, 105, 109, 113, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{40, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, new int[]{44, 113});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{44, 113, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.ConstructorCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.OwnFieldUse, new int[]{48, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.ConstructorCall, new int[]{52, 72, 76});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.OwnFieldUse, new int[]{52, 72, 76, 129, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{56, 64, 88, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{56, 64, 88, 117, 129, 129, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.ConstructorCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.OwnFieldUse, new int[]{60, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, new int[]{68, 109});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{68, 109, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, new int[]{80, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{80, 84, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{97, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{101, 105});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{101, 105, 129, 129});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 129);
	}

	public void c268_texts(dmClass a_c) {
		a_c.addText("rangePaletteEntries");
		a_c.addText("singleValuePaletteEntries");
		a_c.addText("minFound");
		a_c.addText("maxFound");
		a_c.addText("xMin");
		a_c.addText("yMin");
		a_c.addText("xMax");
		a_c.addText("yMax");
		a_c.addText("sumFound");
		a_c.addText("nFound");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("Infinity");
		a_c.addText("-Infinity");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("valueBlack");
		a_c.addText("valueWhite");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("Infinity");
		a_c.addText("-Infinity");
		a_c.addText("Palette entries list must be non-null and non-empty");
		a_c.addText("entry");
		a_c.addText("paletteEntries");
		a_c.addText("comparator");
		a_c.addText("interpretPixel");
		a_c.addText("p");
		a_c.addText("entry");
		a_c.addText("p");
		a_c.addText("entry");
		a_c.addText("p");
		a_c.addText("entry");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("f");
		a_c.addText("getMinFound");
		a_c.addText("getMaxXY");
		a_c.addText("10");
		a_c.addText("getMaxFound");
		a_c.addText("getMinXY");
		a_c.addText("10");
		a_c.addText("getMeanFound");
		a_c.addText("mapValueToARGB");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("f");
		a_c.addText("lambda$new$0");
		a_c.addText("o1");
		a_c.addText("o2");
	}
	public void c268_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, new int[]{94, 133});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("java.awt.Color"), dmDependency.Type.FieldUse, new int[]{104, 104, 108, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), dmDependency.Type.ConstructorCall, new int[]{104, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange"), dmDependency.Type.LocalVar, new int[]{112, 112});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.Argument, new int[]{112, 303, 303});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.MethodCall, new int[]{147, 176, 177, 202, 203, 210, 211, 287, 288, 299, 300, 155, 155, 156, 156, 158, 158});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), dmDependency.Type.LocalVar, new int[]{163, 216, 216, 216, 303, 303});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 163);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 163);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 163);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{178, 204, 212});
	}

	public void c270_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c270_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("byte"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("byte"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 32);
	}

	public void c272_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("lookupTable");
		a_c.addText("<init>");
		a_c.addText("src_gamma: ");
		a_c.addText("dst_gamma: ");
		a_c.addText("256");
		a_c.addText("10");
		a_c.addText("256");
		a_c.addText("lookup_table[");
		a_c.addText("]: ");
		a_c.addText("i");
		a_c.addText("srcGamma");
		a_c.addText("dstGamma");
		a_c.addText("correctSample");
		a_c.addText("sample");
		a_c.addText("correctARGB");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("pixel");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("correctSample");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("sample");
		a_c.addText("srcGamma");
		a_c.addText("dstGamma");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/GammaCorrection;");
	}

	public void c273_texts(dmClass a_c) {
		a_c.addText("palette");
		a_c.addText("bitsPerSample");
		a_c.addText("<init>");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("palette");
		a_c.addText("getPaletteSize");
		a_c.addText("getBitsPerPixel");
		a_c.addText("writePalette");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("rgb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("i");
		a_c.addText("bos");
		a_c.addText("getImageData");
		a_c.addText("16777215");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("baos");
		a_c.addText("bitCache");
		a_c.addText("bitsInCache");
		a_c.addText("bytecount");
	}
	public void c273_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.OwnFieldUse, new int[]{32, 45, 55, 56, 85});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.MethodCall, new int[]{34, 36, 45, 55, 56, 85});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{62, 63, 64, 65});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("byte"), dmDependency.Type.Returns, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{71, 72, 82});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{88, 95, 106, 113, 118});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 118);
	}

	public void c277_texts(dmClass a_c) {
		a_c.addText("max");
		a_c.addText("scale");
		a_c.addText("bytesPerSample");
		a_c.addText("<init>");
		a_c.addText("PGM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("65535");
		a_c.addText("65535.0");
		a_c.addText("PGM maxVal ");
		a_c.addText(" is out of range [1;65535]");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("rawbits");
		a_c.addText("max");
		a_c.addText("hasAlpha");
		a_c.addText("getNumComponents");
		a_c.addText("getBitDepth");
		a_c.addText("getImageType");
		a_c.addText("getImageTypeDescription");
		a_c.addText("PGM: portable graymap file format");
		a_c.addText("getMIMEType");
		a_c.addText("image/x-portable-graymap");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("is");
		a_c.addText("sample");
		a_c.addText("alpha");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("wsr");
		a_c.addText("sample");
		a_c.addText("alpha");
	}
	public void c277_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{35, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 77);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{82, 93});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 82);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.Argument, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.MethodCall, 101);
	}

	public void c278_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("<init>");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("toString");
		a_c.addText("{L: ");
		a_c.addText(", a: ");
		a_c.addText(", b: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("that");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("-5.336");
		a_c.addText("5.433");
		a_c.addText("46.109");
		a_c.addText("78.962");
		a_c.addText("29.794");
		a_c.addText("84.569");
		a_c.addText("-72.518");
		a_c.addText("50.842");
		a_c.addText("26.87");
		a_c.addText("72.885");
		a_c.addText("-190.923");
	}
	public void c278_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), m_classes.get("long"), dmDependency.Type.LocalVar, 128);
		d(m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78});
		d(m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78});
	}

	public void c279_texts(dmClass a_c) {
		a_c.addText("bytesPerPixel");
		a_c.addText("<init>");
		a_c.addText("bytesPerPixel");
		a_c.addText("unfilter");
		a_c.addText("256");
		a_c.addText("prevIndex");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("dst");
		a_c.addText("up");
	}
	public void c279_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterSub"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{28, 28, 28});
	}

	public void c281_texts(dmClass a_c) {
		a_c.addText("less");
		a_c.addText("more");
		a_c.addText("mode");
		a_c.addText("limit");
		a_c.addText("<init>");
		a_c.addText("less");
		a_c.addText("more");
		a_c.addText("mode");
		a_c.addText("limit");
		a_c.addText("getColorGroup");
		a_c.addText("argb");
		a_c.addText("value");
	}
	public void c281_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.OwnFieldUse, new int[]{26, 27, 35, 37});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.OwnFieldUse, new int[]{28, 33});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Returns, 30);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, 33);
	}

	public void c282_texts(dmClass a_c) {
		a_c.addText("packed");
		a_c.addText("dispose");
		a_c.addText("transparency");
		a_c.addText("delay");
		a_c.addText("transparentColorIndex");
		a_c.addText("<init>");
		a_c.addText("blockCode");
		a_c.addText("packed");
		a_c.addText("dispose");
		a_c.addText("transparency");
		a_c.addText("delay");
		a_c.addText("transparentColorIndex");
	}
	public void c282_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.ConstructorCall, 29);
	}

	public void c283_texts(dmClass a_c) {
		a_c.addText("ZIG_ZAG");
		a_c.addText("<init>");
		a_c.addText("zigZagToBlock");
		a_c.addText("i");
		a_c.addText("zz");
		a_c.addText("block");
		a_c.addText("blockToZigZag");
		a_c.addText("i");
		a_c.addText("block");
		a_c.addText("zz");
		a_c.addText("<clinit>");
		a_c.addText("64");
		a_c.addText("10");
		a_c.addText("6");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("6");
		a_c.addText("27");
		a_c.addText("7");
		a_c.addText("28");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("7");
		a_c.addText("11");
		a_c.addText("13");
		a_c.addText("12");
		a_c.addText("16");
		a_c.addText("13");
		a_c.addText("26");
		a_c.addText("14");
		a_c.addText("29");
		a_c.addText("15");
		a_c.addText("42");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("8");
		a_c.addText("18");
		a_c.addText("12");
		a_c.addText("19");
		a_c.addText("17");
		a_c.addText("20");
		a_c.addText("25");
		a_c.addText("21");
		a_c.addText("30");
		a_c.addText("22");
		a_c.addText("41");
		a_c.addText("23");
		a_c.addText("43");
		a_c.addText("24");
		a_c.addText("9");
		a_c.addText("25");
		a_c.addText("11");
		a_c.addText("26");
		a_c.addText("18");
		a_c.addText("27");
		a_c.addText("24");
		a_c.addText("28");
		a_c.addText("31");
		a_c.addText("29");
		a_c.addText("40");
		a_c.addText("30");
		a_c.addText("44");
		a_c.addText("31");
		a_c.addText("53");
		a_c.addText("32");
		a_c.addText("10");
		a_c.addText("33");
		a_c.addText("19");
		a_c.addText("34");
		a_c.addText("23");
		a_c.addText("35");
		a_c.addText("32");
		a_c.addText("36");
		a_c.addText("39");
		a_c.addText("37");
		a_c.addText("45");
		a_c.addText("38");
		a_c.addText("52");
		a_c.addText("39");
		a_c.addText("54");
		a_c.addText("40");
		a_c.addText("20");
		a_c.addText("41");
		a_c.addText("22");
		a_c.addText("42");
		a_c.addText("33");
		a_c.addText("43");
		a_c.addText("38");
		a_c.addText("44");
		a_c.addText("46");
		a_c.addText("45");
		a_c.addText("51");
		a_c.addText("46");
		a_c.addText("55");
		a_c.addText("47");
		a_c.addText("60");
		a_c.addText("48");
		a_c.addText("21");
		a_c.addText("49");
		a_c.addText("34");
		a_c.addText("50");
		a_c.addText("37");
		a_c.addText("51");
		a_c.addText("47");
		a_c.addText("52");
		a_c.addText("50");
		a_c.addText("53");
		a_c.addText("56");
		a_c.addText("54");
		a_c.addText("59");
		a_c.addText("55");
		a_c.addText("61");
		a_c.addText("56");
		a_c.addText("35");
		a_c.addText("57");
		a_c.addText("36");
		a_c.addText("58");
		a_c.addText("48");
		a_c.addText("59");
		a_c.addText("49");
		a_c.addText("60");
		a_c.addText("57");
		a_c.addText("61");
		a_c.addText("58");
		a_c.addText("62");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("63");
	}

	public void c284_texts(dmClass a_c) {
		a_c.addText("TIFF_TAG_BAD_FAX_LINES");
		a_c.addText("TIFF_TAG_CLEAN_FAX_DATA");
		a_c.addText("CLEAN_FAX_DATA_VALUE_CLEAN");
		a_c.addText("0");
		a_c.addText("CLEAN_FAX_DATA_VALUE_REGENERATED");
		a_c.addText("1");
		a_c.addText("CLEAN_FAX_DATA_VALUE_UNCLEAN");
		a_c.addText("2");
		a_c.addText("TIFF_TAG_CONSECUTIVE_BAD_FAX_LINES");
		a_c.addText("TIFF_TAG_GLOBAL_PARAMETERS_IFD");
		a_c.addText("TIFF_TAG_PROFILE_TYPE");
		a_c.addText("PROFILE_TYPE_VALUE_UNSPECIFIED");
		a_c.addText("0");
		a_c.addText("PROFILE_TYPE_VALUE_GROUP_3_FAX");
		a_c.addText("1");
		a_c.addText("TIFF_TAG_FAX_PROFILE");
		a_c.addText("FAX_PROFILE_VALUE_UNKNOWN");
		a_c.addText("0");
		a_c.addText("FAX_PROFILE_VALUE_MINIMAL_B_AND_W_LOSSLESS_S");
		a_c.addText("1");
		a_c.addText("FAX_PROFILE_VALUE_EXTENDED_B_AND_W_LOSSLESS_F");
		a_c.addText("2");
		a_c.addText("FAX_PROFILE_VALUE_LOSSLESS_JBIG_B_AND_W_J");
		a_c.addText("3");
		a_c.addText("FAX_PROFILE_VALUE_LOSSY_COLOR_AND_GRAYSCALE_C");
		a_c.addText("4");
		a_c.addText("FAX_PROFILE_VALUE_LOSSLESS_COLOR_AND_GRAYSCALE_L");
		a_c.addText("5");
		a_c.addText("FAX_PROFILE_VALUE_MIXED_RASTER_CONTENT_M");
		a_c.addText("6");
		a_c.addText("TIFF_TAG_CODING_METHODS");
		a_c.addText("CODING_METHODS_VALUE_T4_1D");
		a_c.addText("2");
		a_c.addText("CODING_METHODS_VALUE_T4_2D");
		a_c.addText("4");
		a_c.addText("CODING_METHODS_VALUE_T6");
		a_c.addText("8");
		a_c.addText("CODING_METHODS_VALUE_T82_T85");
		a_c.addText("16");
		a_c.addText("CODING_METHODS_VALUE_T81");
		a_c.addText("32");
		a_c.addText("CODING_METHODS_VALUE_T82_T43");
		a_c.addText("64");
		a_c.addText("TIFF_TAG_VERSION_YEAR");
		a_c.addText("TIFF_TAG_MODE_NUMBER");
		a_c.addText("TIFF_TAG_DECODE");
		a_c.addText("TIFF_TAG_DEFAULT_IMAGE_COLOR");
		a_c.addText("TIFF_TAG_STRIP_ROW_COUNTS");
		a_c.addText("TIFF_TAG_IMAGE_LAYER");
		a_c.addText("ALL_RFC_2301_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("BadFaxLines");
		a_c.addText("326");
		a_c.addText("CleanFaxData");
		a_c.addText("327");
		a_c.addText("ConsecutiveBadFaxLines");
		a_c.addText("328");
		a_c.addText("GlobalParametersIFD");
		a_c.addText("400");
		a_c.addText("ProfileType");
		a_c.addText("401");
		a_c.addText("FaxProfile");
		a_c.addText("402");
		a_c.addText("CodingMethods");
		a_c.addText("403");
		a_c.addText("VersionYear");
		a_c.addText("404");
		a_c.addText("ModeNumber");
		a_c.addText("405");
		a_c.addText("Decode");
		a_c.addText("433");
		a_c.addText("DefaultImageColor");
		a_c.addText("434");
		a_c.addText("StripRowCounts");
		a_c.addText("559");
		a_c.addText("ImageLayer");
		a_c.addText("34732");
		a_c.addText("13");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
	}
	public void c284_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{45, 49, 56, 60, 64, 70, 81, 91, 95, 99, 103, 107, 111});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.ConstructorCall, new int[]{45, 56, 111});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.OwnFieldUse, new int[]{45, 56, 111, 115, 115, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, 49);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{49, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.ConstructorCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.OwnFieldUse, new int[]{60, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{64, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{64, 81, 115, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, new int[]{70, 95});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.OwnFieldUse, new int[]{70, 95, 115, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{91, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, 99);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{99, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{103, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.ConstructorCall, 107);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.OwnFieldUse, new int[]{107, 115});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 115);
	}

	public void c285_texts(dmClass a_c) {
		a_c.addText("buffer");
		a_c.addText("bytesWritten");
		a_c.addText("cache");
		a_c.addText("cacheMask");
		a_c.addText("<init>");
		a_c.addText("128");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("<init>");
		a_c.addText("128");
		a_c.addText("8");
		a_c.addText("size");
		a_c.addText("size");
		a_c.addText("toByteArray");
		a_c.addText("8");
		a_c.addText("out");
		a_c.addText("close");
		a_c.addText("flush");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("write");
		a_c.addText("b");
		a_c.addText("writeBit");
		a_c.addText("bit");
		a_c.addText("getBitsAvailableInCurrentByte");
		a_c.addText("mask");
		a_c.addText("count");
		a_c.addText("writeByte");
		a_c.addText("8");
		a_c.addText("bigger");
		a_c.addText("b");
	}
	public void c285_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.ConstructorCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{32, 36, 45, 46, 49, 92, 93, 94, 95, 97});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.Returns, 40);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{50, 98});
	}

	public void c287_texts(dmClass a_c) {
		a_c.addText("value");
		a_c.addText("<init>");
		a_c.addText("value");
		a_c.addText("clone");
		a_c.addText("equals");
		a_c.addText("obj");
		a_c.addText("other");
		a_c.addText("equals");
		a_c.addText("bytes");
		a_c.addText("equals");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("hashCode");
		a_c.addText("get");
		a_c.addText("i");
		a_c.addText("size");
		a_c.addText("toByteArray");
		a_c.addText("writeTo");
		a_c.addText("element");
		a_c.addText("os");
		a_c.addText("clone");
	}
	public void c287_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 44, 48});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{27, 77});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{27, 44, 48, 52, 56, 65, 69, 73, 77, 81});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Returns, 28);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.LocalVar, 44);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{65, 73});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 77);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 77);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, 82);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), m_classes.get("byte"), dmDependency.Type.LocalVar, 84);
	}

	public void c288_texts(dmClass a_c) {
		a_c.addText("iccBytes");
		a_c.addText("curMarker");
		a_c.addText("numMarkers");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("Not a Valid App2 Segment: missing ICC Profile label");
		a_c.addText("curMarker");
		a_c.addText("Not a valid App2 Marker");
		a_c.addText("numMarkers");
		a_c.addText("Not a valid App2 Marker");
		a_c.addText("App2 Data");
		a_c.addText("Invalid App2 Segment: insufficient data");
		a_c.addText("is");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is2");
		a_c.addText("equals");
		a_c.addText("other");
		a_c.addText("obj");
		a_c.addText("hashCode");
		a_c.addText("compareTo");
		a_c.addText("other");
		a_c.addText("getIccBytes");
		a_c.addText("compareTo");
	}
	public void c288_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{1, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, new int[]{38, 47});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.ConstructorCall, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{45, 49, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{45, 49, 52, 53, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{58, 63, 90});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.LocalVar, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.Argument, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("byte"), dmDependency.Type.Returns, 83);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), m_classes.get("byte"), dmDependency.Type.MethodCall, 90);
	}

	public void c289_texts(dmClass a_c) {
		a_c.addText("bytesPerPixel");
		a_c.addText("<init>");
		a_c.addText("bytesPerPixel");
		a_c.addText("unfilter");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("256");
		a_c.addText("raw");
		a_c.addText("prevIndex");
		a_c.addText("prior");
		a_c.addText("average");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("dst");
		a_c.addText("up");
	}
	public void c289_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{28, 28, 28});
	}

	public void c290_texts(dmClass a_c) {
		a_c.addText("TYPES");
		a_c.addText("from");
		a_c.addText("to");
		a_c.addText("description");
		a_c.addText("getDescription");
		a_c.addText("Unknown");
		a_c.addText("type");
		a_c.addText("id");
		a_c.addText("<init>");
		a_c.addText("id");
		a_c.addText("description");
		a_c.addText("<init>");
		a_c.addText("id");
		a_c.addText("id2");
		a_c.addText("description");
		a_c.addText("<clinit>");
		a_c.addText("87");
		a_c.addText("1000");
		a_c.addText("Number of channels, rows, columns, depth, and mode.");
		a_c.addText("1001");
		a_c.addText("Optional. Macintosh print manager print info record");
		a_c.addText("1003");
		a_c.addText("Indexed color table.");
		a_c.addText("1005");
		a_c.addText("ResolutionInfo structure");
		a_c.addText("1006");
		a_c.addText("Names of the alpha channels as a series of Pascal strings.");
		a_c.addText("1007");
		a_c.addText("DisplayInfo structure");
		a_c.addText("6");
		a_c.addText("1008");
		a_c.addText("Optional. The caption as a Pascal string.");
		a_c.addText("7");
		a_c.addText("1009");
		a_c.addText("Border information");
		a_c.addText("8");
		a_c.addText("1010");
		a_c.addText("Background color");
		a_c.addText("9");
		a_c.addText("1011");
		a_c.addText("Print flags (labels, crop marks, color bars, registration marks, negative, flip, interpolate, caption)");
		a_c.addText("10");
		a_c.addText("1012");
		a_c.addText("Grayscale and multichannel halftoning information.");
		a_c.addText("11");
		a_c.addText("1013");
		a_c.addText("Color halftoning information");
		a_c.addText("12");
		a_c.addText("1014");
		a_c.addText("Duotone halftoning information");
		a_c.addText("13");
		a_c.addText("1015");
		a_c.addText("Grayscale and multichannel transfer function");
		a_c.addText("14");
		a_c.addText("1016");
		a_c.addText("Color transfer functions");
		a_c.addText("15");
		a_c.addText("1017");
		a_c.addText("Duotone transfer functions");
		a_c.addText("16");
		a_c.addText("1018");
		a_c.addText("Duotone image information");
		a_c.addText("17");
		a_c.addText("1019");
		a_c.addText("Effective black and white values for the dot range.");
		a_c.addText("18");
		a_c.addText("1020");
		a_c.addText("Obsolete");
		a_c.addText("19");
		a_c.addText("1021");
		a_c.addText("EPS options");
		a_c.addText("20");
		a_c.addText("1022");
		a_c.addText("Quick Mask information");
		a_c.addText("21");
		a_c.addText("1023");
		a_c.addText("Obsolete");
		a_c.addText("22");
		a_c.addText("1024");
		a_c.addText("Layer state information");
		a_c.addText("23");
		a_c.addText("1025");
		a_c.addText("Working path (not saved)");
		a_c.addText("24");
		a_c.addText("1026");
		a_c.addText("Layers group information");
		a_c.addText("25");
		a_c.addText("1027");
		a_c.addText("Obsolete");
		a_c.addText("26");
		a_c.addText("1028");
		a_c.addText("IPTC-NAA record");
		a_c.addText("27");
		a_c.addText("1029");
		a_c.addText("Image mode for raw format files");
		a_c.addText("28");
		a_c.addText("1030");
		a_c.addText("JPEG quality");
		a_c.addText("29");
		a_c.addText("1032");
		a_c.addText("Grid and guides information");
		a_c.addText("30");
		a_c.addText("1033");
		a_c.addText("Thumbnail resource");
		a_c.addText("31");
		a_c.addText("1034");
		a_c.addText("Copyright flag");
		a_c.addText("32");
		a_c.addText("1035");
		a_c.addText("URL");
		a_c.addText("33");
		a_c.addText("1036");
		a_c.addText("Thumbnail resource");
		a_c.addText("34");
		a_c.addText("1037");
		a_c.addText("Global lighting angle for effects layer");
		a_c.addText("35");
		a_c.addText("1038");
		a_c.addText("Color samplers resource");
		a_c.addText("36");
		a_c.addText("1039");
		a_c.addText("ICC Profile");
		a_c.addText("37");
		a_c.addText("1040");
		a_c.addText("Watermark");
		a_c.addText("38");
		a_c.addText("1041");
		a_c.addText("ICC Untagged. Disables any assumed profile handling when opening the file");
		a_c.addText("39");
		a_c.addText("1042");
		a_c.addText("Effects visible. global flag to show/hide all the effects layer. Only present when they are hidden.");
		a_c.addText("40");
		a_c.addText("1043");
		a_c.addText("Spot Halftone");
		a_c.addText("41");
		a_c.addText("1044");
		a_c.addText("Document specific IDs");
		a_c.addText("42");
		a_c.addText("1045");
		a_c.addText("Unicode Alpha Names");
		a_c.addText("43");
		a_c.addText("1046");
		a_c.addText("Indexed Color Table Count. Number of colors in table that are actually defined");
		a_c.addText("44");
		a_c.addText("1047");
		a_c.addText("Transparency Index. Index of transparent color, if any");
		a_c.addText("45");
		a_c.addText("1049");
		a_c.addText("Global Altitude");
		a_c.addText("46");
		a_c.addText("1050");
		a_c.addText("Slices");
		a_c.addText("47");
		a_c.addText("1051");
		a_c.addText("Workflow URL");
		a_c.addText("48");
		a_c.addText("1052");
		a_c.addText("Jump To XPEP");
		a_c.addText("49");
		a_c.addText("1053");
		a_c.addText("Alpha Identifiers");
		a_c.addText("50");
		a_c.addText("1054");
		a_c.addText("URL List");
		a_c.addText("51");
		a_c.addText("1057");
		a_c.addText("Version Info");
		a_c.addText("52");
		a_c.addText("1058");
		a_c.addText("EXIF data 1");
		a_c.addText("53");
		a_c.addText("1059");
		a_c.addText("EXIF data 3");
		a_c.addText("54");
		a_c.addText("1060");
		a_c.addText("XMP metadata");
		a_c.addText("55");
		a_c.addText("1061");
		a_c.addText("Caption digest");
		a_c.addText("56");
		a_c.addText("1062");
		a_c.addText("Print scale");
		a_c.addText("57");
		a_c.addText("1064");
		a_c.addText("Pixel Aspect Ratio");
		a_c.addText("58");
		a_c.addText("1065");
		a_c.addText("Layer Comps");
		a_c.addText("59");
		a_c.addText("1066");
		a_c.addText("Alternate Duotone Colors");
		a_c.addText("60");
		a_c.addText("1067");
		a_c.addText("Alternate Spot Colors");
		a_c.addText("61");
		a_c.addText("1069");
		a_c.addText("Layer Selection ID(s)");
		a_c.addText("62");
		a_c.addText("1070");
		a_c.addText("HDR Toning information");
		a_c.addText("63");
		a_c.addText("1071");
		a_c.addText("Print info");
		a_c.addText("64");
		a_c.addText("1072");
		a_c.addText("Layer Group(s) Enabled ID");
		a_c.addText("65");
		a_c.addText("1073");
		a_c.addText("Color samplers resource");
		a_c.addText("66");
		a_c.addText("1074");
		a_c.addText("Measurement Scale");
		a_c.addText("67");
		a_c.addText("1075");
		a_c.addText("Timeline Information");
		a_c.addText("68");
		a_c.addText("1076");
		a_c.addText("Sheet Disclosure");
		a_c.addText("69");
		a_c.addText("1077");
		a_c.addText("DisplayInfo structure to support floating point colors");
		a_c.addText("70");
		a_c.addText("1078");
		a_c.addText("Onion Skins");
		a_c.addText("71");
		a_c.addText("1080");
		a_c.addText("Count Information. Information about the count in the document.");
		a_c.addText("72");
		a_c.addText("1082");
		a_c.addText("Print Information. Information about the current print settings in the document. The color management options.");
		a_c.addText("73");
		a_c.addText("1083");
		a_c.addText("Print Style. Information about the current print style in the document. The printing marks, labels, ornaments, etc.");
		a_c.addText("74");
		a_c.addText("1084");
		a_c.addText("Macintosh NSPrintInfo. Variable OS specific info for Macintosh. NSPrintInfo.");
		a_c.addText("75");
		a_c.addText("1085");
		a_c.addText("Windows DEVMODE. Variable OS specific info for Windows. DEVMODE.");
		a_c.addText("76");
		a_c.addText("1086");
		a_c.addText("Auto Save File Path");
		a_c.addText("77");
		a_c.addText("1087");
		a_c.addText("Auto Save Format");
		a_c.addText("78");
		a_c.addText("1088");
		a_c.addText("Path Selection State. Information about the current path selection state");
		a_c.addText("79");
		a_c.addText("2000");
		a_c.addText("2998");
		a_c.addText("Path Information (saved paths).");
		a_c.addText("80");
		a_c.addText("2999");
		a_c.addText("Name of clipping path");
		a_c.addText("81");
		a_c.addText("3000");
		a_c.addText("Origin Path Info");
		a_c.addText("82");
		a_c.addText("4000");
		a_c.addText("4999");
		a_c.addText("Plug-In resource(s). Resources added by a plug-in");
		a_c.addText("83");
		a_c.addText("7000");
		a_c.addText("Image Ready variables. XML representation of variables definition");
		a_c.addText("84");
		a_c.addText("7001");
		a_c.addText("Image Ready data sets");
		a_c.addText("85");
		a_c.addText("8000");
		a_c.addText("Lightroom workflow, if present the document is in the middle of a Lightroom workflow");
		a_c.addText("86");
		a_c.addText("10000");
		a_c.addText("Print flags information (center crop marks, bleed width value, bleed width scale)");
	}
	public void c290_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), dmDependency.Type.OwnFieldUse, new int[]{117, 26});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), dmDependency.Type.LocalVar, 122);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), m_classes.get("org.apache.commons.imaging.formats.psd.ImageResourceType"), dmDependency.Type.ConstructorCall, new int[]{26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26});
	}

	public void c291_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_PIXEL_FORMAT");
		a_c.addText("PIXEL_FORMAT_VALUE_BLACK_AND_WHITE");
		a_c.addText("PIXEL_FORMAT_VALUE_8_BIT_GRAY");
		a_c.addText("PIXEL_FORMAT_VALUE_16_BIT_BGR555");
		a_c.addText("PIXEL_FORMAT_VALUE_16_BIT_BGR565");
		a_c.addText("PIXEL_FORMAT_VALUE_16_BIT_GRAY");
		a_c.addText("PIXEL_FORMAT_VALUE_24_BIT_BGR");
		a_c.addText("PIXEL_FORMAT_VALUE_24_BIT_RGB");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_BGR");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_BGRA");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_PBGRA");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_GRAY_FLOAT");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_RGB_FIXED_POINT");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_BGR101010");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_RGB");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_RGBA");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_PRGBA");
		a_c.addText("PIXEL_FORMAT_VALUE_96_BIT_RGB_FIXED_POINT");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_RGBA_FLOAT");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_PRGBA_FLOAT");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_RGB_FLOAT");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_CMYK");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_RGBA_FIXED_POINT");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_RGBA_FIXED_POINT");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_CMYK");
		a_c.addText("PIXEL_FORMAT_VALUE_24_BIT_3_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_4_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_40_BIT_5_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_6_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_56_BIT_7_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_8_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_3_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_4_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_80_BIT_5_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_96_BIT_6_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_112_BIT_7_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_8_CHANNELS");
		a_c.addText("PIXEL_FORMAT_VALUE_40_BIT_CMYK_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_80_BIT_CMYK_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_3_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_40_BIT_4_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_5_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_56_BIT_6_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_7_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_72_BIT_8_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_3_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_80_BIT_4_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_96_BIT_5_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_112_BIT_6_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_128_BIT_7_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_144_BIT_8_CHANNELS_ALPHA");
		a_c.addText("PIXEL_FORMAT_VALUE_64_BIT_RGBA_HALF");
		a_c.addText("PIXEL_FORMAT_VALUE_48_BIT_RGB_HALF");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_RGBE");
		a_c.addText("PIXEL_FORMAT_VALUE_16_BIT_GRAY_HALF");
		a_c.addText("PIXEL_FORMAT_VALUE_32_BIT_GRAY_FIXED_POINT");
		a_c.addText("EXIF_TAG_TRANSFOMATION");
		a_c.addText("TRANSFOMATION_VALUE_HORIZONTAL_NORMAL");
		a_c.addText("0");
		a_c.addText("TRANSFOMATION_VALUE_MIRROR_VERTICAL");
		a_c.addText("1");
		a_c.addText("TRANSFOMATION_VALUE_MIRROR_HORIZONTAL");
		a_c.addText("2");
		a_c.addText("TRANSFOMATION_VALUE_ROTATE_180");
		a_c.addText("3");
		a_c.addText("TRANSFOMATION_VALUE_ROTATE_90_CW");
		a_c.addText("4");
		a_c.addText("TRANSFOMATION_VALUE_MIRROR_HORIZONTAL_AND_ROTATE_90_CW");
		a_c.addText("5");
		a_c.addText("TRANSFOMATION_VALUE_MIRROR_HORIZONTAL_AND_ROTATE_270_CW");
		a_c.addText("6");
		a_c.addText("TRANSFOMATION_VALUE_ROTATE_270_CW");
		a_c.addText("7");
		a_c.addText("EXIF_TAG_UNCOMPRESSED");
		a_c.addText("UNCOMPRESSED_VALUE_NO");
		a_c.addText("0");
		a_c.addText("UNCOMPRESSED_VALUE_YES");
		a_c.addText("1");
		a_c.addText("EXIF_TAG_IMAGE_TYPE");
		a_c.addText("EXIF_TAG_IMAGE_WIDTH");
		a_c.addText("EXIF_TAG_IMAGE_HEIGHT");
		a_c.addText("EXIF_TAG_WIDTH_RESOLUTION");
		a_c.addText("EXIF_TAG_HEIGHT_RESOLUTION");
		a_c.addText("EXIF_TAG_IMAGE_OFFSET");
		a_c.addText("EXIF_TAG_IMAGE_BYTE_COUNT");
		a_c.addText("EXIF_TAG_ALPHA_OFFSET");
		a_c.addText("EXIF_TAG_ALPHA_BYTE_COUNT");
		a_c.addText("EXIF_TAG_IMAGE_DATA_DISCARD");
		a_c.addText("IMAGE_DATA_DISCARD_VALUE_FULL_RESOLUTION");
		a_c.addText("0");
		a_c.addText("IMAGE_DATA_DISCARD_VALUE_FLEXBITS_DISCARDED");
		a_c.addText("1");
		a_c.addText("IMAGE_DATA_DISCARD_VALUE_HIGH_PASS_FREQUENCY_DATA_DISCARDED");
		a_c.addText("2");
		a_c.addText("IMAGE_DATA_DISCARD_VALUE_HIGHPASS_AND_LOW_PASS_FREQUENCY_DATA_DISCARDED");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_ALPHA_DATA_DISCARD");
		a_c.addText("ALPHA_DATA_DISCARD_VALUE_FULL_RESOLUTION");
		a_c.addText("0");
		a_c.addText("ALPHA_DATA_DISCARD_VALUE_FLEXBITS_DISCARDED");
		a_c.addText("1");
		a_c.addText("ALPHA_DATA_DISCARD_VALUE_HIGH_PASS_FREQUENCY_DATA_DISCARDED");
		a_c.addText("2");
		a_c.addText("ALPHA_DATA_DISCARD_VALUE_HIGHPASS_AND_LOW_PASS_FREQUENCY_DATA_DISCARDED");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_PADDING");
		a_c.addText("ALL_MICROSOFT_HD_PHOTO_TAGS");
		a_c.addText("createMicrosoftHdPhotoGuidEndingWith");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("36");
		a_c.addText("-61");
		a_c.addText("-35");
		a_c.addText("111");
		a_c.addText("78");
		a_c.addText("6");
		a_c.addText("-2");
		a_c.addText("7");
		a_c.addText("75");
		a_c.addText("8");
		a_c.addText("-79");
		a_c.addText("9");
		a_c.addText("-123");
		a_c.addText("10");
		a_c.addText("61");
		a_c.addText("11");
		a_c.addText("119");
		a_c.addText("12");
		a_c.addText("118");
		a_c.addText("13");
		a_c.addText("-115");
		a_c.addText("14");
		a_c.addText("-55");
		a_c.addText("15");
		a_c.addText("end");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("PixelFormat");
		a_c.addText("48129");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("Transfomation");
		a_c.addText("48130");
		a_c.addText("Uncompressed");
		a_c.addText("48131");
		a_c.addText("ImageType");
		a_c.addText("48132");
		a_c.addText("ImageWidth");
		a_c.addText("48256");
		a_c.addText("ImageHeight");
		a_c.addText("48257");
		a_c.addText("WidthResolution");
		a_c.addText("48258");
		a_c.addText("HeightResolution");
		a_c.addText("48259");
		a_c.addText("ImageOffset");
		a_c.addText("48320");
		a_c.addText("ImageByteCount");
		a_c.addText("48321");
		a_c.addText("AlphaOffset");
		a_c.addText("48322");
		a_c.addText("AlphaByteCount");
		a_c.addText("48323");
		a_c.addText("ImageDataDiscard");
		a_c.addText("48324");
		a_c.addText("AlphaDataDiscard");
		a_c.addText("48325");
		a_c.addText("Padding");
		a_c.addText("59932");
		a_c.addText("15");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
	}
	public void c291_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Returns, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.ConstructorCall, 250);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{41, 155, 167, 173, 177, 181, 185, 189, 194, 198, 203, 207, 211, 219, 227});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{41, 231});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.OwnFieldUse, new int[]{45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{155, 167, 173, 177, 181, 194, 198, 203, 207});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{155, 167, 173, 177, 181, 194, 198, 203, 207, 231, 231, 231, 231, 231, 231, 231, 231, 231});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.ConstructorCall, new int[]{185, 189});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.OwnFieldUse, new int[]{185, 189, 231, 231});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, new int[]{211, 219});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.OwnFieldUse, new int[]{211, 219, 231, 231});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.ConstructorCall, 227);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.OwnFieldUse, new int[]{227, 231});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 231);
	}

	public void c292_texts(dmClass a_c) {
		a_c.addText("header");
		a_c.addText("directories");
		a_c.addText("tiffFields");
		a_c.addText("<init>");
		a_c.addText("tiffHeader");
		a_c.addText("directories");
		a_c.addText("tiffFields");
		a_c.addText("getElements");
		a_c.addText("oversizeValue");
		a_c.addText("field");
		a_c.addText("fields");
		a_c.addText("directory");
		a_c.addText("result");
		a_c.addText("findField");
		a_c.addText("field");
		a_c.addText("directory");
		a_c.addText("tag");
		a_c.addText("dissect");
		a_c.addText("\tgap: ");
		a_c.addText("\toverlap");
		a_c.addText("element, start: ");
		a_c.addText(", length: ");
		a_c.addText(", end: ");
		a_c.addText(": ");
		a_c.addText("end: ");
		a_c.addText("verbosity");
		a_c.addText("element");
		a_c.addText("elements");
		a_c.addText("lastEnd");
	}
	public void c292_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), dmDependency.Type.OwnFieldUse, new int[]{33, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{36, 62, 73});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Returns, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.FieldUse, 46);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{54, 55, 57, 58, 67});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.LocalVar, new int[]{62, 62, 103, 103});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{62, 62, 73});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.LocalVar, new int[]{62, 73});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Returns, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.FieldUse, new int[]{79, 83, 84, 86, 90, 90, 90, 90, 99, 99});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{84, 87, 90, 96, 101, 102});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.MethodCall, new int[]{93, 94});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffContents"), m_classes.get("long"), dmDependency.Type.LocalVar, 103);
	}

	public void c293_texts(dmClass a_c) {
		a_c.addText("imageDataOffsets");
		a_c.addText("imageDataOffsetsField");
		a_c.addText("outputItems");
		a_c.addText("<init>");
		a_c.addText("TIFF image data");
		a_c.addText("item");
		a_c.addText("i");
		a_c.addText("imageData");
		a_c.addText("imageDataOffsets");
		a_c.addText("imageDataOffsetsField");
	}
	public void c293_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.OwnFieldUse, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.OwnFieldUse, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.MethodCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, 39);
	}

	public void c294_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("<init>");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("toString");
		a_c.addText("{L: ");
		a_c.addText(", a: ");
		a_c.addText(", b: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("that");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("53.0");
		a_c.addText("80.0");
		a_c.addText("67.0");
		a_c.addText("88.0");
		a_c.addText("-86.0");
		a_c.addText("83.0");
		a_c.addText("32.0");
		a_c.addText("79.0");
		a_c.addText("-108.0");
	}
	public void c294_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.LocalVar, 116);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), m_classes.get("long"), dmDependency.Type.LocalVar, 129);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.ConstructorCall, new int[]{39, 49, 59, 69, 79});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.OwnFieldUse, new int[]{39, 49, 59, 69, 79});
	}

	public void c295_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("getComment");
		a_c.addText("getDescription");
		a_c.addText("UTF-8");
		a_c.addText("COM (");
		a_c.addText(")");
		a_c.addText("commentString");
	}
	public void c295_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.ConstructorCall, new int[]{25, 29});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), m_classes.get("byte"), dmDependency.Type.Returns, 30);
	}

	public void c296_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c296_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("short"), dmDependency.Type.Returns, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), m_classes.get("short"), dmDependency.Type.Argument, 31);
	}

	public void c299_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c299_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("byte"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("byte"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 32);
	}

	public void c300_texts(dmClass a_c) {
		a_c.addText("TIFF_TAG_COLOR_RESPONSE_UNIT");
		a_c.addText("COLOR_RESPONSE_UNIT_VALUE_0_1");
		a_c.addText("1");
		a_c.addText("COLOR_RESPONSE_UNIT_VALUE_0_01");
		a_c.addText("2");
		a_c.addText("COLOR_RESPONSE_UNIT_VALUE_0_001");
		a_c.addText("3");
		a_c.addText("COLOR_RESPONSE_UNIT_VALUE_0_0001");
		a_c.addText("4");
		a_c.addText("COLOR_RESPONSE_UNIT_VALUE_0_00001");
		a_c.addText("5");
		a_c.addText("ALL_TIFF_4_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("ColorResponseUnit");
		a_c.addText("300");
	}
	public void c300_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{33, 42});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.Tiff4TagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 42);
	}

	public void c302_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("byteOrder");
		a_c.addText("cache");
		a_c.addText("cacheBitsRemaining");
		a_c.addText("bytesRead");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("byteOrder");
		a_c.addText("read");
		a_c.addText("BitInputStream: incomplete bit read");
		a_c.addText("readBits");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("BitInputStream: can\'t read bit fields across bytes");
		a_c.addText("7");
		a_c.addText("15");
		a_c.addText("31");
		a_c.addText("63");
		a_c.addText("127");
		a_c.addText("BitInputStream: incomplete bit read");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("2");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("3");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("4");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("2");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("3");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("4");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("24");
		a_c.addText("BitInputStream: unknown error");
		a_c.addText("bits");
		a_c.addText("count");
		a_c.addText("flushCache");
		a_c.addText("getBytesRead");
	}
	public void c302_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{36, 45, 52, 89, 100, 100, 105, 105, 105, 110, 110, 110, 110, 116, 116, 121, 121, 121, 126, 126, 126, 126});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{37, 97});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{38, 45});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{43, 57, 84, 130});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{45, 52, 89, 100, 100, 105, 105, 105, 110, 110, 110, 111, 116, 116, 121, 121, 121, 126, 126, 126, 126});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{54, 54, 88, 88, 99, 99, 104, 104, 109, 109, 115, 115, 120, 120, 125, 125, 138});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), m_classes.get("long"), dmDependency.Type.Returns, 135);
	}

	public void c303_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("COMPONENTS");
		a_c.addText("3");
		a_c.addText("<init>");
		a_c.addText("makeExactRgbPaletteFancy");
		a_c.addText("2097152");
		a_c.addText("8");
		a_c.addText("2097151");
		a_c.addText("7");
		a_c.addText("21");
		a_c.addText("255");
		a_c.addText("Used colors: ");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("128");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("21");
		a_c.addText("argb");
		a_c.addText("rggbb");
		a_c.addText("highred");
		a_c.addText("mask");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("eight");
		a_c.addText("element");
		a_c.addText("rgb");
		a_c.addText("bit");
		a_c.addText("j");
		a_c.addText("eight");
		a_c.addText("mask");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("rgbmap");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("count");
		a_c.addText("colormap");
		a_c.addText("mapsize");
		a_c.addText("pixelToQuantizationTableIndex");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("sample");
		a_c.addText("i");
		a_c.addText("argb");
		a_c.addText("precision");
		a_c.addText("result");
		a_c.addText("precisionMask");
		a_c.addText("getFrequencyTotal");
		a_c.addText("index");
		a_c.addText("red");
		a_c.addText("g");
		a_c.addText("green");
		a_c.addText("b");
		a_c.addText("blue");
		a_c.addText("table");
		a_c.addText("mins");
		a_c.addText("maxs");
		a_c.addText("precision");
		a_c.addText("sum");
		a_c.addText("finishDivision");
		a_c.addText("trying (");
		a_c.addText("): ");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("total: ");
		a_c.addText("first total: ");
		a_c.addText("second total: ");
		a_c.addText("slice: ");
		a_c.addText("subset");
		a_c.addText("component");
		a_c.addText("precision");
		a_c.addText("sum");
		a_c.addText("slice");
		a_c.addText("total");
		a_c.addText("remainder");
		a_c.addText("sliceMins");
		a_c.addText("sliceMaxs");
		a_c.addText("first");
		a_c.addText("second");
		a_c.addText("divideSubset2");
		a_c.addText("trying (");
		a_c.addText("): ");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("table");
		a_c.addText("subset");
		a_c.addText("component");
		a_c.addText("precision");
		a_c.addText("total");
		a_c.addText("sliceMins");
		a_c.addText("sliceMaxs");
		a_c.addText("sum1");
		a_c.addText("slice1");
		a_c.addText("last");
		a_c.addText("sum2");
		a_c.addText("slice2");
		a_c.addText("dc1");
		a_c.addText("dc2");
		a_c.addText("result");
		a_c.addText("divideSubset2");
		a_c.addText("1.7976931348623157E308");
		a_c.addText("first");
		a_c.addText("second");
		a_c.addText("area1");
		a_c.addText("area2");
		a_c.addText("diff");
		a_c.addText("score");
		a_c.addText("dc");
		a_c.addText("table");
		a_c.addText("subset");
		a_c.addText("precision");
		a_c.addText("dcs");
		a_c.addText("bestV");
		a_c.addText("bestScore");
		a_c.addText("divide");
		a_c.addText("\tarea: ");
		a_c.addText("area");
		a_c.addText("subset");
		a_c.addText("maxArea");
		a_c.addText("maxSubset");
		a_c.addText("dc");
		a_c.addText("v");
		a_c.addText("desiredCount");
		a_c.addText("table");
		a_c.addText("precision");
		a_c.addText("ignore");
		a_c.addText("makeQuantizedRgbPalette");
		a_c.addText("6");
		a_c.addText("18");
		a_c.addText("262144");
		a_c.addText("262144");
		a_c.addText("10");
		a_c.addText("6");
		a_c.addText("6");
		a_c.addText("pre total: ");
		a_c.addText("6");
		a_c.addText("6");
		a_c.addText("all total: ");
		a_c.addText("width * height: ");
		a_c.addText("6");
		a_c.addText("subsets: ");
		a_c.addText("width*height: ");
		a_c.addText(": ");
		a_c.addText("6");
		a_c.addText("preTotal");
		a_c.addText("argb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("allTotal");
		a_c.addText("subset");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("max");
		a_c.addText("precision");
		a_c.addText("tableScale");
		a_c.addText("tableSize");
		a_c.addText("table");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("subsets");
		a_c.addText("all");
		a_c.addText("makeQuantizedRgbaPalette");
		a_c.addText("src");
		a_c.addText("transparent");
		a_c.addText("max");
		a_c.addText("makeExactRgbPaletteSimple");
		a_c.addText("16777215");
		a_c.addText("10");
		a_c.addText("argb");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("rgb");
		a_c.addText("src");
		a_c.addText("max");
		a_c.addText("rgbs");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("result");
		a_c.addText("next");
		a_c.addText("isGrayscale");
		a_c.addText("6");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasTransparency");
		a_c.addText("255");
		a_c.addText("src");
		a_c.addText("hasTransparency");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("argb");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("threshold");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("countTrasparentColors");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("rgbs");
		a_c.addText("first");
		a_c.addText("countTransparentColors");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("rgb");
		a_c.addText("alpha");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("cm");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("first");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/palette/PaletteFactory;");
	}

	public void c304_texts(dmClass a_c) {
		a_c.addText("dst_a");
		a_c.addText("dst_b");
		a_c.addText("<init>");
		a_c.addText("dst_a");
		a_c.addText("dst_b");
		a_c.addText("access$000");
		a_c.addText("x0");
		a_c.addText("access$100");
		a_c.addText("x0");
	}
	public void c303_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Returns, new int[]{36, 315, 382});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{36, 315, 382, 397, 433, 457, 461, 501});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{54, 55, 59, 334, 335, 349, 412, 413, 417, 437, 438, 440, 446, 465, 466, 468, 474, 505, 510, 511, 517});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.ConstructorCall, new int[]{95, 433});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{95, 95});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), dmDependency.Type.Returns, new int[]{129, 175, 224});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Argument, new int[]{129, 175, 224, 257});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.MethodCall, new int[]{135, 182, 373, 376});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.FieldUse, new int[]{138, 140, 140, 154, 155, 155, 156, 157, 157, 172, 173, 185, 187, 188, 188, 189, 190, 190, 196, 196, 241, 242, 284, 342, 342, 358, 358, 380});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.ConstructorCall, new int[]{172, 173, 338});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), dmDependency.Type.ConstructorCall, 175);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.LocalVar, new int[]{175, 175, 224, 257, 257, 315, 315, 315, 382, 382, 382});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), dmDependency.Type.LocalVar, new int[]{224, 224, 224, 257, 257, 257, 315});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), dmDependency.Type.FieldUse, new int[]{239, 240, 306, 307});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Returns, 257);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.QuantizedPalette"), dmDependency.Type.ConstructorCall, 382);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 382);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), dmDependency.Type.ConstructorCall, 397);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), dmDependency.Type.ConstructorCall, 397);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), dmDependency.Type.MethodCall, 397);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.Returns, 397);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, new int[]{440, 468, 506});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.MethodCall, 440);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, 532);
	}
	public void c304_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.OwnFieldUse, new int[]{267, 268, 260, 260});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), m_classes.get("org.apache.commons.imaging.palette.ColorSpaceSubset"), dmDependency.Type.Returns, new int[]{269, 260});
		d(m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory$DivisionCandidate"), dmDependency.Type.Argument, new int[]{269, 260});
	}

	public void c305_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("tagInfo");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("fieldType");
		a_c.addText("count");
		a_c.addText("offset");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("sortHint");
		a_c.addText("<init>");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("fieldType");
		a_c.addText("count");
		a_c.addText("offset");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("sortHint");
		a_c.addText("getDirectoryType");
		a_c.addText("getTagInfo");
		a_c.addText("getTag");
		a_c.addText("getFieldType");
		a_c.addText("getCount");
		a_c.addText("getOffset");
		a_c.addText("getByteOrder");
		a_c.addText("getSortHint");
		a_c.addText("isLocalValue");
		a_c.addText("4");
		a_c.addText("getBytesLength");
		a_c.addText("getByteArrayValue");
		a_c.addText("getOversizeValueElement");
		a_c.addText("getValueDescription");
		a_c.addText("Invalid value: ");
		a_c.addText("e");
		a_c.addText("getValueDescription");
		a_c.addText("\'");
		a_c.addText("\'");
		a_c.addText("yyyy-MM-dd\'T\'HH:mm:ss.SSSZ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("50");
		a_c.addText("... (");
		a_c.addText(")");
		a_c.addText(", ");
		a_c.addText("Unknown: ");
		a_c.addText("df");
		a_c.addText("object");
		a_c.addText("i");
		a_c.addText("objects");
		a_c.addText("result");
		a_c.addText("sval");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("iVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("lVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("dVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("bVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("cVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("fVal");
		a_c.addText("i");
		a_c.addText("values");
		a_c.addText("result");
		a_c.addText("o");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("e");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("dump");
		a_c.addText(": ");
		a_c.addText("pw");
		a_c.addText("prefix");
		a_c.addText("getDescriptionWithoutValue");
		a_c.addText(" (0x");
		a_c.addText(": ");
		a_c.addText("): ");
		a_c.addText("toString");
		a_c.addText(" (0x");
		a_c.addText(": ");
		a_c.addText("): ");
		a_c.addText(" (");
		a_c.addText(" ");
		a_c.addText(")");
		a_c.addText("getTagName");
		a_c.addText(" (0x");
		a_c.addText(")");
		a_c.addText("getFieldTypeName");
		a_c.addText("getValue");
		a_c.addText("getStringValue");
		a_c.addText("Expected String value(");
		a_c.addText("): ");
		a_c.addText("o");
		a_c.addText("getIntArrayValue");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("65535");
		a_c.addText("10");
		a_c.addText("Unknown value: ");
		a_c.addText(" for: ");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("o");
		a_c.addText("getDoubleArrayValue");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("Unknown value: ");
		a_c.addText(" for: ");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("numbers");
		a_c.addText("result");
		a_c.addText("o");
		a_c.addText("getIntValueOrArraySum");
		a_c.addText("Unknown value: ");
		a_c.addText(" for: ");
		a_c.addText("number");
		a_c.addText("numbers");
		a_c.addText("sum");
		a_c.addText("number");
		a_c.addText("numbers");
		a_c.addText("sum");
		a_c.addText("number");
		a_c.addText("numbers");
		a_c.addText("sum");
		a_c.addText("o");
		a_c.addText("getIntValue");
		a_c.addText("Missing value: ");
		a_c.addText("o");
		a_c.addText("getDoubleValue");
		a_c.addText("Missing value: ");
		a_c.addText("o");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/tiff/TiffField;");
	}

	public void c306_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("getElementDescription");
		a_c.addText("OversizeValueElement, tag: ");
		a_c.addText(", fieldType: ");
	}
	public void c305_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("long"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("long"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.OwnFieldUse, new int[]{60, 91, 128, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{61, 62, 99, 108, 128, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{63, 144, 164});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{64, 116});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffTags"), dmDependency.Type.MethodCall, 67);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.OwnFieldUse, new int[]{67, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.LocalVar, 68);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Returns, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Returns, 83);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("long"), dmDependency.Type.Returns, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Returns, 108);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, new int[]{128, 136, 399, 411});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("byte"), dmDependency.Type.Returns, 136);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 144);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Returns, 144);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), dmDependency.Type.ConstructorCall, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.MethodCall, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.LocalVar, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.text.SimpleDateFormat"), dmDependency.Type.ConstructorCall, 185);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.text.DateFormat"), dmDependency.Type.MethodCall, 186);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.text.DateFormat"), dmDependency.Type.LocalVar, 355);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("short"), dmDependency.Type.LocalVar, new int[]{355, 355, 460, 507, 542, 542});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{355, 355});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{355, 355});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("char"), dmDependency.Type.LocalVar, new int[]{355, 355});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 359);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 359);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{361, 364, 364, 364, 364, 375, 378, 379});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{362, 363, 364, 364, 364, 364});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.IOException"), dmDependency.Type.MethodCall, 365);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 367);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 367);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 367);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, new int[]{367, 371});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{383, 393, 405, 407});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, 404);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{411, 416, 428, 460, 507, 542, 553});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.MethodCall, new int[]{416, 426, 460, 507, 542, 550, 560});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{426, 460, 507, 542, 550, 560});
	}
	public void c306_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 149);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{154, 155});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, 155);
	}

	public void c307_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_FAX_RECV_PARAMS");
		a_c.addText("EXIF_TAG_FAX_SUB_ADDRESS");
		a_c.addText("EXIF_TAG_FAX_RECV_TIME");
		a_c.addText("EXIF_TAG_FAX_DCS");
		a_c.addText("ALL_HYLAFAX_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("FaxRecvParams");
		a_c.addText("34908");
		a_c.addText("FaxSubAddress");
		a_c.addText("34909");
		a_c.addText("FaxRecvTime");
		a_c.addText("34910");
		a_c.addText("FaxDCS");
		a_c.addText("34911");
	}
	public void c307_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{29, 33, 37, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{29, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{29, 37, 45, 45});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{33, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{33, 41, 45, 45});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 45);
	}

	public void c308_texts(dmClass a_c) {
		a_c.addText("jfifMajorVersion");
		a_c.addText("jfifMinorVersion");
		a_c.addText("densityUnits");
		a_c.addText("xDensity");
		a_c.addText("yDensity");
		a_c.addText("xThumbnail");
		a_c.addText("yThumbnail");
		a_c.addText("thumbnailSize");
		a_c.addText("getDescription");
		a_c.addText("JFIF (");
		a_c.addText(")");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("Not a Valid JPEG File: missing JFIF string");
		a_c.addText("JFIF_major_version");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("JFIF_minor_version");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("density_units");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("x_density");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("y_density");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("x_thumbnail");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("y_thumbnail");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("Not a Valid JPEG File: missing thumbnail");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("signature");
	}
	public void c308_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{44, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{44, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 49);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), dmDependency.Type.ConstructorCall, 49);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{56, 57, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, new int[]{56, 57, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{56, 63, 65, 67, 68, 69, 71, 72, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), m_classes.get("byte"), dmDependency.Type.LocalVar, 79);
	}

	public void c309_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".dcx");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Dcx-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".dcx");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readDcxHeader");
		a_c.addText("Id");
		a_c.addText("Not a Valid DCX File");
		a_c.addText("1024");
		a_c.addText("1024");
		a_c.addText("4294967295");
		a_c.addText("PageTable");
		a_c.addText("Not a Valid DCX File");
		a_c.addText("987654321");
		a_c.addText("Not a Valid DCX File: file id incorrect");
		a_c.addText("1024");
		a_c.addText("DCX page table not terminated by zero entry");
		a_c.addText("11");
		a_c.addText("pageOffset");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("id");
		a_c.addText("pageTable");
		a_c.addText("objects");
		a_c.addText("pages");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("getBufferedImage");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("list");
		a_c.addText("getAllBufferedImages");
		a_c.addText("pcxSource");
		a_c.addText("image");
		a_c.addText("stream");
		a_c.addText("element");
		a_c.addText("byteSource");
		a_c.addText("dcxHeader");
		a_c.addText("images");
		a_c.addText("pcxImageParser");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("PCX_COMPRESSION");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("Invalid pixel density parameter");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("Unknown parameter: ");
		a_c.addText("4100");
		a_c.addText("987654321");
		a_c.addText("4100");
		a_c.addText("1023");
		a_c.addText("value");
		a_c.addText("value");
		a_c.addText("firstKey");
		a_c.addText("i");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("pcxParams");
		a_c.addText("headerSize");
		a_c.addText("bos");
		a_c.addText("pcxImageParser");
		a_c.addText("<clinit>");
		a_c.addText(".dcx");
	}

	public void c310_texts(dmClass a_c) {
		a_c.addText("DCX_ID");
		a_c.addText("987654321");
		a_c.addText("id");
		a_c.addText("pageTable");
		a_c.addText("<init>");
		a_c.addText("id");
		a_c.addText("pageTable");
		a_c.addText("dump");
		a_c.addText("DcxHeader");
		a_c.addText("Id: 0x");
		a_c.addText("Pages: ");
		a_c.addText("pw");
	}
	public void c309_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{55, 233});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{75, 84, 91, 98, 105, 158, 165, 175});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{75, 84, 91, 98, 105, 158, 165, 175, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{75, 84, 91, 98, 105, 158, 165, 175});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 84);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), dmDependency.Type.Returns, 105);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{129, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{130, 133});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{142, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), dmDependency.Type.ConstructorCall, 156);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{158, 158, 158, 158, 191, 191, 191, 191});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{158, 158, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), dmDependency.Type.LocalVar, new int[]{158, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{158, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 158);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), dmDependency.Type.MethodCall, 164);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{165, 175});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), dmDependency.Type.ConstructorCall, new int[]{183, 241});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), dmDependency.Type.FieldUse, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.ConstructorCall, 186);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), dmDependency.Type.MethodCall, new int[]{188, 242});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.LocalVar, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{193, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), dmDependency.Type.LocalVar, new int[]{193, 243});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{218, 228});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 233);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{235, 237, 239});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, 243);
	}
	public void c310_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), m_classes.get("long"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{116, 122});
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{120, 121, 122, 123});
	}

	public void c312_texts(dmClass a_c) {
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("Segment Data");
		a_c.addText("Invalid Segment: insufficient data");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("bytes");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("dump");
		a_c.addText("50");
		a_c.addText("\t");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("start");
		a_c.addText("getSegmentData");
		a_c.addText("getSegmentData");
		a_c.addText("offset");
		a_c.addText("getSegmentDataAsString");
		a_c.addText("encoding");
	}
	public void c312_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.ConstructorCall, new int[]{30, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{32, 38, 47, 48, 59, 71, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("byte"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{38, 59});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, new int[]{39, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{50, 59});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), m_classes.get("java.io.UnsupportedEncodingException"), dmDependency.Type.Throws, 71);
	}

	public void c313_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("cieL");
		a_c.addText("cieA");
		a_c.addText("cieB");
		a_c.addText("getBasicChannelsCount");
	}
	public void c313_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 22);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 22);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab"), m_classes.get("org.apache.commons.imaging.color.ColorConversions"), dmDependency.Type.MethodCall, 33);
	}

	public void c314_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c314_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c315_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("header");
		a_c.addText("ColorModeDataLength");
		a_c.addText("ImageResourcesLength");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Compression");
		a_c.addText("<init>");
		a_c.addText("header");
		a_c.addText("ColorModeDataLength");
		a_c.addText("ImageResourcesLength");
		a_c.addText("LayerAndMaskDataLength");
		a_c.addText("Compression");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("e");
		a_c.addText("dump");
		a_c.addText("ImageContents");
		a_c.addText("Compression: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("ColorModeDataLength: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("ImageResourcesLength: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("LayerAndMaskDataLength: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("pw");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/psd/PsdImageContents;");
	}
	public void c315_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.OwnFieldUse, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{50, 53, 53, 53, 53, 59, 60, 61, 63, 65, 67, 74, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{51, 52, 53, 53, 53, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.IOException"), dmDependency.Type.MethodCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 56);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 56);
	}

	public void c316_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("sample");
		a_c.addText("alpha");
		a_c.addText("getBasicChannelsCount");
	}
	public void c316_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 21);
	}

	public void c317_texts(dmClass a_c) {
		a_c.addText("REF_X");
		a_c.addText("95.047");
		a_c.addText("REF_Y");
		a_c.addText("100.0");
		a_c.addText("REF_Z");
		a_c.addText("108.883");
		a_c.addText("<init>");
		a_c.addText("convertXYZtoCIELab");
		a_c.addText("xyz");
		a_c.addText("convertXYZtoCIELab");
		a_c.addText("95.047");
		a_c.addText("100.0");
		a_c.addText("108.883");
		a_c.addText("0.008856");
		a_c.addText("0.3333333333333333");
		a_c.addText("7.787");
		a_c.addText("0.13793103448275862");
		a_c.addText("0.008856");
		a_c.addText("0.3333333333333333");
		a_c.addText("7.787");
		a_c.addText("0.13793103448275862");
		a_c.addText("0.008856");
		a_c.addText("0.3333333333333333");
		a_c.addText("7.787");
		a_c.addText("0.13793103448275862");
		a_c.addText("116.0");
		a_c.addText("16.0");
		a_c.addText("500.0");
		a_c.addText("200.0");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("var_X");
		a_c.addText("var_Y");
		a_c.addText("var_Z");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("convertCIELabtoXYZ");
		a_c.addText("cielab");
		a_c.addText("convertCIELabtoXYZ");
		a_c.addText("16.0");
		a_c.addText("116.0");
		a_c.addText("500.0");
		a_c.addText("200.0");
		a_c.addText("3.0");
		a_c.addText("0.008856");
		a_c.addText("3.0");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("3.0");
		a_c.addText("0.008856");
		a_c.addText("3.0");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("3.0");
		a_c.addText("0.008856");
		a_c.addText("3.0");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("95.047");
		a_c.addText("100.0");
		a_c.addText("108.883");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("var_Y");
		a_c.addText("var_X");
		a_c.addText("var_Z");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("convertXYZtoHunterLab");
		a_c.addText("xyz");
		a_c.addText("convertXYZtoHunterLab");
		a_c.addText("10.0");
		a_c.addText("17.5");
		a_c.addText("1.02");
		a_c.addText("7.0");
		a_c.addText("0.847");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("convertHunterLabtoXYZ");
		a_c.addText("cielab");
		a_c.addText("convertHunterLabtoXYZ");
		a_c.addText("10.0");
		a_c.addText("17.5");
		a_c.addText("10.0");
		a_c.addText("7.0");
		a_c.addText("10.0");
		a_c.addText("2.0");
		a_c.addText("1.02");
		a_c.addText("0.847");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("var_Y");
		a_c.addText("var_X");
		a_c.addText("var_Z");
		a_c.addText("Y");
		a_c.addText("X");
		a_c.addText("Z");
		a_c.addText("convertXYZtoRGB");
		a_c.addText("xyz");
		a_c.addText("convertXYZtoRGB");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("3.2406");
		a_c.addText("-1.5372");
		a_c.addText("-0.4986");
		a_c.addText("-0.9689");
		a_c.addText("1.8758");
		a_c.addText("0.0415");
		a_c.addText("0.0557");
		a_c.addText("-0.204");
		a_c.addText("1.057");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("var_X");
		a_c.addText("var_Y");
		a_c.addText("var_Z");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("convertRGBtoXYZ");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("0.04045");
		a_c.addText("0.055");
		a_c.addText("1.055");
		a_c.addText("2.4");
		a_c.addText("12.92");
		a_c.addText("0.04045");
		a_c.addText("0.055");
		a_c.addText("1.055");
		a_c.addText("2.4");
		a_c.addText("12.92");
		a_c.addText("0.04045");
		a_c.addText("0.055");
		a_c.addText("1.055");
		a_c.addText("2.4");
		a_c.addText("12.92");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("0.4124");
		a_c.addText("0.3576");
		a_c.addText("0.1805");
		a_c.addText("0.2126");
		a_c.addText("0.7152");
		a_c.addText("0.0722");
		a_c.addText("0.0193");
		a_c.addText("0.1192");
		a_c.addText("0.9505");
		a_c.addText("rgb");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("convertRGBtoCMY");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("rgb");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("convertCMYtoRGB");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("cmy");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("convertCMYtoCMYK");
		a_c.addText("cmy");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("var_K");
		a_c.addText("convertCMYKtoCMY");
		a_c.addText("cmyk");
		a_c.addText("convertCMYKtoCMY");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("K");
		a_c.addText("convertCMYKtoRGB");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("c");
		a_c.addText("m");
		a_c.addText("y");
		a_c.addText("k");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("K");
		a_c.addText("convertRGBtoHSL");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("2.0");
		a_c.addText("0.5");
		a_c.addText("2.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("0.3333333333333333");
		a_c.addText("0.6666666666666666");
		a_c.addText("var_Max");
		a_c.addText("var_Max");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("S");
		a_c.addText("H");
		a_c.addText("H");
		a_c.addText("del_R");
		a_c.addText("del_G");
		a_c.addText("del_B");
		a_c.addText("rgb");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("var_Min");
		a_c.addText("var_Max");
		a_c.addText("maxIsR");
		a_c.addText("maxIsG");
		a_c.addText("del_Max");
		a_c.addText("L");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("convertHSLtoRGB");
		a_c.addText("hsl");
		a_c.addText("convertHSLtoRGB");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("0.5");
		a_c.addText("2.0");
		a_c.addText("255.0");
		a_c.addText("0.3333333333333333");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("0.3333333333333333");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("var_2");
		a_c.addText("var_2");
		a_c.addText("var_1");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("L");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("convertHuetoRGB");
		a_c.addText("6.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("3.0");
		a_c.addText("2.0");
		a_c.addText("0.6666666666666666");
		a_c.addText("6.0");
		a_c.addText("v1");
		a_c.addText("v2");
		a_c.addText("vH");
		a_c.addText("convertRGBtoHSV");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("0.3333333333333333");
		a_c.addText("0.6666666666666666");
		a_c.addText("var_Max");
		a_c.addText("var_Max");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("H");
		a_c.addText("H");
		a_c.addText("del_R");
		a_c.addText("del_G");
		a_c.addText("del_B");
		a_c.addText("rgb");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("var_Min");
		a_c.addText("maxIsR");
		a_c.addText("maxIsG");
		a_c.addText("var_Max");
		a_c.addText("del_Max");
		a_c.addText("V");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("convertHSVtoRGB");
		a_c.addText("HSV");
		a_c.addText("convertHSVtoRGB");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("6.0");
		a_c.addText("6.0");
		a_c.addText("2.0");
		a_c.addText("3.0");
		a_c.addText("4.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("var_h");
		a_c.addText("var_i");
		a_c.addText("var_1");
		a_c.addText("var_2");
		a_c.addText("var_3");
		a_c.addText("var_r");
		a_c.addText("var_g");
		a_c.addText("var_b");
		a_c.addText("H");
		a_c.addText("S");
		a_c.addText("V");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("convertCMYKtoRGB_Adobe");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("sc");
		a_c.addText("sm");
		a_c.addText("sy");
		a_c.addText("sk");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("cube");
		a_c.addText("f");
		a_c.addText("square");
		a_c.addText("f");
		a_c.addText("convertCIELabtoARGBTest");
		a_c.addText("100.0");
		a_c.addText("255.0");
		a_c.addText("16.0");
		a_c.addText("116.0");
		a_c.addText("500.0");
		a_c.addText("200.0");
		a_c.addText("0.008856");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("0.008856");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("0.008856");
		a_c.addText("0.13793103448275862");
		a_c.addText("7.787");
		a_c.addText("95.047");
		a_c.addText("100.0");
		a_c.addText("108.883");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("3.2406");
		a_c.addText("-1.5372");
		a_c.addText("-0.4986");
		a_c.addText("-0.9689");
		a_c.addText("1.8758");
		a_c.addText("0.0415");
		a_c.addText("0.0557");
		a_c.addText("-0.204");
		a_c.addText("1.057");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("0.0031308");
		a_c.addText("1.055");
		a_c.addText("0.4166666666666667");
		a_c.addText("0.055");
		a_c.addText("12.92");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("255.0");
		a_c.addText("var_Y");
		a_c.addText("var_X");
		a_c.addText("var_Z");
		a_c.addText("var_x_cube");
		a_c.addText("var_y_cube");
		a_c.addText("var_z_cube");
		a_c.addText("var_X");
		a_c.addText("var_Y");
		a_c.addText("var_Z");
		a_c.addText("var_R");
		a_c.addText("var_G");
		a_c.addText("var_B");
		a_c.addText("cieL");
		a_c.addText("cieA");
		a_c.addText("cieB");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("convertRGBtoRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("convertRGBtoRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("convertCIELabtoCIELCH");
		a_c.addText("cielab");
		a_c.addText("convertCIELabtoCIELCH");
		a_c.addText("3.141592653589793");
		a_c.addText("180.0");
		a_c.addText("360.0");
		a_c.addText("L");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("var_H");
		a_c.addText("C");
		a_c.addText("H");
		a_c.addText("convertCIELCHtoCIELab");
		a_c.addText("cielch");
		a_c.addText("convertCIELCHtoCIELab");
		a_c.addText("L");
		a_c.addText("C");
		a_c.addText("H");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("degree_2_radian");
		a_c.addText("3.141592653589793");
		a_c.addText("180.0");
		a_c.addText("degree");
		a_c.addText("radian_2_degree");
		a_c.addText("180.0");
		a_c.addText("3.141592653589793");
		a_c.addText("radian");
		a_c.addText("convertXYZtoCIELuv");
		a_c.addText("xyz");
		a_c.addText("convertXYZtoCIELuv");
		a_c.addText("4.0");
		a_c.addText("15.0");
		a_c.addText("3.0");
		a_c.addText("9.0");
		a_c.addText("15.0");
		a_c.addText("3.0");
		a_c.addText("100.0");
		a_c.addText("0.008856");
		a_c.addText("0.3333333333333333");
		a_c.addText("7.787");
		a_c.addText("0.13793103448275862");
		a_c.addText("0.19783982482140777");
		a_c.addText("0.46833630293240974");
		a_c.addText("116.0");
		a_c.addText("16.0");
		a_c.addText("13.0");
		a_c.addText("0.19783982482140777");
		a_c.addText("13.0");
		a_c.addText("0.46833630293240974");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("var_U");
		a_c.addText("var_V");
		a_c.addText("var_Y");
		a_c.addText("ref_U");
		a_c.addText("ref_V");
		a_c.addText("L");
		a_c.addText("u");
		a_c.addText("v");
		a_c.addText("convertCIELuvtoXYZ");
		a_c.addText("cielch");
		a_c.addText("convertCIELuvtoXYZ");
		a_c.addText("16.0");
		a_c.addText("116.0");
		a_c.addText("3.0");
		a_c.addText("0.008856");
		a_c.addText("3.0");
		a_c.addText("7.787");
		a_c.addText("0.19783982482140777");
		a_c.addText("0.46833630293240974");
		a_c.addText("13.0");
		a_c.addText("0.19783982482140777");
		a_c.addText("13.0");
		a_c.addText("0.46833630293240974");
		a_c.addText("100.0");
		a_c.addText("9.0");
		a_c.addText("4.0");
		a_c.addText("9.0");
		a_c.addText("15.0");
		a_c.addText("3.0");
		a_c.addText("L");
		a_c.addText("u");
		a_c.addText("v");
		a_c.addText("var_Y");
		a_c.addText("ref_U");
		a_c.addText("ref_V");
		a_c.addText("var_U");
		a_c.addText("var_V");
		a_c.addText("Y");
		a_c.addText("X");
		a_c.addText("Z");
	}
	public void c317_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.Returns, new int[]{26, 29, 663, 667});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.Argument, new int[]{26, 92, 122, 685});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.FieldUse, new int[]{29, 29, 29, 96, 96, 96, 126, 126, 126, 689, 689, 689});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.ConstructorCall, new int[]{59, 677});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.Returns, new int[]{59, 63, 105, 109, 159, 722, 726});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.Argument, new int[]{59, 643});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLab"), dmDependency.Type.FieldUse, new int[]{63, 63, 63, 647, 647, 647});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.ConstructorCall, new int[]{92, 122, 196, 748});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.Returns, new int[]{92, 96});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.ConstructorCall, 105);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.Argument, 105);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHunterLab"), dmDependency.Type.FieldUse, new int[]{109, 109, 109});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.Returns, new int[]{196, 258, 262});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.ConstructorCall, new int[]{211, 273});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.Argument, new int[]{211, 228});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.FieldUse, new int[]{224, 225, 226, 234, 235, 236});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.Returns, 228);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.ConstructorCall, 258);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.Argument, 258);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.FieldUse, new int[]{262, 262, 262, 262});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.Returns, 282);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.ConstructorCall, 357);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.Argument, 357);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsl"), dmDependency.Type.FieldUse, new int[]{361, 361, 361});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.Returns, 407);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.ConstructorCall, 466);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.Argument, 466);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorHsv"), dmDependency.Type.FieldUse, new int[]{470, 470, 470});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.Returns, new int[]{643, 647});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.ConstructorCall, 663);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.Argument, 663);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLch"), dmDependency.Type.FieldUse, new int[]{667, 667, 667});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.Returns, new int[]{685, 689});
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.ConstructorCall, 722);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.Argument, 722);
		d(m_classes.get("org.apache.commons.imaging.color.ColorConversions"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.FieldUse, new int[]{726, 726, 726});
	}

	public void c318_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("<init>");
		a_c.addText("PNG tEXt chunk keyword is not terminated.");
		a_c.addText("Keyword: ");
		a_c.addText("Text: ");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("index");
		a_c.addText("textLength");
		a_c.addText("getKeyword");
		a_c.addText("getText");
		a_c.addText("getContents");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/chunks/PngChunkText;");
	}
	public void c318_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{45, 48});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Returns, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Text"), dmDependency.Type.ConstructorCall, 74);
	}

	public void c319_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_DNG_VERSION");
		a_c.addText("EXIF_TAG_DNG_BACKWARD_VERSION");
		a_c.addText("EXIF_TAG_UNIQUE_CAMERA_MODEL");
		a_c.addText("EXIF_TAG_LOCALIZED_CAMERA_MODEL");
		a_c.addText("EXIF_TAG_CFAPLANE_COLOR");
		a_c.addText("EXIF_TAG_CFALAYOUT");
		a_c.addText("CFALAYOUT_VALUE_RECTANGULAR");
		a_c.addText("1");
		a_c.addText("CFALAYOUT_VALUE_EVEN_COLUMNS_OFFSET_DOWN_1_2_ROW");
		a_c.addText("2");
		a_c.addText("CFALAYOUT_VALUE_EVEN_COLUMNS_OFFSET_UP_1_2_ROW");
		a_c.addText("3");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_RIGHT_1_2_COLUMN");
		a_c.addText("4");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_LEFT_1_2_COLUMN");
		a_c.addText("5");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_UP_1_2_ROW_EVEN_COLUMNS_OFFSET_LEFT_1_2_COLUMN");
		a_c.addText("6");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_UP_1_2_ROW_EVEN_COLUMNS_OFFSET_RIGHT_1_2_COLUMN");
		a_c.addText("7");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_DOWN_1_2_ROW_EVEN_COLUMNS_OFFSET_LEFT_1_2_COLUMN");
		a_c.addText("8");
		a_c.addText("CFALAYOUT_VALUE_EVEN_ROWS_OFFSET_DOWN_1_2_ROW_EVEN_COLUMNS_OFFSET_RIGHT_1_2_COLUMN");
		a_c.addText("9");
		a_c.addText("EXIF_TAG_LINEARIZATION_TABLE");
		a_c.addText("EXIF_TAG_BLACK_LEVEL_REPEAT_DIM");
		a_c.addText("EXIF_TAG_BLACK_LEVEL");
		a_c.addText("EXIF_TAG_BLACK_LEVEL_DELTA_H");
		a_c.addText("EXIF_TAG_BLACK_LEVEL_DELTA_V");
		a_c.addText("EXIF_TAG_WHITE_LEVEL");
		a_c.addText("EXIF_TAG_DEFAULT_SCALE");
		a_c.addText("EXIF_TAG_DEFAULT_CROP_ORIGIN");
		a_c.addText("EXIF_TAG_DEFAULT_CROP_SIZE");
		a_c.addText("EXIF_TAG_COLOR_MATRIX_1");
		a_c.addText("EXIF_TAG_COLOR_MATRIX_2");
		a_c.addText("EXIF_TAG_CAMERA_CALIBRATION_1");
		a_c.addText("EXIF_TAG_CAMERA_CALIBRATION_2");
		a_c.addText("EXIF_TAG_REDUCTION_MATRIX_1");
		a_c.addText("EXIF_TAG_REDUCTION_MATRIX_2");
		a_c.addText("EXIF_TAG_ANALOG_BALANCE");
		a_c.addText("EXIF_TAG_AS_SHOT_NEUTRAL");
		a_c.addText("EXIF_TAG_AS_SHOT_WHITE_XY");
		a_c.addText("EXIF_TAG_BASELINE_EXPOSURE");
		a_c.addText("EXIF_TAG_BASELINE_NOISE");
		a_c.addText("EXIF_TAG_BASELINE_SHARPNESS");
		a_c.addText("EXIF_TAG_BAYER_GREEN_SPLIT");
		a_c.addText("EXIF_TAG_LINEAR_RESPONSE_LIMIT");
		a_c.addText("EXIF_TAG_CAMERA_SERIAL_NUMBER");
		a_c.addText("EXIF_TAG_DNG_LENS_INFO");
		a_c.addText("EXIF_TAG_CHROMA_BLUR_RADIUS");
		a_c.addText("EXIF_TAG_ANTI_ALIAS_STRENGTH");
		a_c.addText("EXIF_TAG_SHADOW_SCALE");
		a_c.addText("EXIF_TAG_DNG_PRIVATE_DATA");
		a_c.addText("EXIF_TAG_MAKER_NOTE_SAFETY");
		a_c.addText("MAKER_NOTE_SAFETY_VALUE_UNSAFE");
		a_c.addText("0");
		a_c.addText("MAKER_NOTE_SAFETY_VALUE_SAFE");
		a_c.addText("1");
		a_c.addText("EXIF_TAG_CALIBRATION_ILLUMINANT_1");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_DAYLIGHT");
		a_c.addText("1");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_FLUORESCENT");
		a_c.addText("2");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_TUNGSTEN");
		a_c.addText("3");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_FLASH");
		a_c.addText("4");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_FINE_WEATHER");
		a_c.addText("9");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_CLOUDY");
		a_c.addText("10");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_SHADE");
		a_c.addText("11");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_DAYLIGHT_FLUORESCENT");
		a_c.addText("12");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_DAY_WHITE_FLUORESCENT");
		a_c.addText("13");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_COOL_WHITE_FLUORESCENT");
		a_c.addText("14");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_WHITE_FLUORESCENT");
		a_c.addText("15");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_STANDARD_LIGHT_A");
		a_c.addText("17");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_STANDARD_LIGHT_B");
		a_c.addText("18");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_STANDARD_LIGHT_C");
		a_c.addText("19");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_D55");
		a_c.addText("20");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_D65");
		a_c.addText("21");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_D75");
		a_c.addText("22");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_D50");
		a_c.addText("23");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_ISO_STUDIO_TUNGSTEN");
		a_c.addText("24");
		a_c.addText("CALIBRATION_ILLUMINANT_1_VALUE_OTHER");
		a_c.addText("255");
		a_c.addText("EXIF_TAG_CALIBRATION_ILLUMINANT_2");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_DAYLIGHT");
		a_c.addText("1");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_FLUORESCENT");
		a_c.addText("2");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_TUNGSTEN");
		a_c.addText("3");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_FLASH");
		a_c.addText("4");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_FINE_WEATHER");
		a_c.addText("9");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_CLOUDY");
		a_c.addText("10");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_SHADE");
		a_c.addText("11");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_DAYLIGHT_FLUORESCENT");
		a_c.addText("12");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_DAY_WHITE_FLUORESCENT");
		a_c.addText("13");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_COOL_WHITE_FLUORESCENT");
		a_c.addText("14");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_WHITE_FLUORESCENT");
		a_c.addText("15");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_STANDARD_LIGHT_A");
		a_c.addText("17");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_STANDARD_LIGHT_B");
		a_c.addText("18");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_STANDARD_LIGHT_C");
		a_c.addText("19");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_D55");
		a_c.addText("20");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_D65");
		a_c.addText("21");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_D75");
		a_c.addText("22");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_D50");
		a_c.addText("23");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_ISO_STUDIO_TUNGSTEN");
		a_c.addText("24");
		a_c.addText("CALIBRATION_ILLUMINANT_2_VALUE_OTHER");
		a_c.addText("255");
		a_c.addText("EXIF_TAG_BEST_QUALITY_SCALE");
		a_c.addText("EXIF_TAG_RAW_DATA_UNIQUE_ID");
		a_c.addText("EXIF_TAG_ORIGINAL_RAW_FILE_NAME");
		a_c.addText("EXIF_TAG_ORIGINAL_RAW_FILE_DATA");
		a_c.addText("EXIF_TAG_ACTIVE_AREA");
		a_c.addText("EXIF_TAG_MASKED_AREAS");
		a_c.addText("EXIF_TAG_AS_SHOT_ICCPROFILE");
		a_c.addText("EXIF_TAG_AS_SHOT_PRE_PROFILE_MATRIX");
		a_c.addText("EXIF_TAG_CURRENT_ICCPROFILE");
		a_c.addText("EXIF_TAG_CURRENT_PRE_PROFILE_MATRIX");
		a_c.addText("EXIF_TAG_COLORIMETRIC_REFERENCE");
		a_c.addText("COLORIMETRIC_REFERENCE_VALUE_SCENE_REFERRED");
		a_c.addText("0");
		a_c.addText("COLORIMETRIC_REFERENCE_VALUE_OUTPUT_REFERRED");
		a_c.addText("1");
		a_c.addText("EXIF_TAG_CAMERA_CALIBRATION_SIGNATURE");
		a_c.addText("EXIF_TAG_PROFILE_CALIBRATION_SIGNATURE");
		a_c.addText("EXIF_TAG_EXTRA_CAMERA_PROFILES");
		a_c.addText("EXIF_TAG_AS_SHOT_PROFILE_NAME");
		a_c.addText("EXIF_TAG_NOISE_REDUCTION_APPLIED");
		a_c.addText("EXIF_TAG_PROFILE_NAME");
		a_c.addText("EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS");
		a_c.addText("EXIF_TAG_PROFILE_HUE_SAT_MAP_DATA1");
		a_c.addText("EXIF_TAG_PROFILE_HUE_SAT_MAP_DATA2");
		a_c.addText("EXIF_TAG_PROFILE_TONE_CURVE");
		a_c.addText("EXIF_TAG_PROFILE_EMBED_POLICY");
		a_c.addText("PROFILE_EMBED_POLICY_VALUE_ALLOW_COPYING");
		a_c.addText("0");
		a_c.addText("PROFILE_EMBED_POLICY_VALUE_EMBED_IF_USED");
		a_c.addText("1");
		a_c.addText("PROFILE_EMBED_POLICY_VALUE_EMBED_NEVER");
		a_c.addText("2");
		a_c.addText("PROFILE_EMBED_POLICY_VALUE_NO_RESTRICTIONS");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_PROFILE_COPYRIGHT");
		a_c.addText("EXIF_TAG_FORWARD_MATRIX1");
		a_c.addText("EXIF_TAG_FORWARD_MATRIX2");
		a_c.addText("EXIF_TAG_PREVIEW_APPLICATION_NAME");
		a_c.addText("EXIF_TAG_PREVIEW_APPLICATION_VERSION");
		a_c.addText("EXIF_TAG_PREVIEW_SETTINGS_NAME");
		a_c.addText("EXIF_TAG_PREVIEW_SETTINGS_DIGEST");
		a_c.addText("EXIF_TAG_PREVIEW_COLORSPACE");
		a_c.addText("PREVIEW_COLORSPACE_VALUE_UNKNOWN");
		a_c.addText("0");
		a_c.addText("PREVIEW_COLORSPACE_VALUE_GRAY_GAMMA_2_2");
		a_c.addText("1");
		a_c.addText("PREVIEW_COLORSPACE_VALUE_sRGB");
		a_c.addText("2");
		a_c.addText("PREVIEW_COLORSPACE_VALUE_ADOBE_RGB");
		a_c.addText("3");
		a_c.addText("PREVIEW_COLORSPACE_VALUE_PROPHOTO_RGB");
		a_c.addText("4");
		a_c.addText("EXIF_TAG_PREVIEW_DATE_TIME");
		a_c.addText("EXIF_TAG_RAW_IMAGE_DIGEST");
		a_c.addText("EXIF_TAG_ORIGINAL_RAW_FILE_DIGEST");
		a_c.addText("EXIF_TAG_SUB_TILE_BLOCK_SIZE");
		a_c.addText("EXIF_TAG_ROW_INTERLEAVE_FACTOR");
		a_c.addText("EXIF_TAG_PROFILE_LOOK_TABLE_DIMS");
		a_c.addText("EXIF_TAG_PROFILE_LOOK_TABLE_DATA");
		a_c.addText("EXIF_TAG_OPCODE_LIST_1");
		a_c.addText("EXIF_TAG_OPCODE_LIST_2");
		a_c.addText("EXIF_TAG_OPCODE_LIST_3");
		a_c.addText("EXIF_TAG_NOISE_PROFILE");
		a_c.addText("ALL_DNG_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("DNGVersion");
		a_c.addText("50706");
		a_c.addText("DNGBackwardVersion");
		a_c.addText("50707");
		a_c.addText("UniqueCameraModel");
		a_c.addText("50708");
		a_c.addText("LocalizedCameraModel");
		a_c.addText("50709");
		a_c.addText("CFAPlaneColor");
		a_c.addText("50710");
		a_c.addText("CFALayout");
		a_c.addText("50711");
		a_c.addText("LinearizationTable");
		a_c.addText("50712");
		a_c.addText("BlackLevelRepeatDim");
		a_c.addText("50713");
		a_c.addText("BlackLevel");
		a_c.addText("50714");
		a_c.addText("BlackLevelDeltaH");
		a_c.addText("50715");
		a_c.addText("BlackLevelDeltaV");
		a_c.addText("50716");
		a_c.addText("WhiteLevel");
		a_c.addText("50717");
		a_c.addText("DefaultScale");
		a_c.addText("50718");
		a_c.addText("DefaultCropOrigin");
		a_c.addText("50719");
		a_c.addText("DefaultCropSize");
		a_c.addText("50720");
		a_c.addText("ColorMatrix1");
		a_c.addText("50721");
		a_c.addText("ColorMatrix2");
		a_c.addText("50722");
		a_c.addText("CameraCalibration1");
		a_c.addText("50723");
		a_c.addText("CameraCalibration2");
		a_c.addText("50724");
		a_c.addText("ReductionMatrix1");
		a_c.addText("50725");
		a_c.addText("ReductionMatrix2");
		a_c.addText("50726");
		a_c.addText("AnalogBalance");
		a_c.addText("50727");
		a_c.addText("AsShotNeutral");
		a_c.addText("50728");
		a_c.addText("AsShotWhiteXY");
		a_c.addText("50729");
		a_c.addText("BaselineExposure");
		a_c.addText("50730");
		a_c.addText("BaselineNoise");
		a_c.addText("50731");
		a_c.addText("BaselineSharpness");
		a_c.addText("50732");
		a_c.addText("BayerGreenSplit");
		a_c.addText("50733");
		a_c.addText("LinearResponseLimit");
		a_c.addText("50734");
		a_c.addText("CameraSerialNumber");
		a_c.addText("50735");
		a_c.addText("DNGLensInfo");
		a_c.addText("50736");
		a_c.addText("ChromaBlurRadius");
		a_c.addText("50737");
		a_c.addText("AntiAliasStrength");
		a_c.addText("50738");
		a_c.addText("ShadowScale");
		a_c.addText("50739");
		a_c.addText("DNGPrivateData");
		a_c.addText("50740");
		a_c.addText("MakerNoteSafety");
		a_c.addText("50741");
		a_c.addText("CalibrationIlluminant1");
		a_c.addText("50778");
		a_c.addText("CalibrationIlluminant2");
		a_c.addText("50779");
		a_c.addText("BestQualityScale");
		a_c.addText("50780");
		a_c.addText("RawDataUniqueID");
		a_c.addText("50781");
		a_c.addText("16");
		a_c.addText("OriginalRawFileName");
		a_c.addText("50827");
		a_c.addText("OriginalRawFileData");
		a_c.addText("50828");
		a_c.addText("ActiveArea");
		a_c.addText("50829");
		a_c.addText("MaskedAreas");
		a_c.addText("50830");
		a_c.addText("AsShotICCProfile");
		a_c.addText("50831");
		a_c.addText("AsShotPreProfileMatrix");
		a_c.addText("50832");
		a_c.addText("CurrentICCProfile");
		a_c.addText("50833");
		a_c.addText("CurrentPreProfileMatrix");
		a_c.addText("50834");
		a_c.addText("ColorimetricReference");
		a_c.addText("50879");
		a_c.addText("CameraCalibrationSignature");
		a_c.addText("50931");
		a_c.addText("ProfileCalibrationSignature");
		a_c.addText("50932");
		a_c.addText("ExtraCameraProfiles");
		a_c.addText("50933");
		a_c.addText("AsShotProfileName");
		a_c.addText("50934");
		a_c.addText("NoiseReductionApplied");
		a_c.addText("50935");
		a_c.addText("ProfileName");
		a_c.addText("50936");
		a_c.addText("ProfileHueSatMapDims");
		a_c.addText("50937");
		a_c.addText("ProfileHueSatMapData1");
		a_c.addText("50938");
		a_c.addText("ProfileHueSatMapData2");
		a_c.addText("50939");
		a_c.addText("ProfileToneCurve");
		a_c.addText("50940");
		a_c.addText("ProfileEmbedPolicy");
		a_c.addText("50941");
		a_c.addText("ProfileCopyright");
		a_c.addText("50942");
		a_c.addText("ForwardMatrix1");
		a_c.addText("50964");
		a_c.addText("ForwardMatrix2");
		a_c.addText("50965");
		a_c.addText("PreviewApplicationName");
		a_c.addText("50966");
		a_c.addText("PreviewApplicationVersion");
		a_c.addText("50967");
		a_c.addText("PreviewSettingsName");
		a_c.addText("50968");
		a_c.addText("PreviewSettingsDigest");
		a_c.addText("50969");
		a_c.addText("16");
		a_c.addText("PreviewColorspace");
		a_c.addText("50970");
		a_c.addText("PreviewDateTime");
		a_c.addText("50971");
		a_c.addText("RawImageDigest");
		a_c.addText("50972");
		a_c.addText("16");
		a_c.addText("OriginalRawFileDigest");
		a_c.addText("50973");
		a_c.addText("16");
		a_c.addText("SubTileBlockSize");
		a_c.addText("50974");
		a_c.addText("RowInterleaveFactor");
		a_c.addText("50975");
		a_c.addText("ProfileLookTableDims");
		a_c.addText("50981");
		a_c.addText("ProfileLookTableData");
		a_c.addText("50982");
		a_c.addText("OpcodeList1");
		a_c.addText("51008");
		a_c.addText("OpcodeList2");
		a_c.addText("51009");
		a_c.addText("OpcodeList3");
		a_c.addText("51022");
		a_c.addText("NoiseProfile");
		a_c.addText("51041");
		a_c.addText("79");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("60");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("64");
		a_c.addText("65");
		a_c.addText("66");
		a_c.addText("67");
		a_c.addText("68");
		a_c.addText("69");
		a_c.addText("70");
		a_c.addText("71");
		a_c.addText("72");
		a_c.addText("73");
		a_c.addText("74");
		a_c.addText("75");
		a_c.addText("76");
		a_c.addText("77");
		a_c.addText("78");
	}
	public void c319_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("short"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{49, 53, 57, 61, 65, 69, 82, 86, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 204, 228, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 298, 302, 306, 310, 314, 318, 322, 326, 330, 334, 338, 346, 350, 354, 358, 362, 366, 370, 374, 383, 387, 391, 395, 399, 403, 407, 411, 415, 419, 423});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, new int[]{49, 53, 65, 194, 256, 370, 387, 391});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{49, 53, 65, 194, 256, 370, 387, 391, 427, 427, 427, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{57, 174, 318, 383});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{57, 174, 318, 383, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.ConstructorCall, new int[]{61, 260, 298, 302, 310, 346, 358, 362, 366});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.OwnFieldUse, new int[]{61, 260, 298, 302, 310, 346, 358, 362, 366, 427, 427, 427, 427, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{69, 198, 204, 228, 292});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{69, 198, 204, 228, 292, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, new int[]{82, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{82, 86, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.ConstructorCall, new int[]{90, 110, 114});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.OwnFieldUse, new int[]{90, 110, 114, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.ConstructorCall, new int[]{94, 98, 118, 122, 126, 130, 134, 138, 280, 288, 350, 354});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.OwnFieldUse, new int[]{94, 98, 118, 122, 126, 130, 134, 138, 280, 288, 350, 354, 427, 427, 427, 427, 427, 427, 427, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.ConstructorCall, new int[]{102, 268, 272, 395, 399});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.OwnFieldUse, new int[]{102, 268, 272, 395, 399, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, new int[]{106, 142, 150, 178});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{106, 142, 150, 178, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.ConstructorCall, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.OwnFieldUse, new int[]{146, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.ConstructorCall, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.OwnFieldUse, new int[]{154, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, new int[]{158, 162, 170, 182, 186, 190, 252, 314});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{158, 162, 170, 182, 186, 190, 252, 314, 427, 427, 427, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{166, 338, 374});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{166, 338, 374, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.ConstructorCall, new int[]{264, 276, 284, 411, 415, 419});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.OwnFieldUse, new int[]{264, 276, 284, 411, 415, 419, 427, 427, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.ConstructorCall, new int[]{306, 322, 403});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.OwnFieldUse, new int[]{306, 322, 403, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.ConstructorCall, new int[]{326, 330, 334, 407});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.OwnFieldUse, new int[]{326, 330, 334, 407, 427, 427, 427, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.ConstructorCall, 423);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.OwnFieldUse, new int[]{423, 427});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.DngTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 427);
	}

	public void c320_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_JPEGTABLES");
		a_c.addText("EXIF_TAG_IMAGE_SOURCE_DATA");
		a_c.addText("ALL_ADOBE_PHOTOSHOP_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("JPEGTables");
		a_c.addText("347");
		a_c.addText("ImageSourceData");
		a_c.addText("37724");
	}
	public void c320_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{35, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.ConstructorCall, new int[]{35, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.OwnFieldUse, new int[]{35, 39, 43, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AdobePhotoshopTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 43);
	}

	public void c321_texts(dmClass a_c) {
		a_c.addText("ignoreAlpha");
		a_c.addText("<init>");
		a_c.addText("ignoreAlpha");
		a_c.addText("groupColors1");
		a_c.addText("10");
		a_c.addText("16777215");
		a_c.addText("argb");
		a_c.addText("color");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("image");
		a_c.addText("max");
		a_c.addText("mask");
		a_c.addText("colorMap");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("row");
		a_c.addText("groupColors");
		a_c.addText("2147483647");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("24");
		a_c.addText("mask(");
		a_c.addText("): ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("2147483647");
		a_c.addText("mask");
		a_c.addText("result");
		a_c.addText("i");
		a_c.addText("image");
		a_c.addText("maxColors");
		a_c.addText("max");
		a_c.addText("process");
		a_c.addText("lossless palette: ");
		a_c.addText("10");
		a_c.addText("-16777216");
		a_c.addText("discrete colors: ");
		a_c.addText("palette size: ");
		a_c.addText("10");
		a_c.addText("empty color_group: ");
		a_c.addText("palette_size > discrete_colors");
		a_c.addText("colorCount");
		a_c.addText("i");
		a_c.addText("palette");
		a_c.addText("colorCounts");
		a_c.addText("colorGroup");
		a_c.addText("i");
		a_c.addText("image");
		a_c.addText("maxColors");
		a_c.addText("medianCut");
		a_c.addText("colorMap");
		a_c.addText("discreteColors");
		a_c.addText("colorGroups");
		a_c.addText("root");
		a_c.addText("paletteSize");
		a_c.addText("palette");
	}
	public void c321_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{33, 65, 82});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.Returns, new int[]{33, 65});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{39, 40, 44});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.ConstructorCall, 55);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.FieldUse, new int[]{61, 61, 100});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.LocalVar, new int[]{65, 65, 82, 143, 143, 143});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{75, 92, 109, 122});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 82);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.Returns, 82);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.MedianCut"), dmDependency.Type.Argument, 82);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.ConstructorCall, 106);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.ConstructorCall, 112);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.MedianCut"), dmDependency.Type.MethodCall, 116);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.MethodCall, new int[]{129, 133});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.FieldUse, 131);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{134, 140});
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.MedianCutPalette"), dmDependency.Type.ConstructorCall, 143);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCutQuantizer"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.LocalVar, new int[]{143, 143, 143});
	}

	public void c322_texts(dmClass a_c) {
		a_c.addText("nSample");
		a_c.addText("nNull");
		a_c.addText("minValue");
		a_c.addText("maxValue");
		a_c.addText("meanValue");
		a_c.addText("excludedValue");
		a_c.addText("<init>");
		a_c.addText("Infinity");
		a_c.addText("-Infinity");
		a_c.addText("test");
		a_c.addText("i");
		a_c.addText("raster");
		a_c.addText("excludedValue");
		a_c.addText("vMin");
		a_c.addText("vMax");
		a_c.addText("vSum");
		a_c.addText("nS");
		a_c.addText("nN");
		a_c.addText("data");
		a_c.addText("getCountOfSamples");
		a_c.addText("getCountOfNulls");
		a_c.addText("getMinValue");
		a_c.addText("getMaxValue");
		a_c.addText("getMeanValue");
		a_c.addText("isAnExcludedValueSet");
		a_c.addText("getExcludedValue");
	}
	public void c322_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterStatistics"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.MethodCall, 46);
	}

	public void c323_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("<init>");
		a_c.addText("X");
		a_c.addText("Y");
		a_c.addText("Z");
		a_c.addText("toString");
		a_c.addText("{X: ");
		a_c.addText(", Y: ");
		a_c.addText(", Z: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("colorXyz");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("95.05");
		a_c.addText("100.0");
		a_c.addText("108.9");
		a_c.addText("41.24");
		a_c.addText("21.26");
		a_c.addText("1.93");
		a_c.addText("35.76");
		a_c.addText("71.52");
		a_c.addText("11.92");
		a_c.addText("18.05");
		a_c.addText("7.22");
		a_c.addText("95.05");
	}
	public void c323_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorXyz"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorXyz"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.LocalVar, 116);
		d(m_classes.get("org.apache.commons.imaging.color.ColorXyz"), m_classes.get("long"), dmDependency.Type.LocalVar, 129);
		d(m_classes.get("org.apache.commons.imaging.color.ColorXyz"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.ConstructorCall, new int[]{39, 49, 59, 69, 79});
		d(m_classes.get("org.apache.commons.imaging.color.ColorXyz"), m_classes.get("org.apache.commons.imaging.color.ColorXyz"), dmDependency.Type.OwnFieldUse, new int[]{39, 49, 59, 69, 79});
	}

	public void c324_texts(dmClass a_c) {
		a_c.addText("<clinit>");
		a_c.addText("10");
	}

	public void c325_texts(dmClass a_c) {
		a_c.addText("COMPARATOR");
		a_c.addText("<init>");
		a_c.addText("performNextMedianCut");
		a_c.addText("colorGroups");
		a_c.addText("ignoreAlpha");
		a_c.addText("colorGroup");
		a_c.addText("doCut");
		a_c.addText("2.0");
		a_c.addText("Bad mode.");
		a_c.addText("colorCount");
		a_c.addText("newDiff");
		a_c.addText("oldDiff");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("limit");
		a_c.addText("colorGroup");
		a_c.addText("mode");
		a_c.addText("colorGroups");
		a_c.addText("ignoreAlpha");
		a_c.addText("colorCounts");
		a_c.addText("countHalf");
		a_c.addText("oldCount");
		a_c.addText("newCount");
		a_c.addText("medianIndex");
		a_c.addText("colorCounts1");
		a_c.addText("colorCounts2");
		a_c.addText("less");
		a_c.addText("more");
		a_c.addText("medianValue");
		a_c.addText("limit");
		a_c.addText("lambda$static$0");
		a_c.addText("cg1");
		a_c.addText("cg2");
		a_c.addText("<clinit>");
	}
	public void c324_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, new int[]{104, 104, 104, 104, 104});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut$1"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.FieldUse, new int[]{104, 104, 104, 104});
	}
	public void c325_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.MedianCut"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{26, 56});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Argument, new int[]{26, 56, 56, 121, 121});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.FieldUse, new int[]{40, 43, 43, 43, 43, 43, 43, 48, 48, 48, 48, 51, 51, 64, 120, 28, 28, 29, 29, 31, 31});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.FieldUse, new int[]{47, 50, 52, 54});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.LocalVar, new int[]{56, 121, 121});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Argument, 56);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.MethodCall, 62);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCountComparator"), dmDependency.Type.ConstructorCall, 63);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.FieldUse, new int[]{71, 106, 109, 112, 115});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.ConstructorCall, new int[]{97, 99});
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut$1"), dmDependency.Type.FieldUse, 104);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.MethodCall, 104);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), dmDependency.Type.ConstructorCall, 120);
		d(m_classes.get("org.apache.commons.imaging.palette.LongestAxisMedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.LocalVar, new int[]{121, 121, 121, 121, 121});
	}

	public void c327_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".jpg");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getName");
		a_c.addText("Jpeg-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".jpg");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getBufferedImage");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("jpegDecoder");
		a_c.addText("keepMarker");
		a_c.addText("marker2");
		a_c.addText("marker");
		a_c.addText("markers");
		a_c.addText("readSegments");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("65472");
		a_c.addText("65473");
		a_c.addText("65474");
		a_c.addText("65475");
		a_c.addText("65477");
		a_c.addText("65478");
		a_c.addText("6");
		a_c.addText("65479");
		a_c.addText("7");
		a_c.addText("65481");
		a_c.addText("8");
		a_c.addText("65482");
		a_c.addText("9");
		a_c.addText("65483");
		a_c.addText("10");
		a_c.addText("65485");
		a_c.addText("11");
		a_c.addText("65486");
		a_c.addText("12");
		a_c.addText("65487");
		a_c.addText("byteSource");
		a_c.addText("markers");
		a_c.addText("returnAfterFirst");
		a_c.addText("readEverything");
		a_c.addText("result");
		a_c.addText("parser");
		a_c.addText("sofnSegments");
		a_c.addText("visitor");
		a_c.addText("assembleSegments");
		a_c.addText("e");
		a_c.addText("segments");
		a_c.addText("assembleSegments");
		a_c.addText("No App2 Segments Found.");
		a_c.addText("App2 Segments Missing.  Found: ");
		a_c.addText(", Expected: ");
		a_c.addText(".");
		a_c.addText("Incoherent App2 Segment Ordering.  i: ");
		a_c.addText(", segment[");
		a_c.addText("].curMarker: ");
		a_c.addText(".");
		a_c.addText("Inconsistent App2 Segment Count info.  markerCount: ");
		a_c.addText(", segment[");
		a_c.addText("].numMarkers: ");
		a_c.addText(".");
		a_c.addText("8");
		a_c.addText("segment");
		a_c.addText("i");
		a_c.addText("segment");
		a_c.addText("segments");
		a_c.addText("startWithZero");
		a_c.addText("markerCount");
		a_c.addText("offset");
		a_c.addText("total");
		a_c.addText("result");
		a_c.addText("progress");
		a_c.addText("dumpSegments");
		a_c.addText("dumpSegments: ");
		a_c.addText(": ");
		a_c.addText(" / ");
		a_c.addText("segment");
		a_c.addText("i");
		a_c.addText("v");
		a_c.addText("readSegments");
		a_c.addText("byteSource");
		a_c.addText("markers");
		a_c.addText("returnAfterFirst");
		a_c.addText("getICCProfileBytes");
		a_c.addText("10");
		a_c.addText("65506");
		a_c.addText("bytes: ");
		a_c.addText("segment");
		a_c.addText("s");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("segments");
		a_c.addText("filtered");
		a_c.addText("bytes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("exif");
		a_c.addText("photoshop");
		a_c.addText("isExifAPP1Segment");
		a_c.addText("segment");
		a_c.addText("filterAPP1Segments");
		a_c.addText("segment");
		a_c.addText("s");
		a_c.addText("segments");
		a_c.addText("result");
		a_c.addText("getExifMetadata");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("bytes");
		a_c.addText("getExifRawData");
		a_c.addText("10");
		a_c.addText("65505");
		a_c.addText("exif_segments.size: ");
		a_c.addText("Imaging currently can\'t parse EXIF metadata split across multiple APP1 segments.  Please send this image to the Imaging project.");
		a_c.addText("trimmed exif bytes");
		a_c.addText("6");
		a_c.addText("byteSource");
		a_c.addText("segments");
		a_c.addText("exifSegments");
		a_c.addText("segment");
		a_c.addText("bytes");
		a_c.addText("hasExifSegment");
		a_c.addText("4");
		a_c.addText("byteSource");
		a_c.addText("result");
		a_c.addText("visitor");
		a_c.addText("hasIptcSegment");
		a_c.addText("4");
		a_c.addText("byteSource");
		a_c.addText("result");
		a_c.addText("visitor");
		a_c.addText("hasXmpSegment");
		a_c.addText("4");
		a_c.addText("byteSource");
		a_c.addText("result");
		a_c.addText("visitor");
		a_c.addText("getXmpXml");
		a_c.addText("Jpeg file contains more than one XMP segment.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("result");
		a_c.addText("visitor");
		a_c.addText("getPhotoshopMetadata");
		a_c.addText("10");
		a_c.addText("65517");
		a_c.addText("Jpeg contains more than one Photoshop App13 segment.");
		a_c.addText("segment");
		a_c.addText("data");
		a_c.addText("s");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("segments");
		a_c.addText("photoshopApp13Data");
		a_c.addText("getImageSize");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("65472");
		a_c.addText("65473");
		a_c.addText("65474");
		a_c.addText("65475");
		a_c.addText("65477");
		a_c.addText("65478");
		a_c.addText("6");
		a_c.addText("65479");
		a_c.addText("7");
		a_c.addText("65481");
		a_c.addText("8");
		a_c.addText("65482");
		a_c.addText("9");
		a_c.addText("65483");
		a_c.addText("10");
		a_c.addText("65485");
		a_c.addText("11");
		a_c.addText("65486");
		a_c.addText("12");
		a_c.addText("65487");
		a_c.addText("No JFIF Data Found.");
		a_c.addText("Redundant JFIF Data Found.");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("segments");
		a_c.addText("fSOFNSegment");
		a_c.addText("getImageInfo");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("65472");
		a_c.addText("65473");
		a_c.addText("65474");
		a_c.addText("65475");
		a_c.addText("65477");
		a_c.addText("65478");
		a_c.addText("6");
		a_c.addText("65479");
		a_c.addText("7");
		a_c.addText("65481");
		a_c.addText("8");
		a_c.addText("65482");
		a_c.addText("9");
		a_c.addText("65483");
		a_c.addText("10");
		a_c.addText("65485");
		a_c.addText("11");
		a_c.addText("65486");
		a_c.addText("12");
		a_c.addText("65487");
		a_c.addText("No SOFN Data Found.");
		a_c.addText("10");
		a_c.addText("65504");
		a_c.addText("No SOFN Data Found.");
		a_c.addText("10");
		a_c.addText("65518");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("Jpeg/JFIF v.");
		a_c.addText(".");
		a_c.addText("2.54");
		a_c.addText("2.54");
		a_c.addText("Jpeg/DCM");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("10");
		a_c.addText("65534");
		a_c.addText("JPEG (Joint Photographic Experts Group) Format");
		a_c.addText("image/jpeg");
		a_c.addText("65474");
		a_c.addText("82");
		a_c.addText("71");
		a_c.addText("66");
		a_c.addText("65");
		a_c.addText("67");
		a_c.addText("99");
		a_c.addText("89");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("JPEG (Joint Photographic Experts Group) Format");
		a_c.addText("image/jpeg");
		a_c.addText("densityUnits");
		a_c.addText("formatDetails");
		a_c.addText("field");
		a_c.addText("field");
		a_c.addText("densityUnits");
		a_c.addText("field");
		a_c.addText("metadata");
		a_c.addText("comSegment");
		a_c.addText("comment");
		a_c.addText("commentSegment");
		a_c.addText("colorTransform");
		a_c.addText("id");
		a_c.addText("component");
		a_c.addText("id");
		a_c.addText("component");
		a_c.addText("component");
		a_c.addText("minHorizontalSamplingFactor");
		a_c.addText("maxHorizontalSmaplingFactor");
		a_c.addText("minVerticalSamplingFactor");
		a_c.addText("maxVerticalSamplingFactor");
		a_c.addText("isSubsampled");
		a_c.addText("haveR");
		a_c.addText("haveG");
		a_c.addText("haveB");
		a_c.addText("haveA");
		a_c.addText("haveC");
		a_c.addText("havec");
		a_c.addText("haveY");
		a_c.addText("have1");
		a_c.addText("have2");
		a_c.addText("have3");
		a_c.addText("have4");
		a_c.addText("haveOther");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("SOF_segments");
		a_c.addText("jfifSegments");
		a_c.addText("fSOFNSegment");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("jfifSegment");
		a_c.addText("app14Segments");
		a_c.addText("app14Segment");
		a_c.addText("xDensity");
		a_c.addText("yDensity");
		a_c.addText("unitsPerInch");
		a_c.addText("formatDetails");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("commentSegments");
		a_c.addText("comments");
		a_c.addText("numberOfComponents");
		a_c.addText("precision");
		a_c.addText("bitsPerPixel");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("dumpImageFile");
		a_c.addText("jpeg.dumpImageFile");
		a_c.addText("No Segments Found.");
		a_c.addText(": marker: ");
		a_c.addText(", ");
		a_c.addText(" (length: ");
		a_c.addText(")");
		a_c.addText("imageInfo");
		a_c.addText("segment");
		a_c.addText("nf");
		a_c.addText("d");
		a_c.addText("segments");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("access$000");
		a_c.addText("x0");
		a_c.addText("x1");
		a_c.addText("x2");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/jpeg/JpegImageParser;");
		a_c.addText(".jpg");
		a_c.addText(".jpeg");
	}

	public void c328_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65497");
		a_c.addText("65505");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}

	public void c329_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65497");
		a_c.addText("65505");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}

	public void c330_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65497");
		a_c.addText("65517");
		a_c.addText("65518");
		a_c.addText("65506");
		a_c.addText("65504");
		a_c.addText("65499");
		a_c.addText("65505");
		a_c.addText("65519");
		a_c.addText("65534");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}

	public void c331_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65497");
		a_c.addText("65517");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}

	public void c332_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("visitSegment");
		a_c.addText("65497");
		a_c.addText("65505");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("markerLength");
		a_c.addText("markerLengthBytes");
		a_c.addText("segmentData");
	}
	public void c327_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{80, 808});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{97, 118, 205, 212, 277, 281, 311, 343, 360, 398, 440, 482, 523, 583, 612, 646, 950});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{97, 118, 277, 281, 311, 343, 360, 398, 440, 482, 523, 583, 612, 646, 950});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{97, 118, 277, 281, 311, 343, 360, 398, 440, 482, 523, 583, 612, 646, 950});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 97);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), dmDependency.Type.ConstructorCall, 103);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), dmDependency.Type.MethodCall, 104);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Returns, new int[]{118, 277, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), dmDependency.Type.ConstructorCall, 143);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.ConstructorCall, new int[]{203, 438, 480, 521, 574});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.MethodCall, new int[]{203, 438, 480, 521, 574});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.LocalVar, new int[]{205, 311, 343, 398, 398, 612, 950, 950, 950, 996, 996});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.LocalVar, 205);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.LocalVar, new int[]{205, 440, 482, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.Argument, new int[]{205, 212});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{205, 212, 281, 360});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{219, 226, 239, 247, 386, 580, 603, 637, 641, 674, 689, 977});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.FieldUse, new int[]{222, 237, 239, 245, 247, 274, 274});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.MethodCall, new int[]{253, 260, 260, 261, 295});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.LocalVar, new int[]{264, 264, 277, 311});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{264, 311, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.Argument, new int[]{264, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, new int[]{268, 269, 274, 276});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 311);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), dmDependency.Type.ConstructorCall, 326);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.Argument, 326);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.MethodCall, new int[]{330, 392});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 330);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{330, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.GenericSegment"), dmDependency.Type.LocalVar, new int[]{343, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageMetadata"), dmDependency.Type.Returns, 343);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), dmDependency.Type.ConstructorCall, 360);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), dmDependency.Type.MethodCall, 360);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), dmDependency.Type.ConstructorCall, 405);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), dmDependency.Type.ConstructorCall, 447);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), dmDependency.Type.ConstructorCall, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), dmDependency.Type.ConstructorCall, 542);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.Returns, 583);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), dmDependency.Type.MethodCall, 600);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), dmDependency.Type.ConstructorCall, 612);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), dmDependency.Type.LocalVar, 612);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.LocalVar, 612);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 612);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.FieldUse, new int[]{646, 646, 692, 693, 804, 805, 814});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 646);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 646);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), dmDependency.Type.FieldUse, new int[]{718, 719, 720, 724, 724});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{745, 751, 757});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), dmDependency.Type.MethodCall, new int[]{745, 751, 757});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{747, 753, 759});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), dmDependency.Type.MethodCall, 800);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 800);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, new int[]{820, 827, 829, 832, 834, 838, 840, 844, 846, 869, 871, 900, 902, 905, 907, 932, 934, 938, 940});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), dmDependency.Type.MethodCall, new int[]{823, 824});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.MethodCall, new int[]{854, 881, 914});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.FieldUse, new int[]{855, 882, 915, 916, 918, 919, 921, 922, 924, 925});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 948);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{950, 950, 950});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageMetadata"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.LocalVar, new int[]{950, 950, 950});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 950);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{960, 971, 986, 993});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 968);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.text.NumberFormat"), dmDependency.Type.MethodCall, new int[]{984, 989});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.FieldUse, new int[]{986, 988});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), dmDependency.Type.MethodCall, new int[]{988, 990});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 996);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("java.text.NumberFormat"), dmDependency.Type.LocalVar, 996);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.Argument, 996);
	}
	public void c328_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{546, 546, 553, 553, 553});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 553);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 553);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), dmDependency.Type.ConstructorCall, new int[]{565, 566});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$5"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), dmDependency.Type.MethodCall, new int[]{565, 566});
	}
	public void c329_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{493, 493, 500, 500, 500});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 500);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 500);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), dmDependency.Type.ConstructorCall, 512);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$4"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), dmDependency.Type.MethodCall, 512);
	}
	public void c330_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.OwnFieldUse, new int[]{143, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{147, 147, 154, 154, 154});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.FieldUse, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), dmDependency.Type.ConstructorCall, 177);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), dmDependency.Type.ConstructorCall, 179);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App2Segment"), dmDependency.Type.ConstructorCall, 181);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.JfifSegment"), dmDependency.Type.ConstructorCall, 183);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.ConstructorCall, 185);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), dmDependency.Type.ConstructorCall, 187);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.UnknownSegment"), dmDependency.Type.ConstructorCall, 190);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.ComSegment"), dmDependency.Type.ConstructorCall, 192);
	}
	public void c331_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{451, 451, 458, 458, 458});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 458);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 458);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.ConstructorCall, 470);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$3"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.MethodCall, 470);
	}
	public void c332_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{409, 409, 416, 416, 416});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 416);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 416);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, 428);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser$2"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 428);
	}

	public void c333_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("isXmpJpegSegment");
		a_c.addText("segmentData");
		a_c.addText("parseXmpJpegSegment");
		a_c.addText("Invalid JPEG XMP Segment.");
		a_c.addText("segmentData");
		a_c.addText("index");
	}
	public void c333_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{32, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegConstants"), dmDependency.Type.FieldUse, new int[]{35, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.MethodCall, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegXmpParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 46);
	}

	public void c335_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("interpretPixel");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
	}
	public void c335_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 39);
	}

	public void c336_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c336_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("byte"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("byte"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 32);
	}

	public void c337_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("isOffset");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataTypes");
		a_c.addText("length");
		a_c.addText("exifDirectory");
		a_c.addText("isOffset");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c337_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 30, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{29, 33});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{29, 33, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.LocalVar, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{39, 42});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("byte"), dmDependency.Type.Argument, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{42, 46});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), m_classes.get("byte"), dmDependency.Type.Returns, 42);
	}

	public void c338_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("nextToken");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("34");
		a_c.addText("34");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("Unterminated string in XPM file");
		a_c.addText("95");
		a_c.addText("34");
		a_c.addText("34");
		a_c.addText("95");
		a_c.addText("123");
		a_c.addText("125");
		a_c.addText("91");
		a_c.addText("93");
		a_c.addText("42");
		a_c.addText("59");
		a_c.addText("61");
		a_c.addText("44");
		a_c.addText("32");
		a_c.addText("9");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("Unhandled/invalid character \'");
		a_c.addText("\' found in XPM file");
		a_c.addText("Unterminated string ends XMP file");
		a_c.addText("c");
		a_c.addText("inString");
		a_c.addText("inIdentifier");
		a_c.addText("hadBackSlash");
		a_c.addText("token");
		a_c.addText("preprocess");
		a_c.addText("42");
		a_c.addText("42");
		a_c.addText("47");
		a_c.addText("42");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("39");
		a_c.addText("92");
		a_c.addText("39");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("Unterminated single quote in file");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("34");
		a_c.addText("92");
		a_c.addText("34");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("Unterminated string in file");
		a_c.addText("92");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("Bad preprocessor directive");
		a_c.addText("define");
		a_c.addText("Invalid/unsupported preprocessor directive \'");
		a_c.addText("\'");
		a_c.addText("47");
		a_c.addText("47");
		a_c.addText("42");
		a_c.addText("39");
		a_c.addText("47");
		a_c.addText("34");
		a_c.addText("47");
		a_c.addText("35");
		a_c.addText("Unexpected preprocessor directive");
		a_c.addText("47");
		a_c.addText("32");
		a_c.addText("9");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("47");
		a_c.addText("42");
		a_c.addText("Unterminated string at the end of file");
		a_c.addText("Unterminated comment at the end of file");
		a_c.addText("tokens");
		a_c.addText("c");
		a_c.addText("is");
		a_c.addText("firstComment");
		a_c.addText("defines");
		a_c.addText("inSingleQuotes");
		a_c.addText("inString");
		a_c.addText("inComment");
		a_c.addText("inDirective");
		a_c.addText("hadSlash");
		a_c.addText("hadStar");
		a_c.addText("hadBackSlash");
		a_c.addText("out");
		a_c.addText("seenFirstComment");
		a_c.addText("directiveBuffer");
		a_c.addText("tokenizeRow");
		a_c.addText("[ \t]");
		a_c.addText("token");
		a_c.addText("token");
		a_c.addText("row");
		a_c.addText("tokens");
		a_c.addText("numLiveTokens");
		a_c.addText("liveTokens");
		a_c.addText("next");
		a_c.addText("unescapeString");
		a_c.addText("Parsing XPM file failed, string is too short");
		a_c.addText("34");
		a_c.addText("34");
		a_c.addText("Parsing XPM file failed, string not surrounded by \'\"\'");
		a_c.addText("92");
		a_c.addText("92");
		a_c.addText("34");
		a_c.addText("34");
		a_c.addText("39");
		a_c.addText("39");
		a_c.addText("120");
		a_c.addText("Parsing XPM file failed, hex constant in string too short");
		a_c.addText("16");
		a_c.addText("Parsing XPM file failed, hex constant invalid");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("48");
		a_c.addText("55");
		a_c.addText("48");
		a_c.addText("55");
		a_c.addText("8");
		a_c.addText("48");
		a_c.addText("97");
		a_c.addText("7");
		a_c.addText("98");
		a_c.addText("8");
		a_c.addText("102");
		a_c.addText("12");
		a_c.addText("110");
		a_c.addText("10");
		a_c.addText("114");
		a_c.addText("13");
		a_c.addText("116");
		a_c.addText("9");
		a_c.addText("118");
		a_c.addText("11");
		a_c.addText("Parsing XPM file failed, invalid escape sequence");
		a_c.addText("92");
		a_c.addText("34");
		a_c.addText("Parsing XPM file failed, extra \'\"\' found in string");
		a_c.addText("Parsing XPM file failed, unterminated escape sequence found in string");
		a_c.addText("constant");
		a_c.addText("nfe");
		a_c.addText("hex1");
		a_c.addText("hex2");
		a_c.addText("constant");
		a_c.addText("j");
		a_c.addText("length");
		a_c.addText("constant");
		a_c.addText("c");
		a_c.addText("i");
		a_c.addText("stringBuilder");
		a_c.addText("string");
		a_c.addText("hadBackSlash");
	}
	public void c338_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.PushbackInputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.PushbackInputStream"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.PushbackInputStream"), dmDependency.Type.OwnFieldUse, new int[]{38, 49, 71, 49});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{39, 101});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{39, 101, 287});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.PushbackInputStream"), dmDependency.Type.MethodCall, new int[]{49, 71, 49});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{61, 88, 99, 161, 187, 200, 203, 241, 264, 267, 293, 298, 313, 324, 362, 370, 378});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 101);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.Returns, 101);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 114);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{117, 117});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{146, 147, 154, 159, 164, 167, 172, 173, 180, 185, 190, 193, 215, 223, 227, 230, 234, 237, 246, 249, 258, 261});
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 269);
		d(m_classes.get("org.apache.commons.imaging.common.BasicCParser"), m_classes.get("char"), dmDependency.Type.LocalVar, new int[]{381, 381, 381});
	}

	public void c339_texts(dmClass a_c) {
		a_c.addText("ICNS_16x12_1BIT_IMAGE_AND_MASK");
		a_c.addText("ICNS_16x12_4BIT_IMAGE");
		a_c.addText("ICNS_16x12_8BIT_IMAGE");
		a_c.addText("ICNS_16x16_8BIT_MASK");
		a_c.addText("ICNS_16x16_1BIT_IMAGE_AND_MASK");
		a_c.addText("ICNS_16x16_4BIT_IMAGE");
		a_c.addText("ICNS_16x16_8BIT_IMAGE");
		a_c.addText("ICNS_16x16_32BIT_IMAGE");
		a_c.addText("ICNS_32x32_8BIT_MASK");
		a_c.addText("ICNS_32x32_1BIT_IMAGE");
		a_c.addText("ICNS_32x32_1BIT_IMAGE_AND_MASK");
		a_c.addText("ICNS_32x32_4BIT_IMAGE");
		a_c.addText("ICNS_32x32_8BIT_IMAGE");
		a_c.addText("ICNS_32x32_32BIT_IMAGE");
		a_c.addText("ICNS_48x48_8BIT_MASK");
		a_c.addText("ICNS_48x48_1BIT_IMAGE_AND_MASK");
		a_c.addText("ICNS_48x48_4BIT_IMAGE");
		a_c.addText("ICNS_48x48_8BIT_IMAGE");
		a_c.addText("ICNS_48x48_32BIT_IMAGE");
		a_c.addText("ICNS_128x128_8BIT_MASK");
		a_c.addText("ICNS_128x128_32BIT_IMAGE");
		a_c.addText("ICNS_16x16_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_32x32_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_64x64_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_128x128_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_256x256_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_512x512_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_1024x1024_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_32x32_2x_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_64x64_2x_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_256x256_2x_32BIT_ARGB_IMAGE");
		a_c.addText("ICNS_512x512_2x_32BIT_ARGB_IMAGE");
		a_c.addText("ALL_IMAGE_TYPES");
		a_c.addText("ALL_MASK_TYPES");
		a_c.addText("type");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitsPerPixel");
		a_c.addText("hasMask");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/icns/IcnsType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitsPerPixel");
		a_c.addText("hasMask");
		a_c.addText("getType");
		a_c.addText("getWidth");
		a_c.addText("getHeight");
		a_c.addText("getBitsPerPixel");
		a_c.addText("hasMask");
		a_c.addText("toString");
		a_c.addText("[width=");
		a_c.addText(",height=");
		a_c.addText(",bpp=");
		a_c.addText(",hasMask=");
		a_c.addText("]");
		a_c.addText("findAnyType");
		a_c.addText("allImageType");
		a_c.addText("allMaskType");
		a_c.addText("type");
		a_c.addText("findImageType");
		a_c.addText("allImageType");
		a_c.addText("type");
		a_c.addText("find8BPPMaskType");
		a_c.addText("8");
		a_c.addText("allMaskType");
		a_c.addText("imageType");
		a_c.addText("find1BPPMaskType");
		a_c.addText("allMaskType");
		a_c.addText("imageType");
		a_c.addText("typeAsInt");
		a_c.addText("Invalid ICNS type");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("type");
		a_c.addText("bytes");
		a_c.addText("describeType");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("type");
		a_c.addText("bytes");
		a_c.addText("<clinit>");
		a_c.addText("ICNS_16x12_1BIT_IMAGE_AND_MASK");
		a_c.addText("icm#");
		a_c.addText("16");
		a_c.addText("12");
		a_c.addText("ICNS_16x12_4BIT_IMAGE");
		a_c.addText("icm4");
		a_c.addText("16");
		a_c.addText("12");
		a_c.addText("ICNS_16x12_8BIT_IMAGE");
		a_c.addText("icm8");
		a_c.addText("16");
		a_c.addText("12");
		a_c.addText("8");
		a_c.addText("ICNS_16x16_8BIT_MASK");
		a_c.addText("s8mk");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("ICNS_16x16_1BIT_IMAGE_AND_MASK");
		a_c.addText("ics#");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("ICNS_16x16_4BIT_IMAGE");
		a_c.addText("ics4");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("ICNS_16x16_8BIT_IMAGE");
		a_c.addText("6");
		a_c.addText("ics8");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("ICNS_16x16_32BIT_IMAGE");
		a_c.addText("7");
		a_c.addText("is32");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_8BIT_MASK");
		a_c.addText("8");
		a_c.addText("l8mk");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("ICNS_32x32_1BIT_IMAGE");
		a_c.addText("9");
		a_c.addText("ICON");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_1BIT_IMAGE_AND_MASK");
		a_c.addText("10");
		a_c.addText("ICN#");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_4BIT_IMAGE");
		a_c.addText("11");
		a_c.addText("icl4");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_8BIT_IMAGE");
		a_c.addText("12");
		a_c.addText("icl8");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("ICNS_32x32_32BIT_IMAGE");
		a_c.addText("13");
		a_c.addText("il32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_48x48_8BIT_MASK");
		a_c.addText("14");
		a_c.addText("h8mk");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("8");
		a_c.addText("ICNS_48x48_1BIT_IMAGE_AND_MASK");
		a_c.addText("15");
		a_c.addText("ich#");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("ICNS_48x48_4BIT_IMAGE");
		a_c.addText("16");
		a_c.addText("ich4");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("ICNS_48x48_8BIT_IMAGE");
		a_c.addText("17");
		a_c.addText("ich8");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("8");
		a_c.addText("ICNS_48x48_32BIT_IMAGE");
		a_c.addText("18");
		a_c.addText("ih32");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("32");
		a_c.addText("ICNS_128x128_8BIT_MASK");
		a_c.addText("19");
		a_c.addText("t8mk");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("8");
		a_c.addText("ICNS_128x128_32BIT_IMAGE");
		a_c.addText("20");
		a_c.addText("it32");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("32");
		a_c.addText("ICNS_16x16_32BIT_ARGB_IMAGE");
		a_c.addText("21");
		a_c.addText("icp4");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_32BIT_ARGB_IMAGE");
		a_c.addText("22");
		a_c.addText("icp5");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_64x64_32BIT_ARGB_IMAGE");
		a_c.addText("23");
		a_c.addText("icp6");
		a_c.addText("64");
		a_c.addText("64");
		a_c.addText("32");
		a_c.addText("ICNS_128x128_32BIT_ARGB_IMAGE");
		a_c.addText("24");
		a_c.addText("ic07");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("32");
		a_c.addText("ICNS_256x256_32BIT_ARGB_IMAGE");
		a_c.addText("25");
		a_c.addText("ic08");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("32");
		a_c.addText("ICNS_512x512_32BIT_ARGB_IMAGE");
		a_c.addText("26");
		a_c.addText("ic09");
		a_c.addText("512");
		a_c.addText("512");
		a_c.addText("32");
		a_c.addText("ICNS_1024x1024_32BIT_ARGB_IMAGE");
		a_c.addText("27");
		a_c.addText("ic10");
		a_c.addText("1024");
		a_c.addText("1024");
		a_c.addText("32");
		a_c.addText("ICNS_32x32_2x_32BIT_ARGB_IMAGE");
		a_c.addText("28");
		a_c.addText("ic11");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("ICNS_64x64_2x_32BIT_ARGB_IMAGE");
		a_c.addText("29");
		a_c.addText("ic12");
		a_c.addText("64");
		a_c.addText("64");
		a_c.addText("32");
		a_c.addText("ICNS_256x256_2x_32BIT_ARGB_IMAGE");
		a_c.addText("30");
		a_c.addText("ic13");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("32");
		a_c.addText("ICNS_512x512_2x_32BIT_ARGB_IMAGE");
		a_c.addText("31");
		a_c.addText("ic14");
		a_c.addText("512");
		a_c.addText("512");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("28");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
	}
	public void c339_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.Returns, new int[]{1, 21, 137, 153, 162, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.OwnFieldUse, new int[]{21, 143, 148, 157, 166, 177, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 91, 91, 91, 91, 91, 91, 91, 91, 91});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.LocalVar, new int[]{153, 153, 162, 173, 184});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.Argument, new int[]{162, 173});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{188, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{192, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.ConstructorCall, new int[]{23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 21, 61, 91});
	}

	public void c340_texts(dmClass a_c) {
		a_c.addText("BYTE");
		a_c.addText("ASCII");
		a_c.addText("SHORT");
		a_c.addText("LONG");
		a_c.addText("RATIONAL");
		a_c.addText("SBYTE");
		a_c.addText("UNDEFINED");
		a_c.addText("SSHORT");
		a_c.addText("SLONG");
		a_c.addText("SRATIONAL");
		a_c.addText("FLOAT");
		a_c.addText("DOUBLE");
		a_c.addText("IFD");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("elementSize");
		a_c.addText("ANY");
		a_c.addText("SHORT_OR_LONG");
		a_c.addText("SHORT_OR_RATIONAL");
		a_c.addText("SHORT_OR_LONG_OR_RATIONAL");
		a_c.addText("LONG_OR_SHORT");
		a_c.addText("BYTE_OR_SHORT");
		a_c.addText("LONG_OR_IFD");
		a_c.addText("ASCII_OR_RATIONAL");
		a_c.addText("ASCII_OR_BYTE");
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("elementSize");
		a_c.addText("getType");
		a_c.addText("getName");
		a_c.addText("getSize");
		a_c.addText("getFieldType");
		a_c.addText("Field type ");
		a_c.addText(" is unsupported");
		a_c.addText("fieldType");
		a_c.addText("type");
		a_c.addText("getValue");
		a_c.addText("writeData");
		a_c.addText("<clinit>");
		a_c.addText("Byte");
		a_c.addText("ASCII");
		a_c.addText("Short");
		a_c.addText("Long");
		a_c.addText("Rational");
		a_c.addText("6");
		a_c.addText("SByte");
		a_c.addText("7");
		a_c.addText("Undefined");
		a_c.addText("8");
		a_c.addText("SShort");
		a_c.addText("9");
		a_c.addText("SLong");
		a_c.addText("10");
		a_c.addText("SRational");
		a_c.addText("11");
		a_c.addText("Float");
		a_c.addText("12");
		a_c.addText("Double");
		a_c.addText("13");
		a_c.addText("IFD");
		a_c.addText("13");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
	}
	public void c340_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Returns, 106);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("byte"), dmDependency.Type.Returns, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), dmDependency.Type.ConstructorCall, new int[]{32, 37, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), dmDependency.Type.OwnFieldUse, new int[]{32, 37, 38, 50, 50, 50, 74, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii"), dmDependency.Type.OwnFieldUse, new int[]{33, 50, 82, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), dmDependency.Type.ConstructorCall, new int[]{34, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), dmDependency.Type.OwnFieldUse, new int[]{34, 39, 50, 50, 58, 62, 66, 70, 74});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.ConstructorCall, new int[]{35, 40, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.OwnFieldUse, new int[]{35, 40, 44, 50, 50, 50, 58, 66, 70, 78, 78});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), dmDependency.Type.ConstructorCall, new int[]{36, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational"), dmDependency.Type.OwnFieldUse, new int[]{36, 41, 50, 50, 62, 66, 82});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), dmDependency.Type.ConstructorCall, 42);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat"), dmDependency.Type.OwnFieldUse, new int[]{42, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), dmDependency.Type.ConstructorCall, 43);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble"), dmDependency.Type.OwnFieldUse, new int[]{43, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, new int[]{50, 58, 62, 66, 70, 74, 78, 82, 86});
	}

	public void c343_texts(dmClass a_c) {
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("L");
		a_c.addText("u");
		a_c.addText("v");
		a_c.addText("<init>");
		a_c.addText("L");
		a_c.addText("u");
		a_c.addText("v");
		a_c.addText("toString");
		a_c.addText("{L: ");
		a_c.addText(", u: ");
		a_c.addText(", v: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("that");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("-0.017");
		a_c.addText("53.233");
		a_c.addText("175.053");
		a_c.addText("37.751");
		a_c.addText("87.737");
		a_c.addText("-83.08");
		a_c.addText("107.401");
		a_c.addText("32.303");
		a_c.addText("-9.4");
		a_c.addText("-130.358");
	}
	public void c343_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), m_classes.get("long"), dmDependency.Type.LocalVar, 128);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), m_classes.get("org.apache.commons.imaging.color.ColorCieLuv"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78});
	}

	public void c344_texts(dmClass a_c) {
		a_c.addText("file");
		a_c.addText("<init>");
		a_c.addText("file");
		a_c.addText("getInputStream");
		a_c.addText("getBlock");
		a_c.addText("r");
		a_c.addText("Could not read block (block start: ");
		a_c.addText(", block length: ");
		a_c.addText(", data length: ");
		a_c.addText(").");
		a_c.addText("Could not read value from file");
		a_c.addText("raf");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("getLength");
		a_c.addText("getAll");
		a_c.addText("1024");
		a_c.addText("8");
		a_c.addText("buffer");
		a_c.addText("read");
		a_c.addText("is");
		a_c.addText("baos");
		a_c.addText("getDescription");
		a_c.addText("File: \'");
		a_c.addText("\'");
	}
	public void c344_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.File"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.File"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.File"), dmDependency.Type.MethodCall, new int[]{33, 60, 79});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.File"), dmDependency.Type.OwnFieldUse, new int[]{34, 39, 44, 60, 79});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{35, 39, 60});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.InputStream"), dmDependency.Type.Returns, 35);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.FileInputStream"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.BufferedInputStream"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{39, 60});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("long"), dmDependency.Type.Argument, 39);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.RandomAccessFile"), dmDependency.Type.ConstructorCall, 44);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.RandomAccessFile"), dmDependency.Type.MethodCall, new int[]{47, 50, 55, 55, 55, 55});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 53);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.RandomAccessFile"), dmDependency.Type.LocalVar, 55);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("long"), dmDependency.Type.Returns, 55);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 65);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{70, 74, 74, 74, 74});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{71, 73});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("byte"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 74);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 74);
	}

	public void c345_texts(dmClass a_c) {
		a_c.addText("CYAN");
		a_c.addText("MAGENTA");
		a_c.addText("YELLOW");
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("K");
		a_c.addText("<init>");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("K");
		a_c.addText("toString");
		a_c.addText("{C: ");
		a_c.addText(", M: ");
		a_c.addText(", Y: ");
		a_c.addText(", K: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("colorCmyk");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
	}
	public void c345_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.LocalVar, 158);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), m_classes.get("long"), dmDependency.Type.LocalVar, 173);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.ConstructorCall, new int[]{39, 50, 61, 72, 83, 94, 105, 116});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorCmyk"), dmDependency.Type.OwnFieldUse, new int[]{39, 50, 61, 72, 83, 94, 105, 116});
	}

	public void c346_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("bytes");
		a_c.addText("getItemLength");
		a_c.addText("getItemDescription");
		a_c.addText("updateValue");
		a_c.addText("Updated data size mismatch: ");
		a_c.addText(" vs. ");
		a_c.addText("bytes");
		a_c.addText("writeItem");
		a_c.addText("bos");
	}

	public void c347_texts(dmClass a_c) {
		a_c.addText("UNDEFINED_VALUE");
		a_c.addText("-1");
		a_c.addText("offset");
		a_c.addText("<init>");
		a_c.addText("-1");
		a_c.addText("getOffset");
		a_c.addText("setOffset");
		a_c.addText("offset");
		a_c.addText("getItemLength");
		a_c.addText("getItemDescription");
		a_c.addText("writeItem");
	}
	public void c346_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.ConstructorCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{50, 55, 64, 65, 68, 74});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{60, 69});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, 74);
	}
	public void c347_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("long"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{27, 30, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("long"), dmDependency.Type.Returns, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("long"), dmDependency.Type.Argument, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 35);
	}

	public void c348_texts(dmClass a_c) {
		a_c.addText("ALPHA");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("shift");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/palette/ColorComponent;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("shift");
		a_c.addText("argbComponent");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("<clinit>");
		a_c.addText("ALPHA");
		a_c.addText("24");
		a_c.addText("RED");
		a_c.addText("16");
		a_c.addText("GREEN");
		a_c.addText("8");
		a_c.addText("BLUE");
	}
	public void c348_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.Returns, new int[]{1, 24});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.OwnFieldUse, new int[]{24, 25, 26, 27, 28, 24, 24, 24, 24, 24});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), m_classes.get("org.apache.commons.imaging.palette.ColorComponent"), dmDependency.Type.ConstructorCall, new int[]{25, 26, 27, 28, 24});
	}

	public void c349_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("isOffset");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c349_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 28});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{27, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{27, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{32, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("byte"), dmDependency.Type.Argument, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{35, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), m_classes.get("byte"), dmDependency.Type.Returns, 35);
	}

	public void c350_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("limit");
		a_c.addText("value");
		a_c.addText("min");
		a_c.addText("max");
		a_c.addText("convertYCbCrtoRGB");
		a_c.addText("1.164");
		a_c.addText("16.0");
		a_c.addText("1.596");
		a_c.addText("128.0");
		a_c.addText("1.164");
		a_c.addText("16.0");
		a_c.addText("0.813");
		a_c.addText("128.0");
		a_c.addText("0.392");
		a_c.addText("128.0");
		a_c.addText("1.164");
		a_c.addText("16.0");
		a_c.addText("2.017");
		a_c.addText("128.0");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Y");
		a_c.addText("Cb");
		a_c.addText("Cr");
		a_c.addText("r1");
		a_c.addText("g1");
		a_c.addText("b1");
		a_c.addText("r");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("interpretPixel");
		a_c.addText("1.402");
		a_c.addText("128.0");
		a_c.addText("0.34414");
		a_c.addText("128.0");
		a_c.addText("0.71414");
		a_c.addText("128.0");
		a_c.addText("1.772");
		a_c.addText("128.0");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("Y");
		a_c.addText("Cb");
		a_c.addText("Cr");
		a_c.addText("R");
		a_c.addText("G");
		a_c.addText("B");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
	}
	public void c350_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 64);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 83);
	}

	public void c351_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("9");
		a_c.addText("Invalid data");
		a_c.addText("numbers");
		a_c.addText("i");
		a_c.addText("numbers");
		a_c.addText("values");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c351_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{32, 33, 34, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{34, 36, 42, 45, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("byte"), dmDependency.Type.LocalVar, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("byte"), dmDependency.Type.Returns, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort"), m_classes.get("short"), dmDependency.Type.LocalVar, new int[]{54, 54});
	}

	public void c352_texts(dmClass a_c) {
		a_c.addText("rgb");
		a_c.addText("<init>");
		a_c.addText("PLTE: wrong length: ");
		a_c.addText("10");
		a_c.addText("red[");
		a_c.addText("]");
		a_c.addText("Not a Valid Png File: PLTE Corrupt");
		a_c.addText("green[");
		a_c.addText("]");
		a_c.addText("Not a Valid Png File: PLTE Corrupt");
		a_c.addText("blue[");
		a_c.addText("]");
		a_c.addText("Not a Valid Png File: PLTE Corrupt");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("i");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("count");
		a_c.addText("getRgb");
		a_c.addText("getRGB");
		a_c.addText("PNG: unknown Palette reference: ");
		a_c.addText("index");
		a_c.addText("correct");
		a_c.addText("i");
		a_c.addText("gammaCorrection");
	}
	public void c352_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{1, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{37, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{45, 47, 49});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.Argument, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.MethodCall, 81);
	}

	public void c353_texts(dmClass a_c) {
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("languageTag");
		a_c.addText("translatedKeyword");
		a_c.addText("<init>");
		a_c.addText("PNG iTXt chunk keyword is not terminated.");
		a_c.addText("PNG iTXt chunk has invalid compression flag: ");
		a_c.addText("PNG iTXt chunk has unexpected compression method: ");
		a_c.addText("PNG iTXt chunk language tag is not terminated.");
		a_c.addText("PNG iTXt chunk translated keyword is not terminated.");
		a_c.addText("8");
		a_c.addText("compressedTextLength");
		a_c.addText("compressedText");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("terminator");
		a_c.addText("index");
		a_c.addText("compressionFlag");
		a_c.addText("compressed");
		a_c.addText("compressionMethod");
		a_c.addText("getKeyword");
		a_c.addText("getText");
		a_c.addText("getContents");
	}
	public void c353_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{51, 74, 82, 96});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{53, 62, 71, 76, 84});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{57, 79, 87, 96, 100});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 96);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("byte"), dmDependency.Type.LocalVar, 102);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Returns, 117);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Itxt"), dmDependency.Type.ConstructorCall, 122);
	}

	public void c354_texts(dmClass a_c) {
		a_c.addText("cut");
		a_c.addText("paletteIndex");
		a_c.addText("colorCounts");
		a_c.addText("ignoreAlpha");
		a_c.addText("minRed");
		a_c.addText("maxRed");
		a_c.addText("minGreen");
		a_c.addText("maxGreen");
		a_c.addText("minBlue");
		a_c.addText("maxBlue");
		a_c.addText("minAlpha");
		a_c.addText("maxAlpha");
		a_c.addText("alphaDiff");
		a_c.addText("redDiff");
		a_c.addText("greenDiff");
		a_c.addText("blueDiff");
		a_c.addText("maxDiff");
		a_c.addText("diffTotal");
		a_c.addText("totalPoints");
		a_c.addText("<init>");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("2147483647");
		a_c.addText("-2147483648");
		a_c.addText("empty color_group");
		a_c.addText("color");
		a_c.addText("colorCounts");
		a_c.addText("ignoreAlpha");
		a_c.addText("total");
		a_c.addText("contains");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("getMedianValue");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("color");
		a_c.addText("countTotal");
		a_c.addText("alphaTotal");
		a_c.addText("redTotal");
		a_c.addText("greenTotal");
		a_c.addText("blueTotal");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("getColorCounts");
		a_c.addText("toString");
		a_c.addText("{ColorGroup. minRed: ");
		a_c.addText(", maxRed: ");
		a_c.addText(", minGreen: ");
		a_c.addText(", maxGreen: ");
		a_c.addText(", minBlue: ");
		a_c.addText(", maxBlue: ");
		a_c.addText(", minAlpha: ");
		a_c.addText(", maxAlpha: ");
		a_c.addText(", maxDiff: ");
		a_c.addText(", diffTotal: ");
		a_c.addText("}");
	}
	public void c354_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorGroupCut"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 55);
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.FieldUse, new int[]{60, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 113, 114, 114, 115, 115, 116, 116});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.LocalVar, new int[]{81, 124});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{124, 124, 124, 124, 124});
		d(m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.Returns, 124);
	}

	public void c355_texts(dmClass a_c) {
		a_c.addText("interval");
		a_c.addText("nextPos");
		a_c.addText("cnt");
		a_c.addText("b");
		a_c.addText("<init>");
		a_c.addText("interval");
		a_c.addText("hasNext");
		a_c.addText("nextBit");
		a_c.addText("Premature End of File");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("Premature End of File");
		a_c.addText("220");
		a_c.addText("DNL not yet supported");
		a_c.addText("Invalid marker found in entropy data: 0xFF ");
		a_c.addText("7");
		a_c.addText("b2");
		a_c.addText("bit");
		a_c.addText("read");
		a_c.addText("This stream hasn\'t any other value, all values were already read.");
		a_c.addText("value");
	}
	public void c355_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{48, 54, 58, 61});
	}

	public void c356_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c356_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c357_texts(dmClass a_c) {
		a_c.addText("toString");
		a_c.addText("toString");
	}

	public void c358_texts(dmClass a_c) {
		a_c.addText("toString");
		a_c.addText("getItems");
	}
	public void c357_deps() {
	}
	public void c358_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata$ImageMetadataItem"), dmDependency.Type.Returns, 1);
	}

	public void c359_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Radiance HDR");
		a_c.addText("getDefaultExtension");
		a_c.addText(".hdr");
		a_c.addText("getAcceptedExtensions");
		a_c.addText(".hdr");
		a_c.addText(".pic");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("ret");
		a_c.addText("info");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("32");
		a_c.addText("image/vnd.radiance");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("info");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getBufferedImage");
		a_c.addText("1000");
		a_c.addText("buffer");
		a_c.addText("ret");
		a_c.addText("info");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("ret");
		a_c.addText("info");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
	}
	public void c359_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 49);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{70, 87});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{70, 79, 93, 115, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{70, 79, 93, 115, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{70, 79, 93, 115, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 70);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), dmDependency.Type.ConstructorCall, new int[]{76, 85, 99, 121});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), dmDependency.Type.MethodCall, new int[]{77, 79, 79, 79, 79, 90, 91, 93, 93, 93, 93, 103, 104, 104, 111, 111, 115, 115, 115, 115, 122, 122, 124, 124, 124, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.LocalVar, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 79);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.DataBufferFloat"), dmDependency.Type.ConstructorCall, 104);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.MethodCall, 107);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.MethodCall, new int[]{108, 110});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.ComponentColorModel"), dmDependency.Type.ConstructorCall, 108);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.BandedSampleModel"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.Point"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, 109);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 109);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 115);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 122);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.LocalVar, 124);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 124);
	}

	public void c360_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("getKeyword");
		a_c.addText("getText");
		a_c.addText("getContents");
	}
	public void c360_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Returns, 25);
	}

	public void c361_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c361_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("short"), dmDependency.Type.Returns, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), m_classes.get("short"), dmDependency.Type.Argument, 31);
	}

	public void c362_texts(dmClass a_c) {
		a_c.addText("fileName");
		a_c.addText("<init>");
		a_c.addText("fileName");
		a_c.addText("getInputStream");
		a_c.addText("start");
		a_c.addText("is");
		a_c.addText("succeeded");
		a_c.addText("getInputStream");
		a_c.addText("getBlock");
		a_c.addText("4294967295");
		a_c.addText("start");
		a_c.addText("length");
		a_c.addText("getBlock");
		a_c.addText("getAll");
		a_c.addText("getLength");
		a_c.addText("getDescription");
		a_c.addText("getFileName");
	}
	public void c362_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{29, 43, 43, 49, 49, 49});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("java.io.InputStream"), dmDependency.Type.Returns, new int[]{29, 43});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("long"), dmDependency.Type.Argument, new int[]{29, 49});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 36);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{40, 40});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 43);
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{43, 49, 49});
		d(m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), m_classes.get("long"), dmDependency.Type.Returns, 49);
	}

	public void c363_texts(dmClass a_c) {
		a_c.addText("tileWidth");
		a_c.addText("tileLength");
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("byteOrder");
		a_c.addText("imageData");
		a_c.addText("<init>");
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("tileWidth");
		a_c.addText("tileLength");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("sampleFormat");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compression");
		a_c.addText("byteOrder");
		a_c.addText("imageData");
		a_c.addText("interpretTile");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("column");
		a_c.addText("j");
		a_c.addText("row");
		a_c.addText("rowOffset");
		a_c.addText("i");
		a_c.addText("i0");
		a_c.addText("i1");
		a_c.addText("j0");
		a_c.addText("j1");
		a_c.addText("samples");
		a_c.addText("b");
		a_c.addText("j");
		a_c.addText("k");
		a_c.addText("p0");
		a_c.addText("p1");
		a_c.addText("p2");
		a_c.addText("i");
		a_c.addText("rgb");
		a_c.addText("j");
		a_c.addText("k");
		a_c.addText("i");
		a_c.addText("i0");
		a_c.addText("i1");
		a_c.addText("j0");
		a_c.addText("j1");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("i");
		a_c.addText("pixelsPerTile");
		a_c.addText("tileX");
		a_c.addText("tileY");
		a_c.addText("samples");
		a_c.addText("bis");
		a_c.addText("imageBuilder");
		a_c.addText("bytes");
		a_c.addText("startX");
		a_c.addText("startY");
		a_c.addText("xLimit");
		a_c.addText("yLimit");
		a_c.addText("allSamplesAreOneByte");
		a_c.addText("readImageData");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("tile2");
		a_c.addText("imageBuilder");
		a_c.addText("bitsPerRow");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerTile");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("readImageData");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("tile");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("iCol");
		a_c.addText("iRow");
		a_c.addText("subImage");
		a_c.addText("bitsPerRow");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerTile");
		a_c.addText("col0");
		a_c.addText("col1");
		a_c.addText("row0");
		a_c.addText("row1");
		a_c.addText("nCol");
		a_c.addText("nRow");
		a_c.addText("workingWidth");
		a_c.addText("workingHeight");
		a_c.addText("nColumnsOfTiles");
		a_c.addText("x0");
		a_c.addText("y0");
		a_c.addText("workingBuilder");
		a_c.addText("readRasterData");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("xRaster");
		a_c.addText("yRaster");
		a_c.addText("rasterWidth");
		a_c.addText("rasterHeight");
		a_c.addText("tile");
		a_c.addText("compressed");
		a_c.addText("decompressed");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("blockData");
		a_c.addText("iCol");
		a_c.addText("iRow");
		a_c.addText("subImage");
		a_c.addText("bitsPerRow");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesPerTile");
		a_c.addText("xRaster");
		a_c.addText("yRaster");
		a_c.addText("rasterWidth");
		a_c.addText("rasterHeight");
		a_c.addText("rasterData");
		a_c.addText("col0");
		a_c.addText("col1");
		a_c.addText("row0");
		a_c.addText("row1");
		a_c.addText("nColumnsOfTiles");
		a_c.addText("x0");
		a_c.addText("y0");
	}
	public void c363_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), dmDependency.Type.ConstructorCall, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), dmDependency.Type.OwnFieldUse, new int[]{71, 222, 273, 333});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{72, 99, 176, 338});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{73, 211, 240, 288});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{73, 211, 240, 288});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, new int[]{73, 211});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("byte"), dmDependency.Type.Argument, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.OwnFieldUse, new int[]{108, 128, 194});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.MethodCall, new int[]{108, 194});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{167, 286, 288});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 176);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.ConstructorCall, 176);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.MethodCall, new int[]{203, 210, 210, 210, 210});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.LocalVar, 211);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Tiles"), dmDependency.Type.FieldUse, new int[]{222, 273, 333});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.MethodCall, new int[]{223, 273, 333});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{240, 240, 288, 288, 347, 347});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.LocalVar, 240);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 240);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.Argument, new int[]{240, 288});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.FieldUse, new int[]{252, 253, 253, 254, 255, 255, 282, 282, 282, 282, 288, 288, 288, 288, 306, 307, 308, 309});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 267);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 288);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Returns, 288);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.ConstructorCall, 347);
	}

	public void c364_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("read");
		a_c.addText("HDR: Unexpected EOF");
		a_c.addText("result");
		a_c.addText("readNextLine");
		a_c.addText("10");
		a_c.addText("buffer");
		a_c.addText("c");
	}
	public void c364_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{26, 30});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{27, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("char"), dmDependency.Type.Returns, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), m_classes.get("char"), dmDependency.Type.LocalVar, 45);
	}

	public void c365_texts(dmClass a_c) {
		a_c.addText("data");
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("data");
		a_c.addText("getData");
		a_c.addText("getDataLength");
	}

	public void c366_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("getElementDescription");
		a_c.addText("Element, offset: ");
		a_c.addText(", length: ");
		a_c.addText(", last: ");
	}

	public void c367_texts(dmClass a_c) {
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("COMPARATOR");
		a_c.addText("<init>");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("getElementDescription");
		a_c.addText("lambda$static$0");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("<clinit>");
	}
	public void c365_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{47, 51, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.LocalVar, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.Returns, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), m_classes.get("byte"), dmDependency.Type.MethodCall, 51);
	}
	public void c366_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$Stub"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$Stub"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$Stub"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{66, 66});
	}
	public void c367_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), m_classes.get("long"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{35, 25, 25, 27, 27});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Argument, new int[]{37, 37});
	}

	public void c368_texts(dmClass a_c) {
		a_c.addText("REDS");
		a_c.addText("BLUES");
		a_c.addText("GREENS1");
		a_c.addText("GREENS2");
		a_c.addText("<init>");
		a_c.addText("fastRound");
		a_c.addText("0.5");
		a_c.addText("x");
		a_c.addText("convertYCbCrToRGB");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Y");
		a_c.addText("Cb");
		a_c.addText("Cr");
		a_c.addText("r");
		a_c.addText("g1");
		a_c.addText("g");
		a_c.addText("b");
		a_c.addText("<clinit>");
		a_c.addText("65536");
		a_c.addText("10");
		a_c.addText("65536");
		a_c.addText("10");
		a_c.addText("65536");
		a_c.addText("10");
		a_c.addText("131072");
		a_c.addText("10");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("1.402");
		a_c.addText("128");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("1.772");
		a_c.addText("128");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("256");
		a_c.addText("256");
		a_c.addText("0.34414");
		a_c.addText("128");
		a_c.addText("0.71414");
		a_c.addText("128");
		a_c.addText("8");
		a_c.addText("135");
		a_c.addText("256");
		a_c.addText("270");
		a_c.addText("135");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("r");
		a_c.addText("Cr");
		a_c.addText("Y");
		a_c.addText("b");
		a_c.addText("Cb");
		a_c.addText("Y");
		a_c.addText("value");
		a_c.addText("Cr");
		a_c.addText("Cb");
		a_c.addText("green");
		a_c.addText("value");
		a_c.addText("Y");
	}

	public void c369_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".gif");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("GIF_HEADER_SIGNATURE");
		a_c.addText("EXTENSION_CODE");
		a_c.addText("33");
		a_c.addText("IMAGE_SEPARATOR");
		a_c.addText("44");
		a_c.addText("GRAPHIC_CONTROL_EXTENSION");
		a_c.addText("8697");
		a_c.addText("COMMENT_EXTENSION");
		a_c.addText("254");
		a_c.addText("PLAIN_TEXT_EXTENSION");
		a_c.addText("1");
		a_c.addText("XMP_EXTENSION");
		a_c.addText("255");
		a_c.addText("TERMINATOR_BYTE");
		a_c.addText("59");
		a_c.addText("APPLICATION_EXTENSION_LABEL");
		a_c.addText("255");
		a_c.addText("XMP_COMPLETE_CODE");
		a_c.addText("8703");
		a_c.addText("LOCAL_COLOR_TABLE_FLAG_MASK");
		a_c.addText("128");
		a_c.addText("INTERLACE_FLAG_MASK");
		a_c.addText("64");
		a_c.addText("SORT_FLAG_MASK");
		a_c.addText("32");
		a_c.addText("XMP_APPLICATION_ID_AND_AUTH_CODE");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Graphics Interchange Format");
		a_c.addText("getDefaultExtension");
		a_c.addText(".gif");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("readHeader");
		a_c.addText("identifier1");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("identifier2");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("identifier3");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("version1");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("version2");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("version3");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Signature");
		a_c.addText("8");
		a_c.addText("version");
		a_c.addText("56");
		a_c.addText("version");
		a_c.addText("10");
		a_c.addText("55");
		a_c.addText("57");
		a_c.addText("version");
		a_c.addText("97");
		a_c.addText("identifier: ");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("version: ");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Logical Screen Width");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Logical Screen Height");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Width");
		a_c.addText("2147483647");
		a_c.addText("Height");
		a_c.addText("2147483647");
		a_c.addText("Packed Fields");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Background Color Index");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Pixel Aspect Ratio");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("PackedFields bits");
		a_c.addText("128");
		a_c.addText("GlobalColorTableFlag: ");
		a_c.addText("7");
		a_c.addText("ColorResolution: ");
		a_c.addText("8");
		a_c.addText("SortFlag: ");
		a_c.addText("7");
		a_c.addText("SizeofGlobalColorTable: ");
		a_c.addText("Background Color Index");
		a_c.addText("is");
		a_c.addText("formatCompliance");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("identifier3");
		a_c.addText("version1");
		a_c.addText("version2");
		a_c.addText("version3");
		a_c.addText("logicalScreenWidth");
		a_c.addText("logicalScreenHeight");
		a_c.addText("packedFields");
		a_c.addText("backgroundColorIndex");
		a_c.addText("pixelAspectRatio");
		a_c.addText("globalColorTableFlag");
		a_c.addText("colorResolution");
		a_c.addText("sortFlag");
		a_c.addText("sizeofGlobalColorTable");
		a_c.addText("readGraphicControlExtension");
		a_c.addText("block_size");
		a_c.addText("GIF: corrupt GraphicControlExt");
		a_c.addText("packed fields");
		a_c.addText("GIF: corrupt GraphicControlExt");
		a_c.addText("28");
		a_c.addText("delay in milliseconds");
		a_c.addText("GIF: corrupt GraphicControlExt");
		a_c.addText("255");
		a_c.addText("transparent color index");
		a_c.addText("GIF: corrupt GraphicControlExt");
		a_c.addText("block terminator");
		a_c.addText("GIF: corrupt GraphicControlExt");
		a_c.addText("code");
		a_c.addText("is");
		a_c.addText("packed");
		a_c.addText("dispose");
		a_c.addText("transparency");
		a_c.addText("delay");
		a_c.addText("transparentColorIndex");
		a_c.addText("readSubBlock");
		a_c.addText("255");
		a_c.addText("block_size");
		a_c.addText("GIF: corrupt block");
		a_c.addText("block");
		a_c.addText("GIF: corrupt block");
		a_c.addText("is");
		a_c.addText("blockSize");
		a_c.addText("readGenericGIFBlock");
		a_c.addText("is");
		a_c.addText("code");
		a_c.addText("readGenericGIFBlock");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("code");
		a_c.addText("first");
		a_c.addText("subblocks");
		a_c.addText("readBlocks");
		a_c.addText("GIF: unexpected end of data");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("Unknown Application Extension (");
		a_c.addText(")");
		a_c.addText("Unknown block");
		a_c.addText("GIF: unknown code: ");
		a_c.addText("id");
		a_c.addText("gce");
		a_c.addText("block");
		a_c.addText("block");
		a_c.addText("label");
		a_c.addText("block");
		a_c.addText("extensionCode");
		a_c.addText("completeCode");
		a_c.addText("code");
		a_c.addText("ghi");
		a_c.addText("is");
		a_c.addText("stopBeforeImageData");
		a_c.addText("formatCompliance");
		a_c.addText("result");
		a_c.addText("readImageDescriptor");
		a_c.addText("Image Left Position");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Image Top Position");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Image Width");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Image Height");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Packed Fields");
		a_c.addText("Not a Valid GIF File");
		a_c.addText("Width");
		a_c.addText("Height");
		a_c.addText("Left Position");
		a_c.addText("Top Position");
		a_c.addText("PackedFields bits");
		a_c.addText("7");
		a_c.addText("LocalColorTableFlag: ");
		a_c.addText("6");
		a_c.addText("Interlace Flag: ");
		a_c.addText("Sort Flag: ");
		a_c.addText("7");
		a_c.addText("SizeofLocalColorTable: ");
		a_c.addText("LZWMinimumCodeSize: ");
		a_c.addText("lzwMinimumCodeSize");
		a_c.addText("block");
		a_c.addText("bytes");
		a_c.addText("bais");
		a_c.addText("size");
		a_c.addText("myLzwDecompressor");
		a_c.addText("LZWMinimumCodeSize");
		a_c.addText("ghi");
		a_c.addText("blockCode");
		a_c.addText("is");
		a_c.addText("stopBeforeImageData");
		a_c.addText("formatCompliance");
		a_c.addText("imageLeftPosition");
		a_c.addText("imageTopPosition");
		a_c.addText("imageWidth");
		a_c.addText("imageHeight");
		a_c.addText("packedFields");
		a_c.addText("localColorTableFlag");
		a_c.addText("interlaceFlag");
		a_c.addText("sortFlag");
		a_c.addText("sizeOfLocalColorTable");
		a_c.addText("localColorTable");
		a_c.addText("imageData");
		a_c.addText("simplePow");
		a_c.addText("i");
		a_c.addText("base");
		a_c.addText("power");
		a_c.addText("result");
		a_c.addText("convertColorTableSize");
		a_c.addText("tableSize");
		a_c.addText("readColorTable");
		a_c.addText("block");
		a_c.addText("GIF: corrupt Color Table");
		a_c.addText("is");
		a_c.addText("tableSize");
		a_c.addText("actualSize");
		a_c.addText("findBlock");
		a_c.addText("gifBlock");
		a_c.addText("blocks");
		a_c.addText("code");
		a_c.addText("findAllBlocks");
		a_c.addText("gifBlock");
		a_c.addText("blocks");
		a_c.addText("code");
		a_c.addText("filteredBlocks");
		a_c.addText("readFile");
		a_c.addText("byteSource");
		a_c.addText("stopBeforeImageData");
		a_c.addText("readFile");
		a_c.addText("ghi");
		a_c.addText("globalColorTable");
		a_c.addText("blocks");
		a_c.addText("result");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("stopBeforeImageData");
		a_c.addText("formatCompliance");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("GIF: Couldn\'t read blocks");
		a_c.addText("GIF: Couldn\'t read Header");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("blocks");
		a_c.addText("bhi");
		a_c.addText("createDisposalMethodFromIntValue");
		a_c.addText("GIF: Invalid parsing of disposal method");
		a_c.addText("value");
		a_c.addText("getMetadata");
		a_c.addText("GIF: Couldn\'t read blocks");
		a_c.addText("GIF: Couldn\'t read Header");
		a_c.addText("disposalMethod");
		a_c.addText("id");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageContents");
		a_c.addText("bhi");
		a_c.addText("imageData");
		a_c.addText("metadataItems");
		a_c.addText("getComments");
		a_c.addText("8702");
		a_c.addText("8702");
		a_c.addText("bytes");
		a_c.addText("block");
		a_c.addText("blocks");
		a_c.addText("result");
		a_c.addText("code");
		a_c.addText("getImageInfo");
		a_c.addText("GIF: Couldn\'t read blocks");
		a_c.addText("GIF: Couldn\'t read Header");
		a_c.addText("44");
		a_c.addText("GIF: Couldn\'t read ImageDescriptor");
		a_c.addText("8697");
		a_c.addText("GIF Graphics Interchange Format");
		a_c.addText("image/gif");
		a_c.addText("44");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("Gif ");
		a_c.addText("GIF Graphics Interchange Format");
		a_c.addText("image/gif");
		a_c.addText("72");
		a_c.addText("72");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("blocks");
		a_c.addText("bhi");
		a_c.addText("id");
		a_c.addText("gce");
		a_c.addText("height");
		a_c.addText("width");
		a_c.addText("comments");
		a_c.addText("bitsPerPixel");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("formatDetails");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("dumpImageFile");
		a_c.addText("gif.dumpImageFile");
		a_c.addText("gif.blocks: ");
		a_c.addText("\t");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("gifBlock");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("imageData");
		a_c.addText("blocks");
		a_c.addText("getColorTable");
		a_c.addText("Bad Color Table Length: ");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("length");
		a_c.addText("result");
		a_c.addText("getFormatCompliance");
		a_c.addText("byteSource");
		a_c.addText("result");
		a_c.addText("findAllImageData");
		a_c.addText("44");
		a_c.addText("GIF: Couldn\'t read Image Descriptor");
		a_c.addText("8697");
		a_c.addText("GIF: Invalid amount of Graphic Control Extensions");
		a_c.addText("GIF: Couldn\'t read Image Descriptor of image number %d");
		a_c.addText("descriptor");
		a_c.addText("gce");
		a_c.addText("i");
		a_c.addText("imageContents");
		a_c.addText("descriptors");
		a_c.addText("gcExtensions");
		a_c.addText("imageData");
		a_c.addText("findFirstImageData");
		a_c.addText("44");
		a_c.addText("GIF: Couldn\'t read Image Descriptor");
		a_c.addText("8697");
		a_c.addText("imageContents");
		a_c.addText("descriptor");
		a_c.addText("gce");
		a_c.addText("getBufferedImage");
		a_c.addText("Gif: No Color Table");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Gif: Strange Row");
		a_c.addText("255");
		a_c.addText("colorTable");
		a_c.addText("colorTable");
		a_c.addText("y");
		a_c.addText("y");
		a_c.addText("y");
		a_c.addText("y");
		a_c.addText("theRow");
		a_c.addText("y");
		a_c.addText("index");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("row");
		a_c.addText("headerInfo");
		a_c.addText("imageData");
		a_c.addText("globalColorTable");
		a_c.addText("id");
		a_c.addText("gce");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("imageBuilder");
		a_c.addText("colorTable");
		a_c.addText("transparentIndex");
		a_c.addText("counter");
		a_c.addText("rowsInPass1");
		a_c.addText("rowsInPass2");
		a_c.addText("rowsInPass3");
		a_c.addText("rowsInPass4");
		a_c.addText("getAllBufferedImages");
		a_c.addText("GIF: Couldn\'t read blocks");
		a_c.addText("GIF: Couldn\'t read Header");
		a_c.addText("id");
		a_c.addText("byteSource");
		a_c.addText("imageContents");
		a_c.addText("ghi");
		a_c.addText("imageData");
		a_c.addText("result");
		a_c.addText("getBufferedImage");
		a_c.addText("GIF: Couldn\'t read blocks");
		a_c.addText("GIF: Couldn\'t read Header");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageContents");
		a_c.addText("ghi");
		a_c.addText("imageData");
		a_c.addText("writeAsSubBlocks");
		a_c.addText("255");
		a_c.addText("blockSize");
		a_c.addText("os");
		a_c.addText("bytes");
		a_c.addText("index");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("Unknown parameter: ");
		a_c.addText("255");
		a_c.addText("256");
		a_c.addText("quantizing");
		a_c.addText("exact palette");
		a_c.addText("Gif: can\'t write images with more than 256 colors");
		a_c.addText("71");
		a_c.addText("73");
		a_c.addText("70");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("97");
		a_c.addText("128");
		a_c.addText("7");
		a_c.addText("64");
		a_c.addText("6");
		a_c.addText("32");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("16");
		a_c.addText("33");
		a_c.addText("-7");
		a_c.addText("33");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("44");
		a_c.addText("128");
		a_c.addText("7");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("16777215");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("59");
		a_c.addText("firstKey");
		a_c.addText("colorResolution");
		a_c.addText("packedFields");
		a_c.addText("backgroundColorIndex");
		a_c.addText("pixelAspectRatio");
		a_c.addText("packedFields");
		a_c.addText("magic");
		a_c.addText("xmpXmlBytes");
		a_c.addText("localColorTableFlag");
		a_c.addText("interlaceFlag");
		a_c.addText("sortFlag");
		a_c.addText("sizeOfLocalColorTable");
		a_c.addText("packedFields");
		a_c.addText("rgb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("i");
		a_c.addText("index");
		a_c.addText("alpha");
		a_c.addText("alphaThreshold");
		a_c.addText("index");
		a_c.addText("argb");
		a_c.addText("rgb");
		a_c.addText("index");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("lzwMinimumCodeSize");
		a_c.addText("compressor");
		a_c.addText("imagedata");
		a_c.addText("compressed");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("xmpXml");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("maxColors");
		a_c.addText("palette2");
		a_c.addText("paletteSize");
		a_c.addText("bos");
		a_c.addText("colorTableScaleLessOne");
		a_c.addText("colorTableSizeInFormat");
		a_c.addText("getXmpXml");
		a_c.addText("8703");
		a_c.addText("256");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("XMP block in GIF missing magic trailer.");
		a_c.addText("More than one XMP Block in GIF.");
		a_c.addText("magic");
		a_c.addText("genericBlock");
		a_c.addText("blockBytes");
		a_c.addText("GIF_MAGIC_TRAILER");
		a_c.addText("xml");
		a_c.addText("block");
		a_c.addText("formatCompliance");
		a_c.addText("ghi");
		a_c.addText("blocks");
		a_c.addText("result");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/gif/GifImageParser;");
		a_c.addText(".gif");
		a_c.addText("8");
		a_c.addText("71");
		a_c.addText("73");
		a_c.addText("70");
		a_c.addText("11");
		a_c.addText("8");
		a_c.addText("88");
		a_c.addText("77");
		a_c.addText("80");
		a_c.addText("32");
		a_c.addText("68");
		a_c.addText("97");
		a_c.addText("6");
		a_c.addText("116");
		a_c.addText("7");
		a_c.addText("97");
		a_c.addText("8");
		a_c.addText("88");
		a_c.addText("9");
		a_c.addText("77");
		a_c.addText("10");
		a_c.addText("80");
	}
	public void c369_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 95);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{96, 395, 915, 1061});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 96);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 111);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{116, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{116, 245, 339, 454, 459, 481, 487, 509, 532, 570, 627, 658, 681, 692, 720, 734, 812, 834, 1099});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{116, 193, 214, 221, 226, 245, 339, 424, 454, 459, 481, 487, 532, 556, 570, 627, 681, 812, 834, 853, 866, 1099});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.Returns, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{116, 193, 214, 221, 226, 245, 339, 424});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Argument, new int[]{116, 245, 339, 459});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{123, 124, 125, 127, 128, 129, 140, 142, 146, 147, 156, 158, 160, 164, 202, 203, 209, 210, 212, 219, 221, 346, 347, 348, 349, 350, 360, 430, 1137, 1152});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{132, 978, 979, 1133, 1137, 1137, 1148, 1160, 1160, 67, 81});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.MethodCall, new int[]{132, 134, 135, 136, 150, 152, 187, 295, 317, 353, 354, 355, 356, 460});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.ConstructorCall, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 245, 339, 407, 407, 407, 407, 407, 481, 570, 1099, 1099, 1099, 1099, 1099, 1099, 1176, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.Returns, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.ConstructorCall, 214);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{214, 424, 481});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), dmDependency.Type.Returns, new int[]{221, 226});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{226, 658, 734, 853});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), dmDependency.Type.ConstructorCall, 245);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.Argument, new int[]{245, 339, 734});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Returns, new int[]{245, 430});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{254, 270, 388, 399, 481, 481, 481, 481, 1176, 1176, 1176, 1176, 1176, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{258, 337, 496, 501, 532, 542, 547, 579, 584, 590, 663, 699, 705, 712, 728, 758, 792, 821, 826, 843, 848, 1155, 1173});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{295, 566, 981, 1160});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.LocalVar, new int[]{339, 627, 720, 720, 734, 812});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.LocalVar, new int[]{339, 627, 720, 720, 734, 812});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), dmDependency.Type.LocalVar, new int[]{339, 339, 339, 407, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.LocalVar, new int[]{339, 692, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.LocalVar, new int[]{339, 439, 454, 481, 570, 658, 1176, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.Returns, 339);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.FieldUse, new int[]{353, 354, 355, 356, 470, 471, 509, 509, 556, 556, 596, 597, 600, 614, 614, 614, 1118, 1119});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), dmDependency.Type.MethodCall, new int[]{391, 565, 1132});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 392);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.ConstructorCall, 395);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.MethodCall, 397);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.ConstructorCall, 407);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{407, 481});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.LocalVar, 407);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Argument, new int[]{430, 439, 556});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.FieldUse, new int[]{435, 450, 564, 652, 1126});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), dmDependency.Type.Returns, new int[]{454, 459});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{454, 459, 481, 487, 532, 570, 627, 681, 812, 834, 1099});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{466, 688, 1114});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), dmDependency.Type.ConstructorCall, 478);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), dmDependency.Type.LocalVar, new int[]{481, 834, 1176});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), dmDependency.Type.LocalVar, new int[]{481, 658, 834});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 487);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), dmDependency.Type.FieldUse, new int[]{499, 545, 582, 587, 593, 599, 605, 614, 614, 614, 648, 649, 650, 696, 702, 724, 731, 824, 832, 846, 853});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 509);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.Returns, 509);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.FieldUse, new int[]{516, 518, 520, 522, 524, 526, 528, 530});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 532);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), dmDependency.Type.FieldUse, new int[]{553, 554, 554, 554, 739, 740});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GraphicControlExtension"), dmDependency.Type.FieldUse, new int[]{553, 554, 619, 746, 763});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), dmDependency.Type.FieldUse, new int[]{554, 554, 607, 742, 743, 753, 754, 775, 802});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.ConstructorCall, 554);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), dmDependency.Type.ConstructorCall, 556);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.DisposalMethod"), dmDependency.Type.LocalVar, 556);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), dmDependency.Type.LocalVar, new int[]{556, 556, 720, 834, 834, 853});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.LocalVar, 556);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 570);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 624);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 625);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{637, 648, 656});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 644);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 658);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, 681);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.ConstructorCall, 688);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageContents"), dmDependency.Type.Argument, new int[]{692, 720});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), dmDependency.Type.Returns, new int[]{692, 720});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), dmDependency.Type.ConstructorCall, new int[]{717, 734});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{734, 812, 834});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageData"), dmDependency.Type.Argument, 734);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 750);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{808, 812});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 812);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 834);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{853, 866});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{861, 862, 865, 918, 919, 920, 922, 923, 924, 1098});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 866);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 866);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{887, 911});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{890, 891, 1068});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, new int[]{893, 897, 902});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, new int[]{893, 897, 902});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.MethodCall, new int[]{913, 968, 1027, 1028, 1076, 1078, 1081});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 915);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{928, 929, 941, 945, 949, 958, 959, 963, 965, 966, 967, 968, 971, 975, 976, 978, 979, 982, 986, 989, 994, 995, 996, 997, 998, 1021, 1034, 1035, 1036, 1038, 1039, 1040, 1059, 1095, 1097});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.ConstructorCall, 1061);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.MethodCall, 1088);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.LocalVar, 1099);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.palette.Palette"), dmDependency.Type.LocalVar, 1099);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, 1099);
	}

	public void c370_texts(dmClass a_c) {
		a_c.addText("NONE");
		a_c.addText("SUB");
		a_c.addText("UP");
		a_c.addText("AVERAGE");
		a_c.addText("PAETH");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/FilterType;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("NONE");
		a_c.addText("SUB");
		a_c.addText("UP");
		a_c.addText("AVERAGE");
		a_c.addText("PAETH");
	}
	public void c370_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.Returns, new int[]{1, 24});
		d(m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.OwnFieldUse, new int[]{24, 25, 26, 27, 28, 29, 24, 24, 24, 24, 24, 24});
		d(m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), m_classes.get("org.apache.commons.imaging.formats.png.FilterType"), dmDependency.Type.ConstructorCall, new int[]{25, 26, 27, 28, 29, 24});
	}

	public void c371_texts(dmClass a_c) {
		a_c.addText("byteOrder");
		a_c.addText("tiffVersion");
		a_c.addText("offsetToFirstIFD");
		a_c.addText("<init>");
		a_c.addText("8");
		a_c.addText("byteOrder");
		a_c.addText("tiffVersion");
		a_c.addText("offsetToFirstIFD");
		a_c.addText("getElementDescription");
		a_c.addText("TIFF Header");
	}
	public void c371_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("long"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement"), dmDependency.Type.ConstructorCall, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.TiffHeader"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, 33);
	}

	public void c372_texts(dmClass a_c) {
		a_c.addText("ADOBE_PREFIX");
		a_c.addText("ADOBE_COLOR_TRANSFORM_UNKNOWN");
		a_c.addText("0");
		a_c.addText("ADOBE_COLOR_TRANSFORM_YCbCr");
		a_c.addText("1");
		a_c.addText("ADOBE_COLOR_TRANSFORM_YCCK");
		a_c.addText("2");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("isAdobeJpegSegment");
		a_c.addText("getAdobeColorTransform");
		a_c.addText("255");
		a_c.addText("11");
		a_c.addText("<clinit>");
		a_c.addText("Adobe");
	}
	public void c372_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 41});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.ConstructorCall, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{48, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App14Segment"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 36);
	}

	public void c373_texts(dmClass a_c) {
		a_c.addText("marker");
		a_c.addText("length");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("length");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("getDescription");
		a_c.addText("toString");
		a_c.addText("[Segment: ");
		a_c.addText("]");
		a_c.addText("getSegmentType");
		a_c.addText("Start Of Frame, Baseline Dct, Huffman coding");
		a_c.addText("Start Of Frame, Extended sequential Dct, Huffman coding");
		a_c.addText("Start Of Frame, Progressive Dct, Huffman coding");
		a_c.addText("Start Of Frame, Lossless (sequential), Huffman coding");
		a_c.addText("Start Of Frame, Differential sequential Dct, Huffman coding");
		a_c.addText("Start Of Frame, Differential progressive Dct, Huffman coding");
		a_c.addText("Start Of Frame, Differential lossless (sequential), Huffman coding");
		a_c.addText("Start Of Frame, Reserved for JPEG extensions, arithmetic coding");
		a_c.addText("Start Of Frame, Extended sequential Dct, arithmetic coding");
		a_c.addText("Start Of Frame, Progressive Dct, arithmetic coding");
		a_c.addText("Start Of Frame, Lossless (sequential), arithmetic coding");
		a_c.addText("Start Of Frame, Differential sequential Dct, arithmetic coding");
		a_c.addText("Start Of Frame, Differential progressive Dct, arithmetic coding");
		a_c.addText("Start Of Frame, Differential lossless (sequential), arithmetic coding");
		a_c.addText("Define Huffman table(s)");
		a_c.addText("Define arithmetic coding conditioning(s)");
		a_c.addText("Restart with modulo 8 count 0");
		a_c.addText("Restart with modulo 8 count 1");
		a_c.addText("Restart with modulo 8 count 2");
		a_c.addText("Restart with modulo 8 count 3");
		a_c.addText("Restart with modulo 8 count 4");
		a_c.addText("Restart with modulo 8 count 5");
		a_c.addText("Restart with modulo 8 count 6");
		a_c.addText("Restart with modulo 8 count 7");
		a_c.addText("Start of image");
		a_c.addText("End of image");
		a_c.addText("Start of scan");
		a_c.addText("Define quantization table(s)");
		a_c.addText("Define number of lines");
		a_c.addText("Define restart interval");
		a_c.addText("Define hierarchical progression");
		a_c.addText("Expand reference component(s)");
		a_c.addText("Comment");
		a_c.addText("For temporary private use in arithmetic coding");
		a_c.addText("65282");
		a_c.addText("65471");
		a_c.addText("Reserved");
		a_c.addText("65504");
		a_c.addText("65519");
		a_c.addText("APP");
		a_c.addText("65504");
		a_c.addText("65520");
		a_c.addText("65533");
		a_c.addText("JPG");
		a_c.addText("65504");
		a_c.addText("Unknown");
	}
	public void c373_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.Segment"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 32);
	}

	public void c374_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".png");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Png-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".png");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getChunkTypeName");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("chunkType");
		a_c.addText("result");
		a_c.addText("getChunkTypes");
		a_c.addText("chunk");
		a_c.addText("is");
		a_c.addText("chunks");
		a_c.addText("chunkTypes");
		a_c.addText("hasChunkType");
		a_c.addText("chunks");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("chunkType");
		a_c.addText("keepChunk");
		a_c.addText("chunkType2");
		a_c.addText("chunkType");
		a_c.addText("chunkTypes");
		a_c.addText("readChunks");
		a_c.addText("Length");
		a_c.addText("Not a Valid PNG File");
		a_c.addText("Invalid PNG chunk length: ");
		a_c.addText("ChunkType");
		a_c.addText("Not a Valid PNG File");
		a_c.addText("ChunkType");
		a_c.addText("Length");
		a_c.addText("Chunk Data");
		a_c.addText("Not a Valid PNG File: Couldn\'t read Chunk Data.");
		a_c.addText("Not a Valid PNG File");
		a_c.addText("bytes");
		a_c.addText("CRC");
		a_c.addText("Not a Valid PNG File");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("keep");
		a_c.addText("bytes");
		a_c.addText("crc");
		a_c.addText("is");
		a_c.addText("chunkTypes");
		a_c.addText("returnAfterFirst");
		a_c.addText("result");
		a_c.addText("readSignature");
		a_c.addText("Not a Valid PNG Segment: Incorrect Signature");
		a_c.addText("is");
		a_c.addText("readChunks");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("chunkTypes");
		a_c.addText("returnAfterFirst");
		a_c.addText("getICCProfileBytes");
		a_c.addText("PNG contains more than one ICC Profile ");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("pngChunkiCCP");
		a_c.addText("bytes");
		a_c.addText("getImageSize");
		a_c.addText("Png: No chunks");
		a_c.addText("PNG contains more than one Header");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("pngChunkIHDR");
		a_c.addText("getMetadata");
		a_c.addText("textChunk");
		a_c.addText("chunk");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("result");
		a_c.addText("filterChunks");
		a_c.addText("chunk");
		a_c.addText("chunks");
		a_c.addText("type");
		a_c.addText("result");
		a_c.addText("getTransparencyFilter");
		a_c.addText("Simple Transparency not compatible with ColorType: ");
		a_c.addText("pngColorType");
		a_c.addText("pngChunktRNS");
		a_c.addText("getImageInfo");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("PNG: no chunks");
		a_c.addText("PNG contains more than one Header");
		a_c.addText("PNG contains more than one pHYs: ");
		a_c.addText("PNG contains more than one sCAL:");
		a_c.addText(": ");
		a_c.addText(": ");
		a_c.addText(": ");
		a_c.addText("PNG Portable Network Graphics");
		a_c.addText("image/png");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
		a_c.addText("0.0254");
		a_c.addText("0.0254");
		a_c.addText("0.0254");
		a_c.addText("0.0254");
		a_c.addText("0.0254");
		a_c.addText("Png: Unknown ColorType: ");
		a_c.addText("Png");
		a_c.addText("Png");
		a_c.addText("PNG Portable Network Graphics");
		a_c.addText("image/png");
		a_c.addText("pngChunkScal");
		a_c.addText("pngChunktEXt");
		a_c.addText("tEXt");
		a_c.addText("pngChunkzTXt");
		a_c.addText("zTXt");
		a_c.addText("pngChunkiTXt");
		a_c.addText("iTXt");
		a_c.addText("metersPerInch");
		a_c.addText("colorType");
		a_c.addText("colorType");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("IHDRs");
		a_c.addText("pngChunkIHDR");
		a_c.addText("transparent");
		a_c.addText("tRNSs");
		a_c.addText("pngChunkpHYs");
		a_c.addText("pHYss");
		a_c.addText("physicalScale");
		a_c.addText("sCALs");
		a_c.addText("tEXts");
		a_c.addText("zTXts");
		a_c.addText("iTXts");
		a_c.addText("chunkCount");
		a_c.addText("comments");
		a_c.addText("textChunks");
		a_c.addText("bitsPerPixel");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("height");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("width");
		a_c.addText("progressive");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("usesPalette");
		a_c.addText("PLTEs");
		a_c.addText("colorType");
		a_c.addText("formatDetails");
		a_c.addText("compressionAlgorithm");
		a_c.addText("getBufferedImage");
		a_c.addText("7");
		a_c.addText("6");
		a_c.addText("PNG: no chunks");
		a_c.addText("PNG contains more than one Header");
		a_c.addText("PNG contains more than one Palette");
		a_c.addText("PNG missing image data");
		a_c.addText("PNG: unexpected sRGB chunk");
		a_c.addText("PNG: unexpected gAMA chunk");
		a_c.addText("PNG: unexpected iCCP chunk");
		a_c.addText("sRGB, no color management necessary.");
		a_c.addText("iCCP.");
		a_c.addText("0.5");
		a_c.addText("PNG: unknown FilterMethod: ");
		a_c.addText("Unknown InterlaceMethod: ");
		a_c.addText("pngChunkIDAT");
		a_c.addText("bytes");
		a_c.addText("IDAT");
		a_c.addText("pngChunktRNS");
		a_c.addText("pngChunkiCCP");
		a_c.addText("bytes");
		a_c.addText("pngChunkgAMA");
		a_c.addText("gamma");
		a_c.addText("targetGamma");
		a_c.addText("diff");
		a_c.addText("sRGBs");
		a_c.addText("gAMAs");
		a_c.addText("iCCPs");
		a_c.addText("result");
		a_c.addText("scanExpediter");
		a_c.addText("scanExpediter");
		a_c.addText("cs");
		a_c.addText("srgbCM");
		a_c.addText("cs_sRGB");
		a_c.addText("is_srgb");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("pngColorType");
		a_c.addText("bitDepth");
		a_c.addText("bitsPerPixel");
		a_c.addText("hasAlpha");
		a_c.addText("result");
		a_c.addText("bais");
		a_c.addText("iis");
		a_c.addText("scanExpediter");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("IHDRs");
		a_c.addText("pngChunkIHDR");
		a_c.addText("PLTEs");
		a_c.addText("pngChunkPLTE");
		a_c.addText("IDATs");
		a_c.addText("baos");
		a_c.addText("compressed");
		a_c.addText("transparencyFilter");
		a_c.addText("tRNSs");
		a_c.addText("iccProfile");
		a_c.addText("gammaCorrection");
		a_c.addText("dumpImageFile");
		a_c.addText("PNG contains more than one Header");
		a_c.addText("Color: ");
		a_c.addText("chunks: ");
		a_c.addText("\t");
		a_c.addText(": ");
		a_c.addText("chunk");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("imageInfo");
		a_c.addText("chunks");
		a_c.addText("IHDRs");
		a_c.addText("pngChunkIHDR");
		a_c.addText("writeImage");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("getXmpXml");
		a_c.addText("XML:com.adobe.xmp");
		a_c.addText("PNG contains more than one XMP chunk.");
		a_c.addText("itxtChunk");
		a_c.addText("chunk");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("chunks");
		a_c.addText("xmpChunks");
		a_c.addText("chunk");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/png/PngImageParser;");
		a_c.addText(".png");
	}

	public void c375_texts(dmClass a_c) {
		a_c.addText("<clinit>");
		a_c.addText("10");
		a_c.addText("10");
	}
	public void c374_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{98, 423});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{110, 126, 149, 221, 230, 237, 259, 277, 309, 328, 479, 661, 710});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{110, 126, 149, 221, 230, 237, 259, 277, 309, 328, 479, 661, 703, 710});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{110, 149, 221});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.FieldUse, new int[]{124, 304, 696});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.LocalVar, new int[]{126, 126, 135, 221, 297, 309, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 661, 661, 661, 661, 661, 661, 661, 661, 703, 703, 703, 740});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{126, 230, 237, 259, 277, 328, 479, 661, 710});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.Argument, new int[]{126, 135, 149, 230, 297});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{131, 234});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.ConstructorCall, new int[]{133, 243, 265, 283, 335, 497, 716});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{135, 135, 135, 135, 237, 237, 237, 237});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{135, 237});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.FieldUse, new int[]{145, 186, 186, 188, 188, 190, 190, 192, 192, 194, 194, 196, 196, 198, 198, 200, 200, 202, 202, 204, 204, 215, 215, 243, 265, 283, 283, 304, 335, 335, 335, 335, 335, 335, 335, 335, 353, 362, 373, 383, 398, 399, 400, 456, 497, 497, 497, 497, 497, 497, 497, 511, 518, 530, 549, 558, 559, 560, 678, 716});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ChunkType"), dmDependency.Type.LocalVar, 149);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Returns, new int[]{149, 230, 297});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{157, 161, 164, 171, 174, 183, 227, 696});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{159, 252, 268, 272, 328, 350, 355, 376, 386, 473, 508, 513, 520, 532, 562, 565, 568, 613, 644, 735});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), dmDependency.Type.ConstructorCall, 187);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), dmDependency.Type.ConstructorCall, 189);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), dmDependency.Type.ConstructorCall, 191);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), dmDependency.Type.ConstructorCall, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.ConstructorCall, 195);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), dmDependency.Type.ConstructorCall, 197);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), dmDependency.Type.ConstructorCall, 199);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), dmDependency.Type.ConstructorCall, 201);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), dmDependency.Type.ConstructorCall, 203);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), dmDependency.Type.ConstructorCall, 205);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 207);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{221, 259, 661, 661, 661});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), dmDependency.Type.FieldUse, 227);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 237);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), dmDependency.Type.MethodCall, new int[]{257, 582});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 259);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), dmDependency.Type.FieldUse, new int[]{277, 277, 367, 422, 422, 425, 428, 429, 462, 473, 552, 607, 608, 609, 610, 612, 613, 632, 644, 686});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 277);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 277);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.ConstructorCall, 289);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.MethodCall, new int[]{294, 294});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.MethodCall, 294);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.LocalVar, 297);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Argument, new int[]{297, 309});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.Returns, 309);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.Argument, 309);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser$1"), dmDependency.Type.FieldUse, new int[]{318, 462, 632});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, new int[]{318, 367, 422, 462, 616, 618, 621, 686});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.MethodCall, new int[]{320, 322, 324});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterGrayscale"), dmDependency.Type.ConstructorCall, 320);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterTrueColor"), dmDependency.Type.ConstructorCall, 322);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor"), dmDependency.Type.ConstructorCall, 324);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 328);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.FieldUse, 381);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), dmDependency.Type.FieldUse, new int[]{389, 390, 390, 393, 393});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.MethodCall, new int[]{390, 393});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), dmDependency.Type.FieldUse, new int[]{408, 408});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), dmDependency.Type.MethodCall, 409);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), dmDependency.Type.FieldUse, new int[]{413, 413});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), dmDependency.Type.MethodCall, 414);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), dmDependency.Type.FieldUse, new int[]{418, 418});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), dmDependency.Type.MethodCall, new int[]{419, 725, 740});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.MethodCall, new int[]{429, 632});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), dmDependency.Type.FieldUse, new int[]{445, 448, 449, 450, 451});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, new int[]{465, 470});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 477);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), dmDependency.Type.ConstructorCall, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkScal"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkText"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkItxt"), dmDependency.Type.LocalVar, new int[]{479, 740, 740});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, new int[]{479, 479, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIhdr"), dmDependency.Type.LocalVar, new int[]{479, 661, 703});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPhys"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 479);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 535);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), dmDependency.Type.MethodCall, 538);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{540, 543});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.MethodCall, 584);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), dmDependency.Type.MethodCall, 587);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.ConstructorCall, 594);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.MethodCall, 599);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), dmDependency.Type.MethodCall, new int[]{622, 624});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 627);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterSimple"), dmDependency.Type.ConstructorCall, 634);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediterInterlaced"), dmDependency.Type.ConstructorCall, 639);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.MethodCall, 647);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.ConstructorCall, 650);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.MethodCall, 650);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.ConstructorCall, 652);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, new int[]{654, 655});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ColorTools"), dmDependency.Type.ConstructorCall, 657);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ColorTools"), dmDependency.Type.MethodCall, 657);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIdat"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkIccp"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{661, 661});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.ScanExpediter"), dmDependency.Type.LocalVar, new int[]{661, 661, 661});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.color.ICC_ColorSpace"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.color.ColorSpace"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.GammaCorrection"), dmDependency.Type.LocalVar, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 661);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 675);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{686, 688, 699, 701});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 703);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 703);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 703);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 703);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), dmDependency.Type.ConstructorCall, 709);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngWriter"), dmDependency.Type.MethodCall, 709);
	}
	public void c375_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.MethodCall, new int[]{632, 632, 632});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.png.InterlaceMethod"), dmDependency.Type.FieldUse, new int[]{632, 632});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.MethodCall, new int[]{318, 318, 318, 318, 318, 318});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser$1"), m_classes.get("org.apache.commons.imaging.formats.png.PngColorType"), dmDependency.Type.FieldUse, new int[]{318, 318, 318, 318, 318});
	}

	public void c376_texts(dmClass a_c) {
		a_c.addText("isCompressed");
		a_c.addText("previousByte");
		a_c.addText("repeatCount");
		a_c.addText("<init>");
		a_c.addText("isCompressed");
		a_c.addText("write");
		a_c.addText("255");
		a_c.addText("63");
		a_c.addText("192");
		a_c.addText("192");
		a_c.addText("192");
		a_c.addText("255");
		a_c.addText("element");
		a_c.addText("bos");
		a_c.addText("samples");
		a_c.addText("flush");
		a_c.addText("192");
		a_c.addText("192");
		a_c.addText("192");
		a_c.addText("bos");
	}
	public void c376_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{30, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, new int[]{30, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("byte"), dmDependency.Type.Argument, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{43, 45, 46, 54, 61, 63, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleWriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, 56);
	}

	public void c377_texts(dmClass a_c) {
		a_c.addText("METER_UNITS");
		a_c.addText("1");
		a_c.addText("RADIAN_UNITS");
		a_c.addText("2");
		a_c.addText("UNDEFINED");
		a_c.addText("units");
		a_c.addText("horizontalUnitsPerPixel");
		a_c.addText("verticalUnitsPerPixel");
		a_c.addText("<init>");
		a_c.addText("units");
		a_c.addText("horizontalUnitsPerPixel");
		a_c.addText("verticalUnitsPerPixel");
		a_c.addText("createFromMeters");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("createFromRadians");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("isInMeters");
		a_c.addText("isInRadians");
		a_c.addText("getHorizontalUnitsPerPixel");
		a_c.addText("getVerticalUnitsPerPixel");
		a_c.addText("<clinit>");
		a_c.addText("-1.0");
		a_c.addText("-1.0");
	}
	public void c377_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.Returns, new int[]{36, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.ConstructorCall, new int[]{39, 43});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.OwnFieldUse, 25);
	}

	public void c378_texts(dmClass a_c) {
		a_c.addText("argb");
		a_c.addText("count");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("<init>");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("hashCode");
		a_c.addText("equals");
		a_c.addText("other");
		a_c.addText("o");
	}
	public void c378_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.ColorCount"), m_classes.get("org.apache.commons.imaging.palette.ColorCount"), dmDependency.Type.LocalVar, 47);
	}

	public void c379_texts(dmClass a_c) {
		a_c.addText("magic");
		a_c.addText("fileSize");
		a_c.addText("<init>");
		a_c.addText("magic");
		a_c.addText("fileSize");
		a_c.addText("dump");
		a_c.addText("IcnsHeader");
		a_c.addText("Magic: 0x");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("FileSize: ");
		a_c.addText("pw");
	}

	public void c380_texts(dmClass a_c) {
		a_c.addText("ICNS_MAGIC");
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".icns");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Apple Icon Image");
		a_c.addText("getDefaultExtension");
		a_c.addText(".icns");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("Unknown parameter: ");
		a_c.addText("No icons in ICNS file");
		a_c.addText("Icns");
		a_c.addText("32");
		a_c.addText("ICNS Apple Icon Image");
		a_c.addText("image/x-icns");
		a_c.addText("firstKey");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("contents");
		a_c.addText("images");
		a_c.addText("image0");
		a_c.addText("getImageSize");
		a_c.addText("Unknown parameter: ");
		a_c.addText("No icons in ICNS file");
		a_c.addText("firstKey");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("contents");
		a_c.addText("images");
		a_c.addText("image0");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("readIcnsHeader");
		a_c.addText("Magic");
		a_c.addText("Not a Valid ICNS File");
		a_c.addText("FileSize");
		a_c.addText("Not a Valid ICNS File");
		a_c.addText("Not a Valid ICNS File: magic is 0x");
		a_c.addText("is");
		a_c.addText("magic");
		a_c.addText("fileSize");
		a_c.addText("readIcnsElement");
		a_c.addText("Type");
		a_c.addText("Not a valid ICNS file");
		a_c.addText("ElementSize");
		a_c.addText("Not a valid ICNS file");
		a_c.addText("Corrupted ICNS file: element size %d is greater than remaining size %d");
		a_c.addText("Data");
		a_c.addText("8");
		a_c.addText("Not a valid ICNS file");
		a_c.addText("is");
		a_c.addText("remainingSize");
		a_c.addText("type");
		a_c.addText("elementSize");
		a_c.addText("data");
		a_c.addText("readImage");
		a_c.addText("8");
		a_c.addText("icnsElement");
		a_c.addText("remainingSize");
		a_c.addText("i");
		a_c.addText("icnsHeader");
		a_c.addText("icnsElementList");
		a_c.addText("icnsElements");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("dumpImageFile");
		a_c.addText("icnsElement");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("icnsContents");
		a_c.addText("getBufferedImage");
		a_c.addText("No icons in ICNS file");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("icnsContents");
		a_c.addText("result");
		a_c.addText("getAllBufferedImages");
		a_c.addText("byteSource");
		a_c.addText("icnsContents");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("Unknown parameter: ");
		a_c.addText("16");
		a_c.addText("16");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("48");
		a_c.addText("48");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("Invalid/unsupported source width ");
		a_c.addText(" and height ");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("firstKey");
		a_c.addText("imageType");
		a_c.addText("imageType");
		a_c.addText("imageType");
		a_c.addText("imageType");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("argb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("maskType");
		a_c.addText("bos");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("imageType");
		a_c.addText("<clinit>");
		a_c.addText("icns");
		a_c.addText(".icns");
	}

	public void c381_texts(dmClass a_c) {
		a_c.addText("type");
		a_c.addText("elementSize");
		a_c.addText("data");
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("elementSize");
		a_c.addText("data");
		a_c.addText("dump");
		a_c.addText("IcnsElement");
		a_c.addText(" ");
		a_c.addText("Type: 0x");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("ElementSize: ");
		a_c.addText("typeDescription");
		a_c.addText("pw");
		a_c.addText("icnsType");
		a_c.addText("typeDescription");
	}

	public void c382_texts(dmClass a_c) {
		a_c.addText("icnsHeader");
		a_c.addText("icnsElements");
		a_c.addText("<init>");
		a_c.addText("icnsHeader");
		a_c.addText("icnsElements");
	}
	public void c379_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 139);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{142, 143, 145, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.MethodCall, 144);
	}
	public void c380_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{51, 295});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 51);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{71, 98});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{71, 78, 98, 123, 129, 200, 233, 244, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{71, 78, 98, 123, 129, 159, 200, 233, 244, 255, 262});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{71, 78, 98, 123, 200, 233, 244, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 78);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{89, 95, 114, 120, 156, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), dmDependency.Type.FieldUse, new int[]{93, 118, 240, 241, 251, 262});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsDecoder"), dmDependency.Type.MethodCall, new int[]{93, 118, 251, 262});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{100, 101, 123, 123, 282, 282, 284, 284, 286, 286, 288, 288, 292, 292, 304, 305, 306, 317, 318, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 101);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 101);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 101);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{98, 123});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 98);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 123);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 123);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.Returns, 129);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{129, 159});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{152, 153, 191, 193, 198});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.ConstructorCall, 159);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.Returns, 159);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 195);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.ConstructorCall, new int[]{200, 226});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), dmDependency.Type.Returns, 200);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.FieldUse, 220);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.FieldUse, 223);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), dmDependency.Type.ConstructorCall, 231);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{233, 233, 233, 233});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.LocalVar, new int[]{233, 233, 233, 244});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.LocalVar, 233);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), dmDependency.Type.LocalVar, new int[]{233, 244, 262});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 233);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 233);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.MethodCall, 240);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.MethodCall, 242);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{244, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 262);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 262);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 262);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{278, 292});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.FieldUse, new int[]{283, 285, 287, 289});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 295);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{296, 297, 301, 302, 307, 308, 309, 310, 315, 316, 320, 323, 323, 323, 323});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.MethodCall, new int[]{297, 298, 298, 299, 301, 302, 303, 314, 315, 316, 316, 46});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.LocalVar, 324);
	}
	public void c381_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, 170);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{174, 182, 184, 185});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.MethodCall, new int[]{175, 180, 183});
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsType"), dmDependency.Type.LocalVar, 186);
	}
	public void c382_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsHeader"), dmDependency.Type.OwnFieldUse, 209);
		d(m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsContents"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser$IcnsElement"), dmDependency.Type.OwnFieldUse, 210);
	}

	public void c383_texts(dmClass a_c) {
		a_c.addText("os");
		a_c.addText("byteOrder");
		a_c.addText("count");
		a_c.addText("<init>");
		a_c.addText("os");
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("os");
		a_c.addText("setByteOrder");
		a_c.addText("byteOrder");
		a_c.addText("getByteOrder");
		a_c.addText("write");
		a_c.addText("i");
		a_c.addText("write");
		a_c.addText("bytes");
		a_c.addText("write");
		a_c.addText("bytes");
		a_c.addText("offset");
		a_c.addText("length");
		a_c.addText("flush");
		a_c.addText("close");
		a_c.addText("getByteCount");
		a_c.addText("write4Bytes");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("value");
		a_c.addText("write3Bytes");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("value");
		a_c.addText("write2Bytes");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("value");
	}
	public void c383_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{1, 32});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{1, 36});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.ConstructorCall, new int[]{29, 34});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{26, 26, 79, 93, 105});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{26, 30, 26, 39, 43, 79, 93, 105});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.OwnFieldUse, new int[]{31, 35, 48, 54, 60, 66, 71});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Returns, 40);
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{43, 50, 56, 62, 67, 75, 90, 102});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{48, 54, 60, 66, 71});
		d(m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{50, 56});
	}

	public void c384_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("unfilter");
		a_c.addText("src");
		a_c.addText("dst");
		a_c.addText("up");
	}
	public void c384_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone"), m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 23);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 23);
		d(m_classes.get("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterNone"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{23, 23, 23});
	}

	public void c385_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitDepth");
		a_c.addText("<init>");
		a_c.addText("bytes");
		a_c.addText("bitsPerPixel");
		a_c.addText("bitDepth");
		a_c.addText("getSample");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("PNG: bad BitDepth: ");
		a_c.addText("b");
		a_c.addText("bitsToShift");
		a_c.addText("bitmask");
		a_c.addText("pixelIndexInScanline");
		a_c.addText("sampleIndex");
		a_c.addText("pixelIndexBits");
		a_c.addText("sampleIndexBits");
		a_c.addText("sampleIndexBytes");
		a_c.addText("getSampleAsByte");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("pixelIndexInScanline");
		a_c.addText("sampleIndex");
		a_c.addText("sample");
		a_c.addText("rot");
	}
	public void c385_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("byte"), dmDependency.Type.MethodCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{27, 39, 41, 48, 48});
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{30, 51});
		d(m_classes.get("org.apache.commons.imaging.formats.png.BitParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 51);
	}

	public void c386_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_RATING");
		a_c.addText("EXIF_TAG_RATING_PERCENT");
		a_c.addText("EXIF_TAG_XPTITLE");
		a_c.addText("EXIF_TAG_XPCOMMENT");
		a_c.addText("EXIF_TAG_XPAUTHOR");
		a_c.addText("EXIF_TAG_XPKEYWORDS");
		a_c.addText("EXIF_TAG_XPSUBJECT");
		a_c.addText("ALL_MICROSOFT_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("Rating");
		a_c.addText("18246");
		a_c.addText("RatingPercent");
		a_c.addText("18249");
		a_c.addText("XPTitle");
		a_c.addText("40091");
		a_c.addText("XPComment");
		a_c.addText("40092");
		a_c.addText("XPAuthor");
		a_c.addText("40093");
		a_c.addText("XPKeywords");
		a_c.addText("40094");
		a_c.addText("XPSubject");
		a_c.addText("40095");
		a_c.addText("7");
		a_c.addText("6");
	}
	public void c386_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{32, 36, 40, 43, 46, 49, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{32, 36, 55, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.ConstructorCall, new int[]{40, 43, 46, 49, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.OwnFieldUse, new int[]{40, 43, 46, 49, 52, 55, 55, 55, 55, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 55);
	}

	public void c387_texts(dmClass a_c) {
		a_c.addText("blockCode");
		a_c.addText("<init>");
		a_c.addText("blockCode");
	}

	public void c388_texts(dmClass a_c) {
		a_c.addText("CYAN");
		a_c.addText("MAGENTA");
		a_c.addText("YELLOW");
		a_c.addText("BLACK");
		a_c.addText("WHITE");
		a_c.addText("RED");
		a_c.addText("GREEN");
		a_c.addText("BLUE");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("<init>");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("toString");
		a_c.addText("{C: ");
		a_c.addText(", M: ");
		a_c.addText(", Y: ");
		a_c.addText("}");
		a_c.addText("equals");
		a_c.addText("o");
		a_c.addText("colorCmy");
		a_c.addText("hashCode");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("result");
		a_c.addText("temp");
		a_c.addText("<clinit>");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
		a_c.addText("100.0");
	}
	public void c388_deps() {
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmy"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmy"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.LocalVar, 145);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmy"), m_classes.get("long"), dmDependency.Type.LocalVar, 158);
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmy"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.ConstructorCall, new int[]{38, 48, 58, 68, 78, 88, 98, 108});
		d(m_classes.get("org.apache.commons.imaging.color.ColorCmy"), m_classes.get("org.apache.commons.imaging.color.ColorCmy"), dmDependency.Type.OwnFieldUse, new int[]{38, 48, 58, 68, 78, 88, 98, 108});
	}

	public void c389_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("<init>");
		a_c.addText("bytes");
		a_c.addText("filter");
		a_c.addText("getByte");
		a_c.addText("offset");
		a_c.addText("getLength");
	}
	public void c389_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("byte"), dmDependency.Type.MethodCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{28, 39, 46});
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilter"), m_classes.get("byte"), dmDependency.Type.Returns, 30);
	}

	public void c390_texts(dmClass a_c) {
		a_c.addText("IPTC_TYPE_MAP");
		a_c.addText("<init>");
		a_c.addText("getIptcType");
		a_c.addText("type");
		a_c.addText("<clinit>");
		a_c.addText("iptcType");
	}
	public void c390_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.MethodCall, new int[]{36, 26});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.MethodCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypeLookup"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.LocalVar, 29);
	}

	public void c392_texts(dmClass a_c) {
		a_c.addText("WHITE_RUN_LENGTHS");
		a_c.addText("BLACK_RUN_LENGTHS");
		a_c.addText("CONTROL_CODES");
		a_c.addText("WHITE");
		a_c.addText("0");
		a_c.addText("BLACK");
		a_c.addText("1");
		a_c.addText("<init>");
		a_c.addText("compress1DLine");
		a_c.addText("Error reading image to compress");
		a_c.addText("nextColor");
		a_c.addText("ioException");
		a_c.addText("x");
		a_c.addText("inputStream");
		a_c.addText("outputStream");
		a_c.addText("referenceLine");
		a_c.addText("width");
		a_c.addText("color");
		a_c.addText("runLength");
		a_c.addText("compressModifiedHuffman");
		a_c.addText("y");
		a_c.addText("outputStream");
		a_c.addText("uncompressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("inputStream");
		a_c.addText("decompressModifiedHuffman");
		a_c.addText("Unrecoverable row length error in image row ");
		a_c.addText("Error reading image to decompress");
		a_c.addText("i");
		a_c.addText("runLength");
		a_c.addText("color");
		a_c.addText("rowLength");
		a_c.addText("y");
		a_c.addText("ret");
		a_c.addText("outputStream");
		a_c.addText("inputStream");
		a_c.addText("baos");
		a_c.addText("ioException");
		a_c.addText("compressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compressT4_1D");
		a_c.addText("8");
		a_c.addText("bitsAvailable");
		a_c.addText("y");
		a_c.addText("outputStream");
		a_c.addText("uncompressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasFill");
		a_c.addText("inputStream");
		a_c.addText("decompressT4_1D");
		a_c.addText("Expected EOL not found");
		a_c.addText("Decompression error");
		a_c.addText("Unrecoverable row length error in image row ");
		a_c.addText("i");
		a_c.addText("runLength");
		a_c.addText("entry");
		a_c.addText("color");
		a_c.addText("rowLength");
		a_c.addText("huffmanException");
		a_c.addText("rowLength");
		a_c.addText("y");
		a_c.addText("ret");
		a_c.addText("outputStream");
		a_c.addText("compressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasFill");
		a_c.addText("inputStream");
		a_c.addText("compressT");
		a_c.addText("-3");
		a_c.addText("-3");
		a_c.addText("-2");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("a2");
		a_c.addText("a0a1");
		a_c.addText("a1a2");
		a_c.addText("a0");
		a_c.addText("a1");
		a_c.addText("b1");
		a_c.addText("outputStream");
		a_c.addText("codingA0Color");
		a_c.addText("codingLine");
		a_c.addText("a1b1");
		a_c.addText("compressT4_2D");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("Error reading image to compress");
		a_c.addText("8");
		a_c.addText("ioException");
		a_c.addText("i");
		a_c.addText("a0");
		a_c.addText("codingA0Color");
		a_c.addText("referenceA0Color");
		a_c.addText("a1");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("swap");
		a_c.addText("bitsAvailable");
		a_c.addText("y");
		a_c.addText("uncompressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasFill");
		a_c.addText("parameterK");
		a_c.addText("inputStream");
		a_c.addText("outputStream");
		a_c.addText("referenceLine");
		a_c.addText("codingLine");
		a_c.addText("kCounter");
		a_c.addText("decompressT4_2D");
		a_c.addText("10");
		a_c.addText("Expected EOL not found");
		a_c.addText("-2");
		a_c.addText("-3");
		a_c.addText("Invalid/unknown T.4 control code ");
		a_c.addText("Decompression error");
		a_c.addText("Decompression error");
		a_c.addText("Unrecoverable row length error in image row ");
		a_c.addText("a0a1");
		a_c.addText("a1a2");
		a_c.addText("a1");
		a_c.addText("a2");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1");
		a_c.addText("a0");
		a_c.addText("codingA0Color");
		a_c.addText("referenceA0Color");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("i");
		a_c.addText("runLength");
		a_c.addText("color");
		a_c.addText("entry");
		a_c.addText("tagBit");
		a_c.addText("ioException");
		a_c.addText("huffmanException");
		a_c.addText("rowLength");
		a_c.addText("y");
		a_c.addText("referenceLine");
		a_c.addText("outputStream");
		a_c.addText("compressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasFill");
		a_c.addText("inputStream");
		a_c.addText("compressT6");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("Error reading image to compress");
		a_c.addText("I/O error");
		a_c.addText("ioException");
		a_c.addText("i");
		a_c.addText("a0");
		a_c.addText("codingA0Color");
		a_c.addText("referenceA0Color");
		a_c.addText("a1");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("swap");
		a_c.addText("y");
		a_c.addText("outputStream");
		a_c.addText("referenceLine");
		a_c.addText("codingLine");
		a_c.addText("ret");
		a_c.addText("inputStream");
		a_c.addText("bais");
		a_c.addText("ioException");
		a_c.addText("uncompressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("decompressT6");
		a_c.addText("10");
		a_c.addText("-2");
		a_c.addText("-3");
		a_c.addText("Invalid/unknown T.6 control code ");
		a_c.addText("Decompression error");
		a_c.addText("Unrecoverable row length error in image row ");
		a_c.addText("a0a1");
		a_c.addText("a1a2");
		a_c.addText("a1");
		a_c.addText("a2");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1b1");
		a_c.addText("a1");
		a_c.addText("entry");
		a_c.addText("a0");
		a_c.addText("codingA0Color");
		a_c.addText("referenceA0Color");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("huffmanException");
		a_c.addText("rowLength");
		a_c.addText("y");
		a_c.addText("compressed");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("inputStream");
		a_c.addText("outputStream");
		a_c.addText("referenceLine");
		a_c.addText("isEOL");
		a_c.addText("entry");
		a_c.addText("hasFill");
		a_c.addText("writeRunLength");
		a_c.addText("1792");
		a_c.addText("64");
		a_c.addText("makeUpCodes");
		a_c.addText("terminatingCodes");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("bitStream");
		a_c.addText("runLength");
		a_c.addText("color");
		a_c.addText("makeUpCodes");
		a_c.addText("terminatingCodes");
		a_c.addText("terminatingEntry");
		a_c.addText("lowerBound");
		a_c.addText("middle");
		a_c.addText("entries");
		a_c.addText("value");
		a_c.addText("first");
		a_c.addText("last");
		a_c.addText("readTotalRunLength");
		a_c.addText("63");
		a_c.addText("Decompression error");
		a_c.addText("runLength");
		a_c.addText("totalLength");
		a_c.addText("runLength");
		a_c.addText("huffmanException");
		a_c.addText("bitStream");
		a_c.addText("color");
		a_c.addText("changingElementAt");
		a_c.addText("line");
		a_c.addText("position");
		a_c.addText("nextChangingElement");
		a_c.addText("line");
		a_c.addText("currentColour");
		a_c.addText("start");
		a_c.addText("position");
		a_c.addText("fillRange");
		a_c.addText("i");
		a_c.addText("outputStream");
		a_c.addText("referenceRow");
		a_c.addText("a0");
		a_c.addText("end");
		a_c.addText("color");
		a_c.addText("<clinit>");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("entry");
		a_c.addText("cannotHappen");
	}
	public void c392_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{75, 102, 166, 275, 465});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.Argument, new int[]{75, 665});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.Argument, new int[]{75, 243, 621, 701});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.MethodCall, new int[]{85, 121, 157, 165, 165, 165, 165, 193, 298, 351, 382, 478, 511, 518, 518, 518, 518});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{97, 300, 480, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, new int[]{102, 166, 354, 465, 519, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{102, 125, 166, 197, 275, 354, 465, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{102, 125, 166, 197, 275, 354, 465, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, new int[]{117, 141, 172, 213, 281, 372, 470, 536});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.ConstructorCall, new int[]{117, 142, 172, 213, 281, 372, 471, 536});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.ConstructorCall, new int[]{118, 143, 173, 214, 282, 373, 472, 537});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{122, 124, 125, 125, 125, 125, 150, 158, 163, 165, 165, 165, 165, 183, 185, 189, 196, 197, 197, 197, 197, 226, 236, 241, 243, 243, 243, 243, 295, 333, 337, 339, 343, 354, 444, 458, 464, 465, 465, 465, 465, 516, 600, 606, 708});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitArrayOutputStream"), dmDependency.Type.LocalVar, new int[]{125, 166, 197, 243, 354, 465, 519, 606});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), dmDependency.Type.LocalVar, new int[]{125, 166, 197, 243, 354, 465, 519, 606});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{125, 197, 354, 519, 665});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{160, 166, 220, 232, 238, 380, 421, 452, 454, 460, 578, 596, 602, 683});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.MethodCall, new int[]{165, 165, 165, 165, 518, 518, 518, 518});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{166, 243, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, new int[]{166, 519});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables"), dmDependency.Type.FieldUse, new int[]{175, 177, 192, 251, 253, 255, 257, 259, 261, 263, 272, 287, 289, 310, 346, 393, 396, 406, 408, 410, 412, 414, 416, 418, 490, 514, 515, 550, 553, 563, 565, 567, 569, 571, 573, 575, 610, 614, 614, 614, 614, 614, 614, 614, 629, 630, 632, 633, 636, 36, 39, 42, 45, 48, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.MethodCall, new int[]{175, 177, 192, 265, 272, 287, 289, 310, 346, 490, 514, 515, 638, 643, 647});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), dmDependency.Type.OwnFieldUse, new int[]{218, 378, 392, 549, 675, 677, 27, 28, 29, 37, 40, 43, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), dmDependency.Type.MethodCall, new int[]{218, 378, 392, 549, 675, 677, 37, 40, 43, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.LocalVar, new int[]{243, 275, 275, 275, 275, 275, 275, 275, 465, 606, 648, 648, 648, 648, 648, 648, 648, 72, 72, 72, 72, 72});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTreeException"), dmDependency.Type.LocalVar, new int[]{243, 465, 606, 683, 72});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.FieldUse, new int[]{421, 578, 639, 644, 655, 655, 658, 37, 37, 40, 40, 43, 43, 46, 46, 49, 49, 50, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.Argument, new int[]{606, 648});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4_T6_Tables$Entry"), dmDependency.Type.Returns, 648);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), m_classes.get("org.apache.commons.imaging.common.itu_t4.HuffmanTree"), dmDependency.Type.ConstructorCall, new int[]{27, 28, 29});
	}

	public void c393_texts(dmClass a_c) {
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("is");
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("processImage");
		a_c.addText("getColorTableRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("index");
		a_c.addText("blue");
		a_c.addText("green");
		a_c.addText("red");
		a_c.addText("alpha");
	}
	public void c393_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{36, 37, 46, 47, 48});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 40);
	}

	public void c394_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("writeImage");
		a_c.addText("80");
		a_c.addText("55");
		a_c.addText("10");
		a_c.addText("WIDTH ");
		a_c.addText("10");
		a_c.addText("HEIGHT ");
		a_c.addText("10");
		a_c.addText("DEPTH 4");
		a_c.addText("10");
		a_c.addText("MAXVAL 255");
		a_c.addText("10");
		a_c.addText("TUPLTYPE RGB_ALPHA");
		a_c.addText("10");
		a_c.addText("ENDHDR");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("argb");
		a_c.addText("alpha");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("width");
		a_c.addText("height");
	}
	public void c394_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{34, 35, 36, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 67, 68, 69, 70});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{38, 39, 61});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{41, 44, 47, 50, 53, 56});
	}

	public void c395_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("byteOrder");
		a_c.addText("tiffLZWMode");
		a_c.addText("bytesRead");
		a_c.addText("bitsInCache");
		a_c.addText("bitCache");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("byteOrder");
		a_c.addText("read");
		a_c.addText("8");
		a_c.addText("setTiffLZWMode");
		a_c.addText("readBits");
		a_c.addText("257");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("next");
		a_c.addText("newByte");
		a_c.addText("sample");
		a_c.addText("sampleBits");
		a_c.addText("sampleMask");
		a_c.addText("sample");
		a_c.addText("result");
		a_c.addText("remainderMask");
		a_c.addText("flushCache");
		a_c.addText("getBytesRead");
	}
	public void c395_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{32, 59, 72});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{33, 47});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{34, 43});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 47);
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{59, 72});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{65, 65, 94});
		d(m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), m_classes.get("long"), dmDependency.Type.Returns, 91);
	}

	public void c396_texts(dmClass a_c) {
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("interpretPixel");
		a_c.addText("getBitsPerSample");
		a_c.addText("offset");
	}
	public void c396_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 47);
	}

	public void c397_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("interpretPixel");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("cieL");
		a_c.addText("cieA");
		a_c.addText("cieB");
		a_c.addText("rgb");
	}
	public void c397_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.color.ColorConversions"), dmDependency.Type.MethodCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 39);
	}

	public void c398_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c398_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Returns, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("byte"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("byte"), dmDependency.Type.Returns, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 32);
	}

	public void c401_texts(dmClass a_c) {
		a_c.addText("LENGTH_UNKNOWN");
		a_c.addText("-1");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataTypes");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("isOffset");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataType");
		a_c.addText("length");
		a_c.addText("exifDirectory");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataType");
		a_c.addText("length");
		a_c.addText("exifDirectory");
		a_c.addText("isOffset");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataType");
		a_c.addText("length");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataType");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataTypes");
		a_c.addText("length");
		a_c.addText("exifDirectory");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("dataTypes");
		a_c.addText("length");
		a_c.addText("exifDirectory");
		a_c.addText("isOffset");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("encodeValue");
		a_c.addText("fieldType");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("getDescription");
		a_c.addText(" (0x");
		a_c.addText(": ");
		a_c.addText("): ");
		a_c.addText("toString");
		a_c.addText("[TagInfo. tag: ");
		a_c.addText(" (0x");
		a_c.addText(", name: ");
		a_c.addText("]");
		a_c.addText("isOffset");
		a_c.addText("isText");
	}
	public void c401_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, new int[]{1, 44, 50, 55, 60, 65, 85});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, new int[]{1, 44, 60, 65});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, new int[]{43, 48, 53});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, new int[]{43, 48, 53, 58, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{53, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.LocalVar, new int[]{65, 76});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.OwnFieldUse, 74);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, 85);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.MethodCall, new int[]{85, 90});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 85);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("byte"), dmDependency.Type.Returns, 85);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 85);
	}

	public void c402_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_ALIAS_LAYER_METADATA");
		a_c.addText("ALL_ALIAS_SKETCHBOOK_PRO_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("Alias Layer Metadata");
		a_c.addText("50784");
	}
	public void c402_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{33, 37});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 37);
	}

	public void c403_texts(dmClass a_c) {
		a_c.addText("gamma");
		a_c.addText("<init>");
		a_c.addText("Gamma");
		a_c.addText("Not a Valid Png File: gAMA Corrupt");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("is");
		a_c.addText("getGamma");
		a_c.addText("100000.0");
	}
	public void c403_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunk"), dmDependency.Type.ConstructorCall, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkGama"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 33);
	}

	public void c404_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_MD_FILE_TAG");
		a_c.addText("EXIF_TAG_MD_SCALE_PIXEL");
		a_c.addText("EXIF_TAG_MD_COLOR_TABLE");
		a_c.addText("EXIF_TAG_MD_LAB_NAME");
		a_c.addText("EXIF_TAG_MD_SAMPLE_INFO");
		a_c.addText("EXIF_TAG_MD_PREP_DATE");
		a_c.addText("EXIF_TAG_MD_PREP_TIME");
		a_c.addText("EXIF_TAG_MD_FILE_UNITS");
		a_c.addText("ALL_MOLECULAR_DYNAMICS_GEL_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("MD FileTag");
		a_c.addText("33445");
		a_c.addText("MD ScalePixel");
		a_c.addText("33446");
		a_c.addText("MD ColorTable");
		a_c.addText("33447");
		a_c.addText("MD LabName");
		a_c.addText("33448");
		a_c.addText("MD SampleInfo");
		a_c.addText("33449");
		a_c.addText("MD PrepDate");
		a_c.addText("33450");
		a_c.addText("MD PrepTime");
		a_c.addText("33451");
		a_c.addText("MD FileUnits");
		a_c.addText("33452");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("7");
	}
	public void c404_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{36, 40, 44, 48, 52, 56, 60, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{36, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{40, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{44, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{48, 52, 56, 60, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{48, 52, 56, 60, 64, 68, 68, 68, 68, 68});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 68);
	}

	public void c405_texts(dmClass a_c) {
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("identifier3");
		a_c.addText("version1");
		a_c.addText("version2");
		a_c.addText("version3");
		a_c.addText("logicalScreenWidth");
		a_c.addText("logicalScreenHeight");
		a_c.addText("packedFields");
		a_c.addText("backgroundColorIndex");
		a_c.addText("pixelAspectRatio");
		a_c.addText("globalColorTableFlag");
		a_c.addText("colorResolution");
		a_c.addText("sortFlag");
		a_c.addText("sizeOfGlobalColorTable");
		a_c.addText("<init>");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("identifier3");
		a_c.addText("version1");
		a_c.addText("version2");
		a_c.addText("version3");
		a_c.addText("logicalScreenWidth");
		a_c.addText("logicalScreenHeight");
		a_c.addText("packedFields");
		a_c.addText("backgroundColorIndex");
		a_c.addText("pixelAspectRatio");
		a_c.addText("globalColorTableFlag");
		a_c.addText("colorResolution");
		a_c.addText("sortFlag");
		a_c.addText("sizeOfGlobalColorTable");
	}
	public void c405_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifHeaderInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{43, 44, 45, 46, 47, 48, 51, 52, 53, 55, 57});
	}

	public void c406_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("sample");
		a_c.addText("alpha");
		a_c.addText("getBasicChannelsCount");
	}
	public void c406_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 21);
	}

	public void c407_texts(dmClass a_c) {
		a_c.addText("writeImage");
	}
	public void c407_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 1);
	}

	public void c408_texts(dmClass a_c) {
		a_c.addText("readData");
	}
	public void c408_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Argument, 1);
	}

	public void c409_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("<init>");
		a_c.addText("getAllImageParsers");
		a_c.addText("15");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("getMetadata");
		a_c.addText("getMetadata");
		a_c.addText("bytes");
		a_c.addText("getMetadata");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getMetadata");
		a_c.addText("file");
		a_c.addText("getMetadata");
		a_c.addText(".getMetadata: ");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("getImageInfo");
		a_c.addText("byteSource");
		a_c.addText("getImageInfo");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getFormatCompliance");
		a_c.addText("byteSource");
		a_c.addText("getFormatCompliance");
		a_c.addText("bytes");
		a_c.addText("getFormatCompliance");
		a_c.addText("file");
		a_c.addText("getAllBufferedImages");
		a_c.addText("byteSource");
		a_c.addText("bi");
		a_c.addText("result");
		a_c.addText("getAllBufferedImages");
		a_c.addText("bytes");
		a_c.addText("getAllBufferedImages");
		a_c.addText("file");
		a_c.addText("getBufferedImage");
		a_c.addText("getBufferedImage");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getBufferedImage");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("writeImage");
		a_c.addText("This image format (");
		a_c.addText(") cannot be written.");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("bytes");
		a_c.addText("getImageSize");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("file");
		a_c.addText("getImageSize");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("getICCProfileBytes");
		a_c.addText("bytes");
		a_c.addText("getICCProfileBytes");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("file");
		a_c.addText("getICCProfileBytes");
		a_c.addText(": ");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("dumpImageFile");
		a_c.addText("bytes");
		a_c.addText("dumpImageFile");
		a_c.addText(": ");
		a_c.addText("file");
		a_c.addText("dumpImageFile");
		a_c.addText("byteSource");
		a_c.addText("sw");
		a_c.addText("pw");
		a_c.addText("dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("getName");
		a_c.addText("getDefaultExtension");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("canAcceptType");
		a_c.addText("type2");
		a_c.addText("type");
		a_c.addText("types");
		a_c.addText("canAcceptExtension");
		a_c.addText("file");
		a_c.addText("canAcceptExtension");
		a_c.addText("46");
		a_c.addText("ext2Lower");
		a_c.addText("ext2");
		a_c.addText("ext");
		a_c.addText("fileName");
		a_c.addText("exts");
		a_c.addText("index");
		a_c.addText("getBufferedImageFactory");
		a_c.addText("BUFFERED_IMAGE_FACTORY");
		a_c.addText("params");
		a_c.addText("result");
		a_c.addText("isStrict");
		a_c.addText("STRICT");
		a_c.addText("STRICT");
		a_c.addText("params");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/ImageParser;");
	}
	public void c409_deps() {
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 100);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Returns, 100);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.dcx.DcxImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.icns.IcnsImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.ico.IcoImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.pcx.PcxImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.png.PngImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.wbmp.WbmpImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.xbm.XbmImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.formats.xpm.XpmImageParser"), dmDependency.Type.ConstructorCall, 111);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{111, 148, 148, 195, 224, 243, 281, 281, 327, 356, 389, 403, 417, 435, 458, 474, 493, 493, 531, 585, 600, 617, 631, 653, 653, 684, 703, 719, 746, 746, 778, 802, 825});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{111, 148, 148, 195, 224, 243, 281, 281, 327, 356, 389, 403, 417, 435, 458, 474, 493, 493, 531, 555, 585, 600, 617, 631, 653, 653, 684, 703, 719, 746, 746, 778, 802, 825});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, new int[]{111, 148, 148, 195, 224, 243});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{111, 148, 281, 281, 389, 435, 493, 653, 746, 802, 825});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{148, 403, 585, 653, 746});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{224, 356, 417, 474, 531, 617, 703, 778});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{224, 243, 356, 417, 474, 531, 617, 631, 703, 719, 778, 891});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.File"), dmDependency.Type.MethodCall, new int[]{274, 743, 799, 902});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{281, 389, 435, 493, 555, 653, 746, 802});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, new int[]{281, 281, 327, 356});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, new int[]{389, 403, 417});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{435, 458, 474, 493, 493, 531});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, new int[]{458, 458});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, 474);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 555);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 555);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 555);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, 583);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 585);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, new int[]{585, 600, 617, 631, 653});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{653, 684, 703, 719, 746});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 818);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 819);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, 823);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, 825);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 825);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 825);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 825);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 842);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Argument, 842);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, new int[]{891, 891});
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), dmDependency.Type.Returns, 930);
		d(m_classes.get("org.apache.commons.imaging.ImageParser"), m_classes.get("org.apache.commons.imaging.common.SimpleBufferedImageFactory"), dmDependency.Type.ConstructorCall, new int[]{943, 953});
	}

	public void c410_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("getSamplesPerByte");
		a_c.addText("8");
		a_c.addText("BMP RLE: bad BitsPerPixel: ");
		a_c.addText("convertDataToSamples");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("15");
		a_c.addText("BMP RLE: bad BitsPerPixel: ");
		a_c.addText("rgbs");
		a_c.addText("sample1");
		a_c.addText("sample2");
		a_c.addText("rgbs");
		a_c.addText("data");
		a_c.addText("rgbs");
		a_c.addText("processByteOfData");
		a_c.addText("skipping bad pixel (");
		a_c.addText(",");
		a_c.addText(")");
		a_c.addText("rgb");
		a_c.addText("i");
		a_c.addText("rgbs");
		a_c.addText("repeat");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("imageBuilder");
		a_c.addText("pixelsWritten");
		a_c.addText("processImage");
		a_c.addText("255");
		a_c.addText("RLE (");
		a_c.addText(",");
		a_c.addText(") a");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE (");
		a_c.addText(",");
		a_c.addText(") b");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE deltaX");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE deltaY");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("bytes");
		a_c.addText("RLE: Absolute Mode");
		a_c.addText("255");
		a_c.addText("deltaX");
		a_c.addText("deltaY");
		a_c.addText("samples");
		a_c.addText("towrite");
		a_c.addText("written");
		a_c.addText("i");
		a_c.addText("samplesPerByte");
		a_c.addText("size");
		a_c.addText("bytes");
		a_c.addText("remaining");
		a_c.addText("rgbs");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("imageBuilder");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("done");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/bmp/PixelParserRle;");
	}
	public void c410_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.ConstructorCall, 31);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{32, 40, 87});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, new int[]{35, 37, 40, 47, 51, 59, 93, 94});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.FieldUse, new int[]{35, 37, 40, 47, 51, 59, 93, 94});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{40, 59});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, new int[]{63, 87});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 77);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{100, 101, 116, 117, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{100, 101, 116, 117, 136});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), m_classes.get("byte"), dmDependency.Type.LocalVar, 165);
	}

	public void c412_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".bmp");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("BMP_HEADER_SIGNATURE");
		a_c.addText("BI_RGB");
		a_c.addText("0");
		a_c.addText("BI_RLE4");
		a_c.addText("2");
		a_c.addText("BI_RLE8");
		a_c.addText("1");
		a_c.addText("BI_BITFIELDS");
		a_c.addText("3");
		a_c.addText("BITMAP_FILE_HEADER_SIZE");
		a_c.addText("14");
		a_c.addText("BITMAP_INFO_HEADER_SIZE");
		a_c.addText("40");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Bmp-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".bmp");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("readBmpHeaderInfo");
		a_c.addText("Identifier1");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Identifier2");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Signature");
		a_c.addText("8");
		a_c.addText("File Size");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Reserved");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Bitmap Data Offset");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Bitmap Header Size");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("40");
		a_c.addText("Width");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Height");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Planes");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Bits Per Pixel");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Compression");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Bitmap Data Size");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("HResolution");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("VResolution");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorsUsed");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorsImportant");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("52");
		a_c.addText("RedMask");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("GreenMask");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("BlueMask");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("56");
		a_c.addText("AlphaMask");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("108");
		a_c.addText("ColorSpaceType");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceRedX");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceRedY");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceRedZ");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceGreenX");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceGreenY");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceGreenZ");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceBlueX");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceBlueY");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ColorSpaceBlueZ");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("GammaRed");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("GammaGreen");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("GammaBlue");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("124");
		a_c.addText("Intent");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ProfileData");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ProfileSize");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Reserved");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("Invalid/unsupported BMP file");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("fileSize");
		a_c.addText("reserved");
		a_c.addText("bitmapDataOffset");
		a_c.addText("bitmapHeaderSize");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("bitmapDataSize");
		a_c.addText("hResolution");
		a_c.addText("vResolution");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("52");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("56");
		a_c.addText("alphaMask");
		a_c.addText("108");
		a_c.addText("colorSpaceType");
		a_c.addText("colorSpace.red.x");
		a_c.addText("colorSpace.red.y");
		a_c.addText("colorSpace.red.z");
		a_c.addText("colorSpace.green.x");
		a_c.addText("colorSpace.green.y");
		a_c.addText("colorSpace.green.z");
		a_c.addText("colorSpace.blue.x");
		a_c.addText("colorSpace.blue.y");
		a_c.addText("colorSpace.blue.z");
		a_c.addText("gammaRed");
		a_c.addText("gammaGreen");
		a_c.addText("gammaBlue");
		a_c.addText("124");
		a_c.addText("intent");
		a_c.addText("profileData");
		a_c.addText("profileSize");
		a_c.addText("reservedV5");
		a_c.addText("is");
		a_c.addText("formatCompliance");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("fileSize");
		a_c.addText("reserved");
		a_c.addText("bitmapDataOffset");
		a_c.addText("bitmapHeaderSize");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("planes");
		a_c.addText("bitsPerPixel");
		a_c.addText("compression");
		a_c.addText("bitmapDataSize");
		a_c.addText("hResolution");
		a_c.addText("vResolution");
		a_c.addText("colorsUsed");
		a_c.addText("colorsImportant");
		a_c.addText("redMask");
		a_c.addText("greenMask");
		a_c.addText("blueMask");
		a_c.addText("alphaMask");
		a_c.addText("colorSpaceType");
		a_c.addText("colorSpace");
		a_c.addText("gammaRed");
		a_c.addText("gammaGreen");
		a_c.addText("gammaBlue");
		a_c.addText("intent");
		a_c.addText("profileData");
		a_c.addText("profileSize");
		a_c.addText("reservedV5");
		a_c.addText("getRLEBytes");
		a_c.addText("255");
		a_c.addText("RLE a");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE b");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE c");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("255");
		a_c.addText("RLE d");
		a_c.addText("BMP: Bad RLE");
		a_c.addText("bytes");
		a_c.addText("RLE: Absolute Mode");
		a_c.addText("c");
		a_c.addText("d");
		a_c.addText("size");
		a_c.addText("bytes");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("is");
		a_c.addText("rleSamplesPerByte");
		a_c.addText("baos");
		a_c.addText("done");
		a_c.addText("readImageContents");
		a_c.addText("ColorsUsed");
		a_c.addText("BitsPerPixel");
		a_c.addText("ColorTableSize");
		a_c.addText("bhi.colorsUsed");
		a_c.addText("Compression");
		a_c.addText("Compression: BI_RGB");
		a_c.addText("8");
		a_c.addText("Compression: BI_RLE4");
		a_c.addText("Compression: BI_RLE8");
		a_c.addText("Compression: BI_BITFIELDS");
		a_c.addText("8");
		a_c.addText("BMP: Unknown Compression: ");
		a_c.addText("ColorTable");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("paletteLength");
		a_c.addText("ColorTable: ");
		a_c.addText("null");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("bhi.Width");
		a_c.addText("bhi.Height");
		a_c.addText("ImageLineLength");
		a_c.addText("PixelCount");
		a_c.addText("14");
		a_c.addText("40");
		a_c.addText("12");
		a_c.addText("bhi.BitmapDataOffset");
		a_c.addText("expectedDataOffset");
		a_c.addText("BMP has invalid image data offset: ");
		a_c.addText(" (expected: ");
		a_c.addText(", paletteLength: ");
		a_c.addText(", headerSize: ");
		a_c.addText(")");
		a_c.addText("BitmapDataOffset");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("imageDataSize");
		a_c.addText("ImageData");
		a_c.addText("Not a Valid BMP File");
		a_c.addText("ImageData.length");
		a_c.addText("BMP: Unknown Compression: ");
		a_c.addText("paletteLength");
		a_c.addText("paletteLength");
		a_c.addText("paletteLength");
		a_c.addText("paletteLength");
		a_c.addText("paletteLength");
		a_c.addText("paletteLength");
		a_c.addText("pixelCount");
		a_c.addText("imageData");
		a_c.addText("pixelParser");
		a_c.addText("pixelParser");
		a_c.addText("pixelParser");
		a_c.addText("is");
		a_c.addText("formatCompliance");
		a_c.addText("bhi");
		a_c.addText("colorTableSize");
		a_c.addText("paletteLength");
		a_c.addText("rleSamplesPerByte");
		a_c.addText("rle");
		a_c.addText("colorTable");
		a_c.addText("imageLineLength");
		a_c.addText("headerSize");
		a_c.addText("expectedDataOffset");
		a_c.addText("extraBytes");
		a_c.addText("imageDataSize");
		a_c.addText("imageData");
		a_c.addText("pixelParser");
		a_c.addText("readBmpHeaderInfo");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("Unknown parameter: ");
		a_c.addText("BMP: couldn\'t read header");
		a_c.addText("firstKey");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("bhi");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getBmpTypeDescription");
		a_c.addText("66");
		a_c.addText("77");
		a_c.addText("Windows 3.1x, 95, NT,");
		a_c.addText("66");
		a_c.addText("65");
		a_c.addText("OS/2 Bitmap Array");
		a_c.addText("67");
		a_c.addText("73");
		a_c.addText("OS/2 Color Icon");
		a_c.addText("67");
		a_c.addText("80");
		a_c.addText("OS/2 Color Pointer");
		a_c.addText("73");
		a_c.addText("67");
		a_c.addText("OS/2 Icon");
		a_c.addText("80");
		a_c.addText("84");
		a_c.addText("OS/2 Pointer");
		a_c.addText("Unknown");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("getImageInfo");
		a_c.addText("Unknown parameter: ");
		a_c.addText("Couldn\'t read BMP Data");
		a_c.addText("BMP: couldn\'t read header");
		a_c.addText("BMP Windows Bitmap");
		a_c.addText("image/x-ms-bmp");
		a_c.addText("0.0254");
		a_c.addText("0.0254");
		a_c.addText("Bmp (");
		a_c.addText(": ");
		a_c.addText(")");
		a_c.addText("BMP Windows Bitmap");
		a_c.addText("image/x-ms-bmp");
		a_c.addText("firstKey");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("ic");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("height");
		a_c.addText("width");
		a_c.addText("comments");
		a_c.addText("bitsPerPixel");
		a_c.addText("format");
		a_c.addText("name");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("formatDetails");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("dumpImageFile");
		a_c.addText("bmp.dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("imageData");
		a_c.addText("getFormatCompliance");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("result");
		a_c.addText("getBufferedImage");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getBufferedImage");
		a_c.addText("BUFFERED_IMAGE_FACTORY");
		a_c.addText("BUFFERED_IMAGE_FACTORY");
		a_c.addText("Unknown parameter: ");
		a_c.addText("Couldn\'t read BMP Data");
		a_c.addText("width: ");
		a_c.addText("height: ");
		a_c.addText("width*height: ");
		a_c.addText("width*height*4: ");
		a_c.addText("firstKey");
		a_c.addText("inputStream");
		a_c.addText("params");
		a_c.addText("ic");
		a_c.addText("bhi");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("pixelParser");
		a_c.addText("imageBuilder");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("Unknown parameter: ");
		a_c.addText("256");
		a_c.addText("66");
		a_c.addText("77");
		a_c.addText("54");
		a_c.addText("54");
		a_c.addText("40");
		a_c.addText("firstKey");
		a_c.addText("writer");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("pixelDensity");
		a_c.addText("palette");
		a_c.addText("writer");
		a_c.addText("imagedata");
		a_c.addText("bos");
		a_c.addText("filesize");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/formats/bmp/BmpImageParser;");
		a_c.addText(".bmp");
		a_c.addText("8");
		a_c.addText("66");
		a_c.addText("77");
	}
	public void c412_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{72, 720});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 72);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 87);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{92, 579});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{92, 303, 477, 485, 491, 511, 542, 605, 623, 636, 645});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{92, 239, 303, 477, 485, 491, 511, 542, 605, 623, 636, 645, 685});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Returns, new int[]{92, 477});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{92, 239, 303, 645});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Argument, new int[]{92, 303});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{99, 100, 107, 108, 109, 111, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 255, 257, 272, 274, 294, 391, 438, 451});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{103, 63});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.MethodCall, new int[]{103, 558, 662});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.ConstructorCall, 127);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpaceCoordinate"), dmDependency.Type.ConstructorCall, new int[]{128, 129, 130});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.FieldUse, new int[]{128, 129, 130, 167, 168, 169, 170, 171, 172, 173, 174, 175, 218, 219, 220, 221, 222, 223, 224, 225, 226});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpaceCoordinate"), dmDependency.Type.FieldUse, new int[]{167, 168, 169, 170, 171, 172, 173, 174, 175, 218, 219, 220, 221, 222, 223, 224, 225, 226});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{188, 385, 433, 473, 502, 508, 553, 562, 569, 659, 664});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.ConstructorCall, 239);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{239, 239, 303, 477, 477, 477, 605, 761});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo$ColorSpace"), dmDependency.Type.LocalVar, 239);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{239, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 249);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{256, 258, 273, 275, 296, 303});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 303);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), dmDependency.Type.Returns, 303);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.FieldUse, new int[]{311, 313, 317, 318, 320, 321, 331, 336, 375, 385, 401, 401, 404, 404, 410, 411, 421, 421, 421, 428, 431, 433, 441, 461, 473, 511, 511, 572, 573, 578, 589, 592, 595, 595, 595, 595, 671, 672});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRle"), dmDependency.Type.ConstructorCall, 464);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserRgb"), dmDependency.Type.ConstructorCall, 467);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserBitFields"), dmDependency.Type.ConstructorCall, 470);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), dmDependency.Type.ConstructorCall, 477);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.LocalVar, new int[]{477, 477, 477, 477, 685});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.LocalVar, new int[]{477, 485});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{477, 485, 491, 511, 542, 605, 623, 636});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{481, 557, 630, 632, 642});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{485, 485, 485, 485, 559, 559, 559, 559, 634, 634, 634, 634, 645, 645, 645, 645});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, new int[]{485, 636});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 491);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 511);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 511);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 542);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageContents"), dmDependency.Type.FieldUse, new int[]{565, 566, 667, 681});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.FieldUse, 602);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 603);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 605);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{615, 621});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 619);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 623);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, 623);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.ConstructorCall, 630);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.LocalVar, 636);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{636, 645});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 645);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 682);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.MethodCall, 683);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 685);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 685);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 685);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 685);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 685);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 706);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, 709);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, 709);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterRgb"), dmDependency.Type.ConstructorCall, 714);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriterPalette"), dmDependency.Type.ConstructorCall, 716);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), dmDependency.Type.MethodCall, new int[]{719, 727, 733, 743, 758});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.ConstructorCall, 720);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{723, 724});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{729, 731, 732, 739, 740, 741, 742, 743, 745, 746, 747, 748, 750, 752, 754, 760});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{735, 736});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.MethodCall, new int[]{747, 748});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.palette.SimplePalette"), dmDependency.Type.MethodCall, 752);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpWriter"), dmDependency.Type.LocalVar, new int[]{761, 761});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.BmpImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.LocalVar, 761);
	}

	public void c413_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("decompress");
		a_c.addText("Tiff: Unpack bits source exhausted: ");
		a_c.addText(", done + ");
		a_c.addText(", expected + ");
		a_c.addText("127");
		a_c.addText("-127");
		a_c.addText("-128");
		a_c.addText("Packbits: ");
		a_c.addText("j");
		a_c.addText("count");
		a_c.addText("j");
		a_c.addText("b");
		a_c.addText("count");
		a_c.addText("n");
		a_c.addText("bytes");
		a_c.addText("expected");
		a_c.addText("total");
		a_c.addText("baos");
		a_c.addText("i");
		a_c.addText("findNextDuplicate");
		a_c.addText("b");
		a_c.addText("i");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("prev");
		a_c.addText("findRunLength");
		a_c.addText("bytes");
		a_c.addText("start");
		a_c.addText("b");
		a_c.addText("i");
		a_c.addText("compress");
		a_c.addText("128");
		a_c.addText("128");
		a_c.addText("len");
		a_c.addText("actualLen");
		a_c.addText("nextptr");
		a_c.addText("nextdup");
		a_c.addText("runlen");
		a_c.addText("i");
		a_c.addText("len");
		a_c.addText("actualLen");
		a_c.addText("dup");
		a_c.addText("ptr");
		a_c.addText("result");
		a_c.addText("baos");
		a_c.addText("bytes");
	}
	public void c413_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 24);
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{24, 104});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{24, 70, 92, 104});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{37, 66});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{51, 62, 70});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 70);
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{92, 92, 104, 153});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 104);
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 109);
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{118, 119, 144, 146, 151, 153, 153, 153, 153});
		d(m_classes.get("org.apache.commons.imaging.common.PackBits"), m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), dmDependency.Type.LocalVar, 153);
	}

	public void c414_texts(dmClass a_c) {
		a_c.addText("getColorBufferedImage");
		a_c.addText("getGrayscaleBufferedImage");
	}
	public void c414_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{1, 1});
	}

	public void c415_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeSegment");
		a_c.addText("byteSource");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeSegment");
		a_c.addText("byteSource");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("removeSegment");
		a_c.addText("byteSource");
		a_c.addText("removeIPTC");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("removeIPTC");
		a_c.addText("Image contains more than one Photoshop App13 segment.");
		a_c.addText("oldSegment");
		a_c.addText("params");
		a_c.addText("oldData");
		a_c.addText("newBlocks");
		a_c.addText("newRecords");
		a_c.addText("newData");
		a_c.addText("segmentBytes");
		a_c.addText("newSegment");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("removeSegment");
		a_c.addText("jfifPieces");
		a_c.addText("oldPieces");
		a_c.addText("photoshopApp13Segments");
		a_c.addText("newPieces");
		a_c.addText("writeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("newData");
		a_c.addText("byteSource");
		a_c.addText("writeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("newData");
		a_c.addText("byteSource");
		a_c.addText("writeIPTC");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("newData");
		a_c.addText("byteSource");
		a_c.addText("writeIPTC");
		a_c.addText("Image contains more than one Photoshop App13 segment.");
		a_c.addText("1028");
		a_c.addText("8");
		a_c.addText("1028");
		a_c.addText("65517");
		a_c.addText("newBlocks");
		a_c.addText("newBlockBytes");
		a_c.addText("blockType");
		a_c.addText("blockNameBytes");
		a_c.addText("newBlock");
		a_c.addText("segmentBytes");
		a_c.addText("newSegment");
		a_c.addText("byteSource");
		a_c.addText("os");
		a_c.addText("newData");
		a_c.addText("jfifPieces");
		a_c.addText("oldPieces");
		a_c.addText("photoshopApp13Segments");
		a_c.addText("newPieces");
	}
	public void c415_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{41, 65, 92, 113, 137, 158, 182, 203, 248, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{41, 65, 92, 113, 137, 158, 182, 203, 248, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{41, 65, 92, 113, 137, 158, 182, 203, 248, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{41, 65, 296});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{41, 65, 92, 113, 137, 158, 182, 203, 248, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{90, 317});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.LocalVar, new int[]{92, 137, 182, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{92, 113, 248});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{135, 270});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{137, 158, 272});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.ConstructorCall, new int[]{180, 294});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{182, 203, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.FieldUse, new int[]{226, 342});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{230, 346});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.ConstructorCall, new int[]{237, 242, 354, 363});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.MethodCall, 237);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.MethodCall, new int[]{237, 242, 354, 363});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.MethodCall, new int[]{238, 353, 354, 361});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.ConstructorCall, new int[]{240, 361});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.FieldUse, 243);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.ConstructorCall, new int[]{243, 364, 366});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieceSegment"), dmDependency.Type.LocalVar, new int[]{248, 248, 370});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.LocalVar, new int[]{248, 248});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.LocalVar, new int[]{248, 370, 370});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.LocalVar, 248);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{248, 370, 370, 370});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPieces"), dmDependency.Type.LocalVar, new int[]{248, 370});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.xmp.JpegRewriter$JFIFPiece"), dmDependency.Type.LocalVar, new int[]{248, 248, 248, 370, 370, 370});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Argument, new int[]{248, 272, 296, 319});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock"), dmDependency.Type.ConstructorCall, 358);
	}

	public void c418_texts(dmClass a_c) {
		a_c.addText("A_TO_B0_TAG");
		a_c.addText("A_TO_B1_TAG");
		a_c.addText("A_TO_B2_TAG");
		a_c.addText("BLUE_MATRIX_COLUMN_TAG");
		a_c.addText("BLUE_TRC_TAG");
		a_c.addText("B_TO_A0_TAG");
		a_c.addText("B_TO_A1_TAG");
		a_c.addText("B_TO_A2_TAG");
		a_c.addText("CALIBRATION_DATE_TIME_TAG");
		a_c.addText("CHAR_TARGET_TAG");
		a_c.addText("CHROMATIC_ADAPTATION_TAG");
		a_c.addText("CHROMATICITY_TAG");
		a_c.addText("COLORANT_ORDER_TAG");
		a_c.addText("COLORANT_TABLE_TAG");
		a_c.addText("COPYRIGHT_TAG");
		a_c.addText("DEVICE_MFG_DESC_TAG");
		a_c.addText("DEVICE_MODEL_DESC_TAG");
		a_c.addText("GAMUT_TAG");
		a_c.addText("GRAY_TRC_TAG");
		a_c.addText("GREEN_MATRIX_COLUMN_TAG");
		a_c.addText("GREEN_TRC_TAG");
		a_c.addText("LUMINANCE_TAG");
		a_c.addText("MEASUREMENT_TAG");
		a_c.addText("MEDIA_BLACK_POINT_TAG");
		a_c.addText("MEDIA_WHITE_POINT_TAG");
		a_c.addText("NAMED_COLOR_2_TAG");
		a_c.addText("OUTPUT_RESPONSE_TAG");
		a_c.addText("PREVIEW_0_TAG");
		a_c.addText("PREVIEW_1_TAG");
		a_c.addText("PREVIEW_2_TAG");
		a_c.addText("PROFILE_DESCRIPTION_TAG");
		a_c.addText("PROFILE_SEQUENCE_DESC_TAG");
		a_c.addText("RED_MATRIX_COLUMN_TAG");
		a_c.addText("RED_TRC_TAG");
		a_c.addText("TECHNOLOGY_TAG");
		a_c.addText("VIEWING_COND_DESC_TAG");
		a_c.addText("VIEWING_CONDITIONS_TAG");
		a_c.addText("name");
		a_c.addText("typeDescription");
		a_c.addText("signature");
		a_c.addText("values");
		a_c.addText("valueOf");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccTagTypes;");
		a_c.addText("name");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("typeDescription");
		a_c.addText("signature");
		a_c.addText("getName");
		a_c.addText("getTypeDescription");
		a_c.addText("getSignature");
		a_c.addText("<clinit>");
		a_c.addText("A_TO_B0_TAG");
		a_c.addText("AToB0Tag");
		a_c.addText("lut8Type or lut16Type or lutAtoBType");
		a_c.addText("1093812784");
		a_c.addText("A_TO_B1_TAG");
		a_c.addText("AToB1Tag");
		a_c.addText("lut8Type or lut16Type or lutAtoBType");
		a_c.addText("1093812785");
		a_c.addText("A_TO_B2_TAG");
		a_c.addText("AToB2Tag");
		a_c.addText("lut8Type or lut16Type or lutAtoBType");
		a_c.addText("1093812786");
		a_c.addText("BLUE_MATRIX_COLUMN_TAG");
		a_c.addText("blueMatrixColumnTag");
		a_c.addText("XYZType");
		a_c.addText("1649957210");
		a_c.addText("BLUE_TRC_TAG");
		a_c.addText("blueTRCTag");
		a_c.addText("curveType or parametricCurveType");
		a_c.addText("1649693251");
		a_c.addText("B_TO_A0_TAG");
		a_c.addText("BToA0Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1110589744");
		a_c.addText("B_TO_A1_TAG");
		a_c.addText("6");
		a_c.addText("BToA1Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1110589745");
		a_c.addText("B_TO_A2_TAG");
		a_c.addText("7");
		a_c.addText("BToA2Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1110589746");
		a_c.addText("CALIBRATION_DATE_TIME_TAG");
		a_c.addText("8");
		a_c.addText("calibrationDateTimeTag");
		a_c.addText("dateTimeType");
		a_c.addText("1667329140");
		a_c.addText("CHAR_TARGET_TAG");
		a_c.addText("9");
		a_c.addText("charTargetTag");
		a_c.addText("textType");
		a_c.addText("1952543335");
		a_c.addText("CHROMATIC_ADAPTATION_TAG");
		a_c.addText("10");
		a_c.addText("chromaticAdaptationTag");
		a_c.addText("s15Fixed16ArrayType");
		a_c.addText("1667785060");
		a_c.addText("CHROMATICITY_TAG");
		a_c.addText("11");
		a_c.addText("chromaticityTag");
		a_c.addText("chromaticityType");
		a_c.addText("1667789421");
		a_c.addText("COLORANT_ORDER_TAG");
		a_c.addText("12");
		a_c.addText("colorantOrderTag");
		a_c.addText("colorantOrderType");
		a_c.addText("1668051567");
		a_c.addText("COLORANT_TABLE_TAG");
		a_c.addText("13");
		a_c.addText("colorantTableTag");
		a_c.addText("colorantTableType");
		a_c.addText("1668051572");
		a_c.addText("COPYRIGHT_TAG");
		a_c.addText("14");
		a_c.addText("copyrightTag");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1668313716");
		a_c.addText("DEVICE_MFG_DESC_TAG");
		a_c.addText("15");
		a_c.addText("deviceMfgDescTag");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1684893284");
		a_c.addText("DEVICE_MODEL_DESC_TAG");
		a_c.addText("16");
		a_c.addText("deviceModelDescTag");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1684890724");
		a_c.addText("GAMUT_TAG");
		a_c.addText("17");
		a_c.addText("gamutTag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1734438260");
		a_c.addText("GRAY_TRC_TAG");
		a_c.addText("18");
		a_c.addText("grayTRCTag");
		a_c.addText("curveType or parametricCurveType");
		a_c.addText("1800688195");
		a_c.addText("GREEN_MATRIX_COLUMN_TAG");
		a_c.addText("19");
		a_c.addText("greenMatrixColumnTag");
		a_c.addText("XYZType");
		a_c.addText("1733843290");
		a_c.addText("GREEN_TRC_TAG");
		a_c.addText("20");
		a_c.addText("greenTRCTag");
		a_c.addText("curveType or parametricCurveType");
		a_c.addText("1733579331");
		a_c.addText("LUMINANCE_TAG");
		a_c.addText("21");
		a_c.addText("luminanceTag");
		a_c.addText("XYZType");
		a_c.addText("1819635049");
		a_c.addText("MEASUREMENT_TAG");
		a_c.addText("22");
		a_c.addText("measurementTag");
		a_c.addText("measurementType");
		a_c.addText("1835360627");
		a_c.addText("MEDIA_BLACK_POINT_TAG");
		a_c.addText("23");
		a_c.addText("mediaBlackPointTag");
		a_c.addText("XYZType");
		a_c.addText("1651208308");
		a_c.addText("MEDIA_WHITE_POINT_TAG");
		a_c.addText("24");
		a_c.addText("mediaWhitePointTag");
		a_c.addText("XYZType");
		a_c.addText("2004119668");
		a_c.addText("NAMED_COLOR_2_TAG");
		a_c.addText("25");
		a_c.addText("namedColor2Tag");
		a_c.addText("namedColor2Type");
		a_c.addText("1852009522");
		a_c.addText("OUTPUT_RESPONSE_TAG");
		a_c.addText("26");
		a_c.addText("outputResponseTag");
		a_c.addText("responseCurveSet16Type");
		a_c.addText("1919251312");
		a_c.addText("PREVIEW_0_TAG");
		a_c.addText("27");
		a_c.addText("preview0Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1886545200");
		a_c.addText("PREVIEW_1_TAG");
		a_c.addText("28");
		a_c.addText("preview1Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1886545201");
		a_c.addText("PREVIEW_2_TAG");
		a_c.addText("29");
		a_c.addText("preview2Tag");
		a_c.addText("lut8Type or lut16Type or lutBtoAType");
		a_c.addText("1886545202");
		a_c.addText("PROFILE_DESCRIPTION_TAG");
		a_c.addText("30");
		a_c.addText("profileDescriptionTag");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1684370275");
		a_c.addText("PROFILE_SEQUENCE_DESC_TAG");
		a_c.addText("31");
		a_c.addText("profileSequenceDescTag");
		a_c.addText("profileSequenceDescType");
		a_c.addText("1886610801");
		a_c.addText("RED_MATRIX_COLUMN_TAG");
		a_c.addText("32");
		a_c.addText("redMatrixColumnTag");
		a_c.addText("XYZType");
		a_c.addText("1918392666");
		a_c.addText("RED_TRC_TAG");
		a_c.addText("33");
		a_c.addText("redTRCTag");
		a_c.addText("curveType or parametricCurveType");
		a_c.addText("1918128707");
		a_c.addText("TECHNOLOGY_TAG");
		a_c.addText("34");
		a_c.addText("technologyTag");
		a_c.addText("signatureType");
		a_c.addText("1952801640");
		a_c.addText("VIEWING_COND_DESC_TAG");
		a_c.addText("35");
		a_c.addText("viewingCondDescTag");
		a_c.addText("multiLocalizedUnicodeType");
		a_c.addText("1987405156");
		a_c.addText("VIEWING_CONDITIONS_TAG");
		a_c.addText("36");
		a_c.addText("viewingConditionsTag");
		a_c.addText("viewingConditionsType");
		a_c.addText("1986618743");
		a_c.addText("37");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
	}
	public void c418_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagType"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), dmDependency.Type.Returns, new int[]{1, 19});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), dmDependency.Type.OwnFieldUse, new int[]{19, 20, 33, 39, 45, 50, 56, 62, 68, 74, 81, 101, 131, 136, 141, 148, 153, 159, 165, 173, 180, 185, 192, 199, 205, 214, 226, 232, 245, 253, 261, 269, 277, 284, 290, 297, 303, 311, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19});
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), m_classes.get("org.apache.commons.imaging.icc.IccTagTypes"), dmDependency.Type.ConstructorCall, new int[]{20, 33, 39, 45, 50, 56, 62, 68, 74, 81, 101, 131, 136, 141, 148, 153, 159, 165, 173, 180, 185, 192, 199, 205, 214, 226, 232, 245, 253, 261, 269, 277, 284, 290, 297, 303, 311, 19});
	}

	public void c419_texts(dmClass a_c) {
		a_c.addText("is");
		a_c.addText("cache");
		a_c.addText("cacheBitsRemaining");
		a_c.addText("bytesRead");
		a_c.addText("<init>");
		a_c.addText("is");
		a_c.addText("read");
		a_c.addText("BitInputStream: incomplete bit read");
		a_c.addText("readBits");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("couldn\'t read bits");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("couldn\'t read bits");
		a_c.addText("8");
		a_c.addText("BitInputStream: unknown error");
		a_c.addText("result");
		a_c.addText("count");
		a_c.addText("flushCache");
		a_c.addText("getBytesRead");
	}
	public void c419_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.ConstructorCall, 35);
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{36, 45, 68, 80});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{38, 45});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{43, 70, 82, 97});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{45, 68, 80});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{75, 75, 87, 87, 106});
		d(m_classes.get("org.apache.commons.imaging.common.itu_t4.BitInputStreamFlexible"), m_classes.get("long"), dmDependency.Type.Returns, 103);
	}

	public void c422_texts(dmClass a_c) {
		a_c.addText("indexColorMap");
		a_c.addText("bitsPerPixelMask");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("index");
		a_c.addText("i");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("colorMap");
		a_c.addText("bitsPerPixel");
		a_c.addText("colormapScale");
		a_c.addText("temp");
		a_c.addText("interpretPixel");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
	}
	public void c422_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 67);
	}

	public void c423_texts(dmClass a_c) {
		a_c.addText("rawbits");
		a_c.addText("<init>");
		a_c.addText("rawbits");
		a_c.addText("writeImage");
		a_c.addText("80");
		a_c.addText("52");
		a_c.addText("49");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("127");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("argb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("sample");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("bitcache");
		a_c.addText("bitsInCache");
	}
	public void c423_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.io.OutputStream"), dmDependency.Type.MethodCall, new int[]{38, 39, 40, 45, 46, 48, 49, 72, 77, 80, 86});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{42, 43, 56});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{45, 48, 77});
	}

	public void c424_texts(dmClass a_c) {
		a_c.addText("dataParser");
		a_c.addText("<init>");
		a_c.addText("dataParser");
		a_c.addText("readData");
		a_c.addText("8");
		a_c.addText("b");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("channel");
		a_c.addText("data");
		a_c.addText("bbis");
		a_c.addText("is");
		a_c.addText("bi");
		a_c.addText("imageContents");
		a_c.addText("bfp");
		a_c.addText("header");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("channelCount");
		a_c.addText("depth");
		a_c.addText("mbis");
	}
	public void c424_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.DataReader"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.OwnFieldUse, new int[]{37, 48, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Argument, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.FieldUse, 44);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.FieldUse, new int[]{45, 46, 49});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.MethodCall, new int[]{48, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.ConstructorCall, 52);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.MethodCall, new int[]{57, 65, 65, 65, 65});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.BitsToByteInputStream"), dmDependency.Type.LocalVar, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.LocalVar, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.datareaders.UncompressedDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyBitInputStream"), dmDependency.Type.LocalVar, 66);
	}

	public void c425_texts(dmClass a_c) {
		a_c.addText("getName");
		a_c.addText("getExtension");
	}

	public void c426_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("interpretPixel");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("sc");
		a_c.addText("sm");
		a_c.addText("sy");
		a_c.addText("sk");
		a_c.addText("rgb");
	}
	public void c426_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorConversions"), dmDependency.Type.MethodCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 41);
	}

	public void c427_texts(dmClass a_c) {
		a_c.addText("PARAM_KEY_FILENAME");
		a_c.addText("FILENAME");
		a_c.addText("PARAM_KEY_FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PARAM_KEY_COMPRESSION");
		a_c.addText("COMPRESSION");
		a_c.addText("BUFFERED_IMAGE_FACTORY");
		a_c.addText("BUFFERED_IMAGE_FACTORY");
		a_c.addText("PARAM_KEY_READ_THUMBNAILS");
		a_c.addText("READ_THUMBNAILS");
		a_c.addText("PARAM_KEY_STRICT");
		a_c.addText("STRICT");
		a_c.addText("PARAM_KEY_EXIF");
		a_c.addText("EXIF");
		a_c.addText("PARAM_KEY_XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("PARAM_KEY_PIXEL_DENSITY");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("<init>");
	}

	public void c428_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("bhi");
		a_c.addText("colorTable");
		a_c.addText("imageData");
		a_c.addText("getNextRGB");
		a_c.addText("newline");
		a_c.addText("processImage");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageBuilder");
	}
	public void c428_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParser"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{27, 27, 27});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{27, 27, 27});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.OwnFieldUse, new int[]{35, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.formats.bmp.BmpHeaderInfo"), dmDependency.Type.FieldUse, new int[]{35, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.bmp.PixelParserSimple"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 39);
	}

	public void c429_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_INTEROPERABILITY_INDEX");
		a_c.addText("EXIF_TAG_INTEROPERABILITY_VERSION");
		a_c.addText("EXIF_TAG_PROCESSING_SOFTWARE");
		a_c.addText("EXIF_TAG_SOFTWARE");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_START_IFD0");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_START_SUB_IFD1");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD2");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_LENGTH_IFD0");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_LENGTH_SUB_IFD1");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_LENGTH_SUB_IFD2");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_START_MAKER_NOTES");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_START_IFD2");
		a_c.addText("EXIF_TAG_OTHER_IMAGE_START");
		a_c.addText("EXIF_TAG_PREVIEW_IMAGE_LENGTH_MAKER_NOTES");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_LENGTH_SUB_IFD");
		a_c.addText("EXIF_TAG_JPG_FROM_RAW_LENGTH_IFD2");
		a_c.addText("EXIF_TAG_OTHER_IMAGE_LENGTH");
		a_c.addText("EXIF_TAG_APPLICATION_NOTES");
		a_c.addText("EXIF_TAG_MATTEING");
		a_c.addText("EXIF_TAG_DATA_TYPE");
		a_c.addText("EXIF_TAG_IMAGE_DEPTH");
		a_c.addText("EXIF_TAG_TILE_DEPTH");
		a_c.addText("EXIF_TAG_MODEL_2");
		a_c.addText("EXIF_TAG_EXPOSURE_TIME");
		a_c.addText("EXIF_TAG_FNUMBER");
		a_c.addText("EXIF_TAG_IPTC_NAA");
		a_c.addText("EXIF_TAG_INTERGRAPH_PACKET_DATA");
		a_c.addText("EXIF_TAG_INTERGRAPH_FLAG_REGISTERS");
		a_c.addText("EXIF_TAG_SITE");
		a_c.addText("EXIF_TAG_COLOR_SEQUENCE");
		a_c.addText("EXIF_TAG_IT8HEADER");
		a_c.addText("EXIF_TAG_RASTER_PADDING");
		a_c.addText("EXIF_TAG_BITS_PER_RUN_LENGTH");
		a_c.addText("EXIF_TAG_BITS_PER_EXTENDED_RUN_LENGTH");
		a_c.addText("EXIF_TAG_COLOR_TABLE");
		a_c.addText("EXIF_TAG_IMAGE_COLOR_INDICATOR");
		a_c.addText("EXIF_TAG_BACKGROUND_COLOR_INDICATOR");
		a_c.addText("EXIF_TAG_IMAGE_COLOR_VALUE");
		a_c.addText("EXIF_TAG_BACKGROUND_COLOR_VALUE");
		a_c.addText("EXIF_TAG_PIXEL_INTENSITY_RANGE");
		a_c.addText("EXIF_TAG_TRANSPARENCY_INDICATOR");
		a_c.addText("EXIF_TAG_COLOR_CHARACTERIZATION");
		a_c.addText("EXIF_TAG_HCUSAGE");
		a_c.addText("EXIF_TAG_SEMINFO");
		a_c.addText("EXIF_TAG_AFCP_IPTC");
		a_c.addText("EXIF_TAG_LEAF_DATA");
		a_c.addText("EXIF_TAG_PHOTOSHOP_SETTINGS");
		a_c.addText("EXIF_TAG_EXIF_OFFSET");
		a_c.addText("EXIF_TAG_EXPOSURE_PROGRAM");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_MANUAL");
		a_c.addText("1");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_PROGRAM_AE");
		a_c.addText("2");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_APERTURE_PRIORITY_AE");
		a_c.addText("3");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_SHUTTER_SPEED_PRIORITY_AE");
		a_c.addText("4");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_CREATIVE_SLOW_SPEED");
		a_c.addText("5");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_ACTION_HIGH_SPEED");
		a_c.addText("6");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_PORTRAIT");
		a_c.addText("7");
		a_c.addText("EXPOSURE_PROGRAM_VALUE_LANDSCAPE");
		a_c.addText("8");
		a_c.addText("EXIF_TAG_SPECTRAL_SENSITIVITY");
		a_c.addText("EXIF_TAG_GPSINFO");
		a_c.addText("EXIF_TAG_ISO");
		a_c.addText("EXIF_TAG_OPTO_ELECTRIC_CONV_FACTOR");
		a_c.addText("EXIF_TAG_LEAF_SUB_IFD");
		a_c.addText("EXIF_TAG_EXIF_VERSION");
		a_c.addText("EXIF_TAG_DATE_TIME_ORIGINAL");
		a_c.addText("EXIF_TAG_DATE_TIME_DIGITIZED");
		a_c.addText("EXIF_TAG_COMPONENTS_CONFIGURATION");
		a_c.addText("EXIF_TAG_COMPRESSED_BITS_PER_PIXEL");
		a_c.addText("EXIF_TAG_SHUTTER_SPEED_VALUE");
		a_c.addText("EXIF_TAG_APERTURE_VALUE");
		a_c.addText("EXIF_TAG_BRIGHTNESS_VALUE");
		a_c.addText("EXIF_TAG_EXPOSURE_COMPENSATION");
		a_c.addText("EXIF_TAG_MAX_APERTURE_VALUE");
		a_c.addText("EXIF_TAG_SUBJECT_DISTANCE");
		a_c.addText("EXIF_TAG_METERING_MODE");
		a_c.addText("METERING_MODE_VALUE_AVERAGE");
		a_c.addText("1");
		a_c.addText("METERING_MODE_VALUE_CENTER_WEIGHTED_AVERAGE");
		a_c.addText("2");
		a_c.addText("METERING_MODE_VALUE_SPOT");
		a_c.addText("3");
		a_c.addText("METERING_MODE_VALUE_MULTI_SPOT");
		a_c.addText("4");
		a_c.addText("METERING_MODE_VALUE_MULTI_SEGMENT");
		a_c.addText("5");
		a_c.addText("METERING_MODE_VALUE_PARTIAL");
		a_c.addText("6");
		a_c.addText("METERING_MODE_VALUE_OTHER");
		a_c.addText("255");
		a_c.addText("EXIF_TAG_LIGHT_SOURCE");
		a_c.addText("LIGHT_SOURCE_VALUE_DAYLIGHT");
		a_c.addText("1");
		a_c.addText("LIGHT_SOURCE_VALUE_FLUORESCENT");
		a_c.addText("2");
		a_c.addText("LIGHT_SOURCE_VALUE_TUNGSTEN");
		a_c.addText("3");
		a_c.addText("LIGHT_SOURCE_VALUE_FLASH");
		a_c.addText("4");
		a_c.addText("LIGHT_SOURCE_VALUE_FINE_WEATHER");
		a_c.addText("9");
		a_c.addText("LIGHT_SOURCE_VALUE_CLOUDY");
		a_c.addText("10");
		a_c.addText("LIGHT_SOURCE_VALUE_SHADE");
		a_c.addText("11");
		a_c.addText("LIGHT_SOURCE_VALUE_DAYLIGHT_FLUORESCENT");
		a_c.addText("12");
		a_c.addText("LIGHT_SOURCE_VALUE_DAY_WHITE_FLUORESCENT");
		a_c.addText("13");
		a_c.addText("LIGHT_SOURCE_VALUE_COOL_WHITE_FLUORESCENT");
		a_c.addText("14");
		a_c.addText("LIGHT_SOURCE_VALUE_WHITE_FLUORESCENT");
		a_c.addText("15");
		a_c.addText("LIGHT_SOURCE_VALUE_STANDARD_LIGHT_A");
		a_c.addText("17");
		a_c.addText("LIGHT_SOURCE_VALUE_STANDARD_LIGHT_B");
		a_c.addText("18");
		a_c.addText("LIGHT_SOURCE_VALUE_STANDARD_LIGHT_C");
		a_c.addText("19");
		a_c.addText("LIGHT_SOURCE_VALUE_D55");
		a_c.addText("20");
		a_c.addText("LIGHT_SOURCE_VALUE_D65");
		a_c.addText("21");
		a_c.addText("LIGHT_SOURCE_VALUE_D75");
		a_c.addText("22");
		a_c.addText("LIGHT_SOURCE_VALUE_D50");
		a_c.addText("23");
		a_c.addText("LIGHT_SOURCE_VALUE_ISO_STUDIO_TUNGSTEN");
		a_c.addText("24");
		a_c.addText("LIGHT_SOURCE_VALUE_OTHER");
		a_c.addText("255");
		a_c.addText("EXIF_TAG_FLASH");
		a_c.addText("FLASH_VALUE_NO_FLASH");
		a_c.addText("0");
		a_c.addText("FLASH_VALUE_FIRED");
		a_c.addText("1");
		a_c.addText("FLASH_VALUE_FIRED_RETURN_NOT_DETECTED");
		a_c.addText("5");
		a_c.addText("FLASH_VALUE_FIRED_RETURN_DETECTED");
		a_c.addText("7");
		a_c.addText("FLASH_VALUE_ON_DID_NOT_FIRE");
		a_c.addText("8");
		a_c.addText("FLASH_VALUE_ON");
		a_c.addText("9");
		a_c.addText("FLASH_VALUE_ON_RETURN_NOT_DETECTED");
		a_c.addText("13");
		a_c.addText("FLASH_VALUE_ON_RETURN_DETECTED");
		a_c.addText("15");
		a_c.addText("FLASH_VALUE_OFF");
		a_c.addText("16");
		a_c.addText("FLASH_VALUE_OFF_DID_NOT_FIRE_RETURN_NOT_DETECTED");
		a_c.addText("20");
		a_c.addText("FLASH_VALUE_AUTO_DID_NOT_FIRE");
		a_c.addText("24");
		a_c.addText("FLASH_VALUE_AUTO_FIRED");
		a_c.addText("25");
		a_c.addText("FLASH_VALUE_AUTO_FIRED_RETURN_NOT_DETECTED");
		a_c.addText("29");
		a_c.addText("FLASH_VALUE_AUTO_FIRED_RETURN_DETECTED");
		a_c.addText("31");
		a_c.addText("FLASH_VALUE_NO_FLASH_FUNCTION");
		a_c.addText("32");
		a_c.addText("FLASH_VALUE_OFF_NO_FLASH_FUNCTION");
		a_c.addText("48");
		a_c.addText("FLASH_VALUE_FIRED_RED_EYE_REDUCTION");
		a_c.addText("65");
		a_c.addText("FLASH_VALUE_FIRED_RED_EYE_REDUCTION_RETURN_NOT_DETECTED");
		a_c.addText("69");
		a_c.addText("FLASH_VALUE_FIRED_RED_EYE_REDUCTION_RETURN_DETECTED");
		a_c.addText("71");
		a_c.addText("FLASH_VALUE_ON_RED_EYE_REDUCTION");
		a_c.addText("73");
		a_c.addText("FLASH_VALUE_ON_RED_EYE_REDUCTION_RETURN_NOT_DETECTED");
		a_c.addText("77");
		a_c.addText("FLASH_VALUE_ON_RED_EYE_REDUCTION_RETURN_DETECTED");
		a_c.addText("79");
		a_c.addText("FLASH_VALUE_OFF_RED_EYE_REDUCTION");
		a_c.addText("80");
		a_c.addText("FLASH_VALUE_AUTO_DID_NOT_FIRE_RED_EYE_REDUCTION");
		a_c.addText("88");
		a_c.addText("FLASH_VALUE_AUTO_FIRED_RED_EYE_REDUCTION");
		a_c.addText("89");
		a_c.addText("FLASH_VALUE_AUTO_FIRED_RED_EYE_REDUCTION_RETURN_NOT_DETECTED");
		a_c.addText("93");
		a_c.addText("FLASH_VALUE_AUTO_FIRED_RED_EYE_REDUCTION_RETURN_DETECTED");
		a_c.addText("95");
		a_c.addText("EXIF_TAG_FOCAL_LENGTH");
		a_c.addText("EXIF_TAG_SUBJECT_AREA");
		a_c.addText("EXIF_TAG_STO_NITS");
		a_c.addText("EXIF_TAG_MAKER_NOTE");
		a_c.addText("EXIF_TAG_USER_COMMENT");
		a_c.addText("EXIF_TAG_SUB_SEC_TIME");
		a_c.addText("EXIF_TAG_SUB_SEC_TIME_ORIGINAL");
		a_c.addText("EXIF_TAG_SUB_SEC_TIME_DIGITIZED");
		a_c.addText("EXIF_TAG_FLASHPIX_VERSION");
		a_c.addText("EXIF_TAG_EXIF_IMAGE_WIDTH");
		a_c.addText("EXIF_TAG_EXIF_IMAGE_LENGTH");
		a_c.addText("EXIF_TAG_RELATED_SOUND_FILE");
		a_c.addText("EXIF_TAG_INTEROP_OFFSET");
		a_c.addText("EXIF_TAG_FLASH_ENERGY_EXIF_IFD");
		a_c.addText("EXIF_TAG_SPATIAL_FREQUENCY_RESPONSE_2");
		a_c.addText("EXIF_TAG_NOISE_2");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_XRESOLUTION_EXIF_IFD");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_YRESOLUTION_EXIF_IFD");
		a_c.addText("EXIF_TAG_FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD_VALUE_NONE");
		a_c.addText("1");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD_VALUE_INCHES");
		a_c.addText("2");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD_VALUE_CM");
		a_c.addText("3");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD_VALUE_MM");
		a_c.addText("4");
		a_c.addText("FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD_VALUE_UM");
		a_c.addText("5");
		a_c.addText("EXIF_TAG_IMAGE_NUMBER");
		a_c.addText("EXIF_TAG_SECURITY_CLASSIFICATION");
		a_c.addText("EXIF_TAG_IMAGE_HISTORY");
		a_c.addText("EXIF_TAG_SUBJECT_LOCATION");
		a_c.addText("EXIF_TAG_EXPOSURE_INDEX_EXIF_IFD");
		a_c.addText("EXIF_TAG_TIFF_EPSTANDARD_ID_2");
		a_c.addText("EXIF_TAG_SENSING_METHOD_EXIF_IFD");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_NOT_DEFINED");
		a_c.addText("1");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_ONE_CHIP_COLOR_AREA");
		a_c.addText("2");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_TWO_CHIP_COLOR_AREA");
		a_c.addText("3");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_THREE_CHIP_COLOR_AREA");
		a_c.addText("4");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_COLOR_SEQUENTIAL_AREA");
		a_c.addText("5");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_TRILINEAR");
		a_c.addText("7");
		a_c.addText("SENSING_METHOD_EXIF_IFD_VALUE_COLOR_SEQUENTIAL_LINEAR");
		a_c.addText("8");
		a_c.addText("EXIF_TAG_FILE_SOURCE");
		a_c.addText("FILE_SOURCE_VALUE_FILM_SCANNER");
		a_c.addText("1");
		a_c.addText("FILE_SOURCE_VALUE_REFLECTION_PRINT_SCANNER");
		a_c.addText("2");
		a_c.addText("FILE_SOURCE_VALUE_DIGITAL_CAMERA");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_SCENE_TYPE");
		a_c.addText("EXIF_TAG_CFAPATTERN");
		a_c.addText("EXIF_TAG_CUSTOM_RENDERED");
		a_c.addText("CUSTOM_RENDERED_VALUE_NORMAL");
		a_c.addText("0");
		a_c.addText("CUSTOM_RENDERED_VALUE_CUSTOM");
		a_c.addText("1");
		a_c.addText("EXIF_TAG_EXPOSURE_MODE");
		a_c.addText("EXPOSURE_MODE_VALUE_AUTO");
		a_c.addText("0");
		a_c.addText("EXPOSURE_MODE_VALUE_MANUAL");
		a_c.addText("1");
		a_c.addText("EXPOSURE_MODE_VALUE_AUTO_BRACKET");
		a_c.addText("2");
		a_c.addText("EXIF_TAG_WHITE_BALANCE_1");
		a_c.addText("WHITE_BALANCE_1_VALUE_AUTO");
		a_c.addText("0");
		a_c.addText("WHITE_BALANCE_1_VALUE_MANUAL");
		a_c.addText("1");
		a_c.addText("EXIF_TAG_DIGITAL_ZOOM_RATIO");
		a_c.addText("EXIF_TAG_FOCAL_LENGTH_IN_35MM_FORMAT");
		a_c.addText("EXIF_TAG_SCENE_CAPTURE_TYPE");
		a_c.addText("SCENE_CAPTURE_TYPE_VALUE_STANDARD");
		a_c.addText("0");
		a_c.addText("SCENE_CAPTURE_TYPE_VALUE_LANDSCAPE");
		a_c.addText("1");
		a_c.addText("SCENE_CAPTURE_TYPE_VALUE_PORTRAIT");
		a_c.addText("2");
		a_c.addText("SCENE_CAPTURE_TYPE_VALUE_NIGHT");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_GAIN_CONTROL");
		a_c.addText("GAIN_CONTROL_VALUE_NONE");
		a_c.addText("0");
		a_c.addText("GAIN_CONTROL_VALUE_LOW_GAIN_UP");
		a_c.addText("1");
		a_c.addText("GAIN_CONTROL_VALUE_HIGH_GAIN_UP");
		a_c.addText("2");
		a_c.addText("GAIN_CONTROL_VALUE_LOW_GAIN_DOWN");
		a_c.addText("3");
		a_c.addText("GAIN_CONTROL_VALUE_HIGH_GAIN_DOWN");
		a_c.addText("4");
		a_c.addText("EXIF_TAG_CONTRAST_1");
		a_c.addText("CONTRAST_1_VALUE_NORMAL");
		a_c.addText("0");
		a_c.addText("CONTRAST_1_VALUE_LOW");
		a_c.addText("1");
		a_c.addText("CONTRAST_1_VALUE_HIGH");
		a_c.addText("2");
		a_c.addText("EXIF_TAG_SATURATION_1");
		a_c.addText("SATURATION_1_VALUE_NORMAL");
		a_c.addText("0");
		a_c.addText("SATURATION_1_VALUE_LOW");
		a_c.addText("1");
		a_c.addText("SATURATION_1_VALUE_HIGH");
		a_c.addText("2");
		a_c.addText("EXIF_TAG_SHARPNESS_1");
		a_c.addText("SHARPNESS_1_VALUE_NORMAL");
		a_c.addText("0");
		a_c.addText("SHARPNESS_1_VALUE_SOFT");
		a_c.addText("1");
		a_c.addText("SHARPNESS_1_VALUE_HARD");
		a_c.addText("2");
		a_c.addText("EXIF_TAG_DEVICE_SETTING_DESCRIPTION");
		a_c.addText("EXIF_TAG_SUBJECT_DISTANCE_RANGE");
		a_c.addText("SUBJECT_DISTANCE_RANGE_VALUE_MACRO");
		a_c.addText("1");
		a_c.addText("SUBJECT_DISTANCE_RANGE_VALUE_CLOSE");
		a_c.addText("2");
		a_c.addText("SUBJECT_DISTANCE_RANGE_VALUE_DISTANT");
		a_c.addText("3");
		a_c.addText("EXIF_TAG_IMAGE_UNIQUE_ID");
		a_c.addText("EXIF_TAG_CAMERA_OWNER_NAME");
		a_c.addText("EXIF_TAG_BODY_SERIAL_NUMBER");
		a_c.addText("EXIF_TAG_LENS_SPECIFICATION");
		a_c.addText("EXIF_TAG_LENS_MAKE");
		a_c.addText("EXIF_TAG_LENS_MODEL");
		a_c.addText("EXIF_TAG_LENS_SERIAL_NUMBER");
		a_c.addText("EXIF_TAG_GAMMA");
		a_c.addText("EXIF_TAG_ANNOTATIONS");
		a_c.addText("EXIF_TAG_PRINT_IM");
		a_c.addText("EXIF_TAG_OFFSET_SCHEMA");
		a_c.addText("EXIF_TAG_OWNER_NAME");
		a_c.addText("EXIF_TAG_SERIAL_NUMBER");
		a_c.addText("EXIF_TAG_LENS");
		a_c.addText("EXIF_TAG_RAW_FILE");
		a_c.addText("EXIF_TAG_CONVERTER");
		a_c.addText("EXIF_TAG_WHITE_BALANCE_2");
		a_c.addText("EXIF_TAG_EXPOSURE");
		a_c.addText("EXIF_TAG_SHADOWS");
		a_c.addText("EXIF_TAG_BRIGHTNESS");
		a_c.addText("EXIF_TAG_CONTRAST_2");
		a_c.addText("EXIF_TAG_SATURATION_2");
		a_c.addText("EXIF_TAG_SHARPNESS_2");
		a_c.addText("EXIF_TAG_SMOOTHNESS");
		a_c.addText("EXIF_TAG_MOIRE_FILTER");
		a_c.addText("ALL_EXIF_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("InteroperabilityIndex");
		a_c.addText("InteroperabilityVersion");
		a_c.addText("ProcessingSoftware");
		a_c.addText("11");
		a_c.addText("Software");
		a_c.addText("305");
		a_c.addText("PreviewImageStart");
		a_c.addText("273");
		a_c.addText("PreviewImageStart");
		a_c.addText("273");
		a_c.addText("JpgFromRawStart");
		a_c.addText("273");
		a_c.addText("PreviewImageLength");
		a_c.addText("279");
		a_c.addText("PreviewImageLength");
		a_c.addText("279");
		a_c.addText("JpgFromRawLength");
		a_c.addText("279");
		a_c.addText("PreviewImageStart");
		a_c.addText("513");
		a_c.addText("JpgFromRawStart");
		a_c.addText("513");
		a_c.addText("JpgFromRawStart");
		a_c.addText("513");
		a_c.addText("OtherImageStart");
		a_c.addText("513");
		a_c.addText("PreviewImageLength");
		a_c.addText("514");
		a_c.addText("JpgFromRawLength");
		a_c.addText("514");
		a_c.addText("JpgFromRawLength");
		a_c.addText("514");
		a_c.addText("OtherImageLength");
		a_c.addText("514");
		a_c.addText("ApplicationNotes");
		a_c.addText("700");
		a_c.addText("Matteing");
		a_c.addText("32995");
		a_c.addText("DataType");
		a_c.addText("32996");
		a_c.addText("ImageDepth");
		a_c.addText("32997");
		a_c.addText("TileDepth");
		a_c.addText("32998");
		a_c.addText("Model2");
		a_c.addText("33405");
		a_c.addText("ExposureTime");
		a_c.addText("33434");
		a_c.addText("FNumber");
		a_c.addText("33437");
		a_c.addText("IPTC-NAA");
		a_c.addText("33723");
		a_c.addText("IntergraphPacketData");
		a_c.addText("33918");
		a_c.addText("IntergraphFlagRegisters");
		a_c.addText("33919");
		a_c.addText("16");
		a_c.addText("Site");
		a_c.addText("34016");
		a_c.addText("ColorSequence");
		a_c.addText("34017");
		a_c.addText("IT8Header");
		a_c.addText("34018");
		a_c.addText("RasterPadding");
		a_c.addText("34019");
		a_c.addText("BitsPerRunLength");
		a_c.addText("34020");
		a_c.addText("BitsPerExtendedRunLength");
		a_c.addText("34021");
		a_c.addText("ColorTable");
		a_c.addText("34022");
		a_c.addText("ImageColorIndicator");
		a_c.addText("34023");
		a_c.addText("BackgroundColorIndicator");
		a_c.addText("34024");
		a_c.addText("ImageColorValue");
		a_c.addText("34025");
		a_c.addText("BackgroundColorValue");
		a_c.addText("34026");
		a_c.addText("PixelIntensityRange");
		a_c.addText("34027");
		a_c.addText("TransparencyIndicator");
		a_c.addText("34028");
		a_c.addText("ColorCharacterization");
		a_c.addText("34029");
		a_c.addText("HCUsage");
		a_c.addText("34030");
		a_c.addText("SEMInfo");
		a_c.addText("34118");
		a_c.addText("AFCP_IPTC");
		a_c.addText("34152");
		a_c.addText("LeafData");
		a_c.addText("34310");
		a_c.addText("PhotoshopSettings");
		a_c.addText("34377");
		a_c.addText("ExifOffset");
		a_c.addText("34665");
		a_c.addText("ExposureProgram");
		a_c.addText("34850");
		a_c.addText("SpectralSensitivity");
		a_c.addText("34852");
		a_c.addText("GPSInfo");
		a_c.addText("34853");
		a_c.addText("PhotographicSensitivity");
		a_c.addText("34855");
		a_c.addText("Opto - Electric Conv Factor");
		a_c.addText("34856");
		a_c.addText("LeafSubIFD");
		a_c.addText("34954");
		a_c.addText("ExifVersion");
		a_c.addText("36864");
		a_c.addText("DateTimeOriginal");
		a_c.addText("36867");
		a_c.addText("20");
		a_c.addText("DateTimeDigitized");
		a_c.addText("36868");
		a_c.addText("20");
		a_c.addText("ComponentsConfiguration");
		a_c.addText("37121");
		a_c.addText("CompressedBitsPerPixel");
		a_c.addText("37122");
		a_c.addText("ShutterSpeedValue");
		a_c.addText("37377");
		a_c.addText("ApertureValue");
		a_c.addText("37378");
		a_c.addText("BrightnessValue");
		a_c.addText("37379");
		a_c.addText("ExposureCompensation");
		a_c.addText("37380");
		a_c.addText("MaxApertureValue");
		a_c.addText("37381");
		a_c.addText("Subject Distance");
		a_c.addText("37382");
		a_c.addText("MeteringMode");
		a_c.addText("37383");
		a_c.addText("LightSource");
		a_c.addText("37384");
		a_c.addText("Flash");
		a_c.addText("37385");
		a_c.addText("FocalLength");
		a_c.addText("37386");
		a_c.addText("SubjectArea");
		a_c.addText("37396");
		a_c.addText("StoNits");
		a_c.addText("37439");
		a_c.addText("MakerNote");
		a_c.addText("37500");
		a_c.addText("UserComment");
		a_c.addText("37510");
		a_c.addText("SubSecTime");
		a_c.addText("37520");
		a_c.addText("SubSecTimeOriginal");
		a_c.addText("37521");
		a_c.addText("SubSecTimeDigitized");
		a_c.addText("37522");
		a_c.addText("FlashpixVersion");
		a_c.addText("40960");
		a_c.addText("ExifImageWidth");
		a_c.addText("40962");
		a_c.addText("ExifImageLength");
		a_c.addText("40963");
		a_c.addText("RelatedSoundFile");
		a_c.addText("40964");
		a_c.addText("13");
		a_c.addText("InteropOffset");
		a_c.addText("40965");
		a_c.addText("FlashEnergy");
		a_c.addText("41483");
		a_c.addText("SpatialFrequencyResponse");
		a_c.addText("41484");
		a_c.addText("Noise");
		a_c.addText("41485");
		a_c.addText("FocalPlaneXResolution");
		a_c.addText("41486");
		a_c.addText("FocalPlaneYResolution");
		a_c.addText("41487");
		a_c.addText("FocalPlaneResolutionUnit");
		a_c.addText("41488");
		a_c.addText("ImageNumber");
		a_c.addText("41489");
		a_c.addText("SecurityClassification");
		a_c.addText("41490");
		a_c.addText("ImageHistory");
		a_c.addText("41491");
		a_c.addText("SubjectLocation");
		a_c.addText("41492");
		a_c.addText("ExposureIndex");
		a_c.addText("41493");
		a_c.addText("TIFF-EPStandardID");
		a_c.addText("41494");
		a_c.addText("SensingMethod");
		a_c.addText("41495");
		a_c.addText("FileSource");
		a_c.addText("41728");
		a_c.addText("SceneType");
		a_c.addText("41729");
		a_c.addText("CFAPattern");
		a_c.addText("41730");
		a_c.addText("CustomRendered");
		a_c.addText("41985");
		a_c.addText("ExposureMode");
		a_c.addText("41986");
		a_c.addText("WhiteBalance");
		a_c.addText("41987");
		a_c.addText("DigitalZoomRatio");
		a_c.addText("41988");
		a_c.addText("FocalLengthIn35mmFormat");
		a_c.addText("41989");
		a_c.addText("SceneCaptureType");
		a_c.addText("41990");
		a_c.addText("GainControl");
		a_c.addText("41991");
		a_c.addText("Contrast");
		a_c.addText("41992");
		a_c.addText("Saturation");
		a_c.addText("41993");
		a_c.addText("Sharpness");
		a_c.addText("41994");
		a_c.addText("DeviceSettingDescription");
		a_c.addText("41995");
		a_c.addText("SubjectDistanceRange");
		a_c.addText("41996");
		a_c.addText("ImageUniqueID");
		a_c.addText("42016");
		a_c.addText("33");
		a_c.addText("CameraOwnerName");
		a_c.addText("42032");
		a_c.addText("BodySerialNumber");
		a_c.addText("42033");
		a_c.addText("LensSpecification");
		a_c.addText("42034");
		a_c.addText("LensMake");
		a_c.addText("42035");
		a_c.addText("LensModel");
		a_c.addText("42036");
		a_c.addText("LensSerialNumber");
		a_c.addText("42037");
		a_c.addText("Gamma");
		a_c.addText("42240");
		a_c.addText("Annotations");
		a_c.addText("50255");
		a_c.addText("PrintIM");
		a_c.addText("50341");
		a_c.addText("OffsetSchema");
		a_c.addText("59933");
		a_c.addText("OwnerName");
		a_c.addText("65000");
		a_c.addText("SerialNumber");
		a_c.addText("65001");
		a_c.addText("Lens");
		a_c.addText("65002");
		a_c.addText("RawFile");
		a_c.addText("65100");
		a_c.addText("Converter");
		a_c.addText("65101");
		a_c.addText("WhiteBalance");
		a_c.addText("65102");
		a_c.addText("Exposure");
		a_c.addText("65105");
		a_c.addText("Shadows");
		a_c.addText("65106");
		a_c.addText("Brightness");
		a_c.addText("65107");
		a_c.addText("Contrast");
		a_c.addText("65108");
		a_c.addText("Saturation");
		a_c.addText("65109");
		a_c.addText("Sharpness");
		a_c.addText("65110");
		a_c.addText("Smoothness");
		a_c.addText("65111");
		a_c.addText("MoireFilter");
		a_c.addText("65112");
		a_c.addText("136");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("60");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("64");
		a_c.addText("65");
		a_c.addText("66");
		a_c.addText("67");
		a_c.addText("68");
		a_c.addText("69");
		a_c.addText("70");
		a_c.addText("71");
		a_c.addText("72");
		a_c.addText("73");
		a_c.addText("74");
		a_c.addText("75");
		a_c.addText("76");
		a_c.addText("77");
		a_c.addText("78");
		a_c.addText("79");
		a_c.addText("80");
		a_c.addText("81");
		a_c.addText("82");
		a_c.addText("83");
		a_c.addText("84");
		a_c.addText("85");
		a_c.addText("86");
		a_c.addText("87");
		a_c.addText("88");
		a_c.addText("89");
		a_c.addText("90");
		a_c.addText("91");
		a_c.addText("92");
		a_c.addText("93");
		a_c.addText("94");
		a_c.addText("95");
		a_c.addText("96");
		a_c.addText("97");
		a_c.addText("98");
		a_c.addText("99");
		a_c.addText("100");
		a_c.addText("101");
		a_c.addText("102");
		a_c.addText("103");
		a_c.addText("104");
		a_c.addText("105");
		a_c.addText("106");
		a_c.addText("107");
		a_c.addText("108");
		a_c.addText("109");
		a_c.addText("110");
		a_c.addText("111");
		a_c.addText("112");
		a_c.addText("113");
		a_c.addText("114");
		a_c.addText("115");
		a_c.addText("116");
		a_c.addText("117");
		a_c.addText("118");
		a_c.addText("119");
		a_c.addText("120");
		a_c.addText("121");
		a_c.addText("122");
		a_c.addText("123");
		a_c.addText("124");
		a_c.addText("125");
		a_c.addText("126");
		a_c.addText("127");
		a_c.addText("128");
		a_c.addText("129");
		a_c.addText("130");
		a_c.addText("131");
		a_c.addText("132");
		a_c.addText("133");
		a_c.addText("134");
		a_c.addText("135");
	}
	public void c429_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.Field, new int[]{1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 119, 122, 125, 128, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 195, 198, 201, 212, 215, 218, 221, 224, 227, 230, 233, 235, 238, 241, 244, 247, 250, 253, 256, 259, 269, 292, 322, 325, 328, 331, 334, 337, 340, 343, 346, 349, 352, 355, 358, 361, 364, 367, 370, 373, 376, 384, 387, 390, 393, 396, 399, 402, 412, 418, 421, 424, 429, 435, 440, 443, 446, 453, 461, 467, 473, 479, 482, 488, 491, 494, 497, 500, 503, 506, 509, 512, 515, 518, 521, 524, 527, 530, 533, 536, 539, 542, 545, 548, 551, 554, 557, 560});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{53, 59, 62, 141, 144, 147, 180, 186, 212, 230, 233, 337, 340, 343, 355, 488, 491, 494, 500, 503, 506, 521, 524, 527, 530, 533, 536, 539, 542, 545, 548, 551, 554, 557, 560});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{53, 59, 62, 141, 144, 147, 180, 186, 212, 230, 233, 337, 340, 343, 355, 488, 491, 494, 500, 503, 506, 521, 524, 527, 530, 533, 536, 539, 542, 545, 548, 551, 554, 557, 560, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), dmDependency.Type.ConstructorCall, new int[]{56, 412, 418, 515});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined"), dmDependency.Type.OwnFieldUse, new int[]{56, 412, 418, 515, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 132, 189, 192, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 132, 189, 192, 224, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, new int[]{107, 159, 168, 171, 174, 195});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{107, 159, 168, 171, 174, 195, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.ConstructorCall, new int[]{110, 113, 116, 119, 122, 367, 384, 387, 390, 399, 512});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.OwnFieldUse, new int[]{110, 113, 116, 119, 122, 367, 384, 387, 390, 399, 512, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, new int[]{125, 128, 256, 322, 361, 497});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{125, 128, 256, 322, 361, 497, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, new int[]{135, 218, 325, 393});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{135, 218, 325, 393, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.ConstructorCall, 138);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.OwnFieldUse, new int[]{138, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{150, 153, 156, 201, 259, 269, 292, 349, 352, 376, 402, 424, 429, 435, 443, 446, 453, 461, 467, 473, 482});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{150, 153, 156, 201, 259, 269, 292, 349, 352, 376, 402, 424, 429, 435, 443, 446, 453, 461, 467, 473, 482, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, new int[]{162, 165, 177});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.OwnFieldUse, new int[]{162, 165, 177, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.ConstructorCall, 183);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.OwnFieldUse, new int[]{183, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.ConstructorCall, new int[]{198, 215, 358});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.OwnFieldUse, new int[]{198, 215, 358, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.ConstructorCall, new int[]{221, 227, 235, 331, 346, 364, 421, 479});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds"), dmDependency.Type.OwnFieldUse, new int[]{221, 227, 235, 331, 346, 364, 421, 479, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, new int[]{238, 244, 253, 370, 373, 396, 440, 509});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{238, 244, 253, 370, 373, 396, 440, 509, 564, 564, 564, 564, 564, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.ConstructorCall, new int[]{241, 247, 250});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.OwnFieldUse, new int[]{241, 247, 250, 564, 564, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.ConstructorCall, 328);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.OwnFieldUse, new int[]{328, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.ConstructorCall, 334);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.OwnFieldUse, new int[]{334, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.ConstructorCall, 518);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.OwnFieldUse, new int[]{518, 564});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 564);
	}

	public void c430_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("sc");
		a_c.addText("sm");
		a_c.addText("sy");
		a_c.addText("sk");
		a_c.addText("getBasicChannelsCount");
	}
	public void c430_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 22);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 22);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk"), m_classes.get("org.apache.commons.imaging.color.ColorConversions"), dmDependency.Type.MethodCall, 37);
	}

	public void c431_texts(dmClass a_c) {
		a_c.addText("MAGIC_NUMBERS_GIF");
		a_c.addText("MAGIC_NUMBERS_PNG");
		a_c.addText("MAGIC_NUMBERS_JPEG");
		a_c.addText("MAGIC_NUMBERS_BMP");
		a_c.addText("MAGIC_NUMBERS_TIFF_MOTOROLA");
		a_c.addText("MAGIC_NUMBERS_TIFF_INTEL");
		a_c.addText("MAGIC_NUMBERS_PAM");
		a_c.addText("MAGIC_NUMBERS_PSD");
		a_c.addText("MAGIC_NUMBERS_PBM_A");
		a_c.addText("MAGIC_NUMBERS_PBM_B");
		a_c.addText("MAGIC_NUMBERS_PGM_A");
		a_c.addText("MAGIC_NUMBERS_PGM_B");
		a_c.addText("MAGIC_NUMBERS_PPM_A");
		a_c.addText("MAGIC_NUMBERS_PPM_B");
		a_c.addText("MAGIC_NUMBERS_JBIG2_1");
		a_c.addText("MAGIC_NUMBERS_JBIG2_2");
		a_c.addText("MAGIC_NUMBERS_ICNS");
		a_c.addText("MAGIC_NUMBERS_DCX");
		a_c.addText("MAGIC_NUMBERS_RGBE");
		a_c.addText("<init>");
		a_c.addText("hasImageFileExtension");
		a_c.addText("file");
		a_c.addText("hasImageFileExtension");
		a_c.addText("extension");
		a_c.addText("imageParser");
		a_c.addText("fileName");
		a_c.addText("normalizedFilename");
		a_c.addText("guessFormat");
		a_c.addText("bytes");
		a_c.addText("guessFormat");
		a_c.addText("file");
		a_c.addText("compareBytePair");
		a_c.addText("Invalid Byte Pair.");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("guessFormat");
		a_c.addText("Couldn\'t read magic numbers to guess format.");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("Couldn\'t read magic numbers to guess format.");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("i3");
		a_c.addText("i4");
		a_c.addText("b3");
		a_c.addText("b4");
		a_c.addText("bytePair2");
		a_c.addText("i1");
		a_c.addText("i2");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("bytePair");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("getICCProfile");
		a_c.addText("bytes");
		a_c.addText("getICCProfile");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getICCProfile");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getICCProfile");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("params");
		a_c.addText("getICCProfile");
		a_c.addText("file");
		a_c.addText("getICCProfile");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getICCProfile");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("bytes");
		a_c.addText("parser");
		a_c.addText("info");
		a_c.addText("getICCProfileBytes");
		a_c.addText("bytes");
		a_c.addText("getICCProfileBytes");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("file");
		a_c.addText("getICCProfileBytes");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageParser");
		a_c.addText("getImageInfo");
		a_c.addText("fileName");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("fileName");
		a_c.addText("bytes");
		a_c.addText("getImageInfo");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getImageInfo");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("bytes");
		a_c.addText("getImageInfo");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("file");
		a_c.addText("getImageInfo");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageParser");
		a_c.addText("Can\'t parse this format.");
		a_c.addText("imageParser");
		a_c.addText("imageParsers");
		a_c.addText("imageParser");
		a_c.addText("imageParsers");
		a_c.addText("byteSource");
		a_c.addText("format");
		a_c.addText("fileName");
		a_c.addText("getImageSize");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getImageSize");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("bytes");
		a_c.addText("getImageSize");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("file");
		a_c.addText("getImageSize");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageParser");
		a_c.addText("getXmpXml");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getXmpXml");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("params");
		a_c.addText("getXmpXml");
		a_c.addText("bytes");
		a_c.addText("getXmpXml");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getXmpXml");
		a_c.addText("file");
		a_c.addText("getXmpXml");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getXmpXml");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageParser");
		a_c.addText("getMetadata");
		a_c.addText("bytes");
		a_c.addText("getMetadata");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getMetadata");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getMetadata");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("params");
		a_c.addText("getMetadata");
		a_c.addText("file");
		a_c.addText("getMetadata");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageParser");
		a_c.addText("dumpImageFile");
		a_c.addText("bytes");
		a_c.addText("dumpImageFile");
		a_c.addText("file");
		a_c.addText("dumpImageFile");
		a_c.addText("byteSource");
		a_c.addText("imageParser");
		a_c.addText("getFormatCompliance");
		a_c.addText("bytes");
		a_c.addText("getFormatCompliance");
		a_c.addText("file");
		a_c.addText("getFormatCompliance");
		a_c.addText("byteSource");
		a_c.addText("imageParser");
		a_c.addText("getAllBufferedImages");
		a_c.addText("is");
		a_c.addText("fileName");
		a_c.addText("getAllBufferedImages");
		a_c.addText("bytes");
		a_c.addText("getAllBufferedImages");
		a_c.addText("file");
		a_c.addText("getAllBufferedImages");
		a_c.addText("byteSource");
		a_c.addText("imageParser");
		a_c.addText("getBufferedImage");
		a_c.addText("is");
		a_c.addText("getBufferedImage");
		a_c.addText("FILENAME");
		a_c.addText("FILENAME");
		a_c.addText("is");
		a_c.addText("params");
		a_c.addText("fileName");
		a_c.addText("getBufferedImage");
		a_c.addText("bytes");
		a_c.addText("getBufferedImage");
		a_c.addText("bytes");
		a_c.addText("params");
		a_c.addText("getBufferedImage");
		a_c.addText("file");
		a_c.addText("getBufferedImage");
		a_c.addText("file");
		a_c.addText("params");
		a_c.addText("getBufferedImage");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("imageParser");
		a_c.addText("writeImage");
		a_c.addText("os");
		a_c.addText("fos");
		a_c.addText("src");
		a_c.addText("file");
		a_c.addText("format");
		a_c.addText("params");
		a_c.addText("writeImageToBytes");
		a_c.addText("src");
		a_c.addText("format");
		a_c.addText("params");
		a_c.addText("os");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("Unknown Format: ");
		a_c.addText("imageParser2");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("format");
		a_c.addText("params");
		a_c.addText("imageParsers");
		a_c.addText("imageParser");
		a_c.addText("<clinit>");
		a_c.addText("10");
		a_c.addText("71");
		a_c.addText("73");
		a_c.addText("10");
		a_c.addText("137");
		a_c.addText("80");
		a_c.addText("10");
		a_c.addText("255");
		a_c.addText("216");
		a_c.addText("10");
		a_c.addText("66");
		a_c.addText("77");
		a_c.addText("10");
		a_c.addText("77");
		a_c.addText("77");
		a_c.addText("10");
		a_c.addText("73");
		a_c.addText("73");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("55");
		a_c.addText("10");
		a_c.addText("56");
		a_c.addText("66");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("49");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("52");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("50");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("53");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("51");
		a_c.addText("10");
		a_c.addText("80");
		a_c.addText("54");
		a_c.addText("10");
		a_c.addText("151");
		a_c.addText("74");
		a_c.addText("10");
		a_c.addText("66");
		a_c.addText("50");
		a_c.addText("10");
		a_c.addText("105");
		a_c.addText("99");
		a_c.addText("10");
		a_c.addText("177");
		a_c.addText("104");
		a_c.addText("10");
		a_c.addText("35");
		a_c.addText("63");
	}
	public void c431_deps() {
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.File"), dmDependency.Type.Argument, new int[]{138, 204, 401, 417, 496, 516, 679, 701, 822, 837, 929, 944, 1090, 1115, 1165, 1203, 1258, 1381, 1404, 1442});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.File"), dmDependency.Type.MethodCall, new int[]{151, 154});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, new int[]{173, 174, 545, 726, 734, 737, 745, 748, 861, 1149, 1188, 1225, 1282, 1442, 1538, 1549, 1555});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.LocalVar, new int[]{181, 754, 754, 754, 754, 1188, 1225, 1282, 1559});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{181, 204, 234, 329, 345, 363, 381, 401, 417, 435, 454, 474, 496, 516, 538, 545, 569, 591, 613, 637, 657, 679, 701, 721, 726, 754, 771, 790, 805, 822, 837, 854, 861, 878, 897, 912, 929, 944, 961, 982, 1007, 1034, 1061, 1090, 1115, 1142, 1149, 1165, 1181, 1188, 1203, 1218, 1225, 1242, 1258, 1274, 1282, 1304, 1335, 1355, 1381, 1404, 1430});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{181, 204, 234, 329, 345, 363, 381, 401, 417, 435, 454, 474, 496, 516, 538, 545, 569, 591, 613, 637, 657, 679, 701, 721, 726, 754, 771, 790, 805, 822, 837, 854, 861, 878, 897, 912, 929, 944, 961, 982, 1007, 1034, 1061, 1090, 1115, 1142, 1149, 1165, 1181, 1188, 1203, 1218, 1225, 1242, 1258, 1274, 1282, 1304, 1335, 1355, 1381, 1404, 1430, 1442, 1475, 1508});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, new int[]{181, 204, 234});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{181, 329, 454, 569, 637, 790, 897, 982, 1149, 1188, 1335});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceArray"), dmDependency.Type.ConstructorCall, new int[]{204, 363, 496, 569, 591, 657, 679, 822, 929, 1034, 1165, 1203, 1258, 1355, 1381});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceFile"), dmDependency.Type.ConstructorCall, new int[]{227, 435, 538, 701, 854, 961, 1142, 1181, 1218, 1274, 1404, 1430});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{234, 435, 538, 721, 726, 854, 961, 1142, 1181, 1218, 1274, 1430});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{261, 277, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 319, 322, 324, 326, 328, 732});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{264, 743});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{265, 266, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 308, 309, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{268, 311, 754});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 329);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.Returns, new int[]{329, 345, 363, 381, 401, 417, 435});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{363, 381, 591, 613, 754, 771, 861, 878, 1034, 1061, 1225, 1282, 1304});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSourceInputStream"), dmDependency.Type.ConstructorCall, new int[]{401, 613, 637, 790, 897, 1090, 1242, 1335});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.ConstructorCall, 445);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.icc.IccProfileParser"), dmDependency.Type.MethodCall, 446);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.MethodCall, 450);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.awt.color.ICC_Profile"), dmDependency.Type.MethodCall, 454);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), dmDependency.Type.LocalVar, 454);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{454, 474, 496, 516, 538, 1475});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, new int[]{545, 569, 591, 613, 637, 657, 679, 701, 721});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Returns, 726);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 754);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, new int[]{754, 771, 790, 805, 822, 837, 854});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.XmpEmbeddable"), dmDependency.Type.MethodCall, 980);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, new int[]{982, 1007, 1034, 1061, 1090, 1115, 1142});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, new int[]{1188, 1203, 1218});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{1225, 1242, 1258, 1274, 1282, 1304, 1335, 1355, 1381, 1404, 1430});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("byte"), dmDependency.Type.LocalVar, 1258);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{1442, 1475, 1508});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{1442, 1475, 1508});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Argument, new int[]{1442, 1475, 1508});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.FileOutputStream"), dmDependency.Type.ConstructorCall, 1471);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.BufferedOutputStream"), dmDependency.Type.ConstructorCall, 1472);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.BufferedOutputStream"), dmDependency.Type.MethodCall, new int[]{1474, 1474, 1474, 1474});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.FileOutputStream"), dmDependency.Type.MethodCall, new int[]{1474, 1474, 1474, 1474});
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.BufferedOutputStream"), dmDependency.Type.LocalVar, 1475);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 1504);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, 1508);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 1508);
		d(m_classes.get("org.apache.commons.imaging.Imaging"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 1557);
	}

	public void c432_texts(dmClass a_c) {
		a_c.addText("HEADER");
		a_c.addText("RESOLUTION_STRING");
		a_c.addText("in");
		a_c.addText("metadata");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("TWO_TWO");
		a_c.addText("<init>");
		a_c.addText("byteSource");
		a_c.addText("getMetadata");
		a_c.addText("getWidth");
		a_c.addText("getHeight");
		a_c.addText("close");
		a_c.addText("readDimensions");
		a_c.addText("Invalid HDR resolution string. Only \"-Y N +X M\" is supported. Found \"");
		a_c.addText("\"");
		a_c.addText("reader");
		a_c.addText("resolution");
		a_c.addText("matcher");
		a_c.addText("readMetadata");
		a_c.addText("Not a valid HDR: Incorrect Header");
		a_c.addText("Not a valid HDR: Incorrect Header");
		a_c.addText("61");
		a_c.addText("FORMAT");
		a_c.addText("32-bit_rle_rgbe");
		a_c.addText("Only 32-bit_rle_rgbe images are supported, trying to read ");
		a_c.addText("<command>");
		a_c.addText("variable");
		a_c.addText("value");
		a_c.addText("equals");
		a_c.addText("reader");
		a_c.addText("info");
		a_c.addText("getPixelData");
		a_c.addText("32768");
		a_c.addText("Scan lines must be less than 32768 bytes long");
		a_c.addText("8");
		a_c.addText("Scan line ");
		a_c.addText(" expected to start with 0x2 0x2");
		a_c.addText("Scan line ");
		a_c.addText(" length expected");
		a_c.addText("255");
		a_c.addText("2.0");
		a_c.addText("136");
		a_c.addText("255");
		a_c.addText("0.5");
		a_c.addText("mult");
		a_c.addText("mantissa");
		a_c.addText("pos");
		a_c.addText("p");
		a_c.addText("channelOffset");
		a_c.addText("eOffset");
		a_c.addText("channel");
		a_c.addText("i");
		a_c.addText("ht");
		a_c.addText("wd");
		a_c.addText("scanLineBytes");
		a_c.addText("rgbe");
		a_c.addText("out");
		a_c.addText("decompress");
		a_c.addText("Error decompressing RGBE file");
		a_c.addText("128");
		a_c.addText("127");
		a_c.addText("i");
		a_c.addText("value");
		a_c.addText("i");
		a_c.addText("n");
		a_c.addText("in");
		a_c.addText("out");
		a_c.addText("position");
		a_c.addText("total");
		a_c.addText("<clinit>");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("35");
		a_c.addText("63");
		a_c.addText("82");
		a_c.addText("65");
		a_c.addText("68");
		a_c.addText("73");
		a_c.addText("6");
		a_c.addText("65");
		a_c.addText("7");
		a_c.addText("78");
		a_c.addText("8");
		a_c.addText("67");
		a_c.addText("9");
		a_c.addText("69");
		a_c.addText("-Y (\\d+) \\+X (\\d+)");
		a_c.addText("8");
	}
	public void c432_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.Closeable"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 48, 55, 63, 71, 77, 94, 127, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, 47);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.OwnFieldUse, new int[]{47, 76, 82, 97, 99, 145, 146, 148});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{48, 55, 63, 77, 94, 127, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.OwnFieldUse, new int[]{51, 55, 105, 120, 122});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{76, 177, 184, 191});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), dmDependency.Type.ConstructorCall, new int[]{82, 99});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), dmDependency.Type.MethodCall, new int[]{83, 101, 107, 125});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{87, 102, 117, 136, 180});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.formats.rgbe.InfoHeaderReader"), dmDependency.Type.LocalVar, new int[]{94, 127});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{97, 145, 35, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{97, 145, 146});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.ConstructorCall, 105);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.MethodCall, new int[]{120, 122});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 139);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, 139);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{168, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.rgbe.RgbeInfo"), m_classes.get("byte"), dmDependency.Type.Argument, 168);
	}

	public void c435_texts(dmClass a_c) {
		a_c.addText("type");
		a_c.addText("fields");
		a_c.addText("byteOrder");
		a_c.addText("nextDirectory");
		a_c.addText("COMPARATOR");
		a_c.addText("jpegImageData");
		a_c.addText("tiffImageData");
		a_c.addText("setNextDirectory");
		a_c.addText("nextDirectory");
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("byteOrder");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" byte(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not 1");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("tagInfo");
		a_c.addText("value");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" byte(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" byte(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("Tag expects ");
		a_c.addText(" value(s), not ");
		a_c.addText("tagInfo");
		a_c.addText("values");
		a_c.addText("bytes");
		a_c.addText("tiffOutputField");
		a_c.addText("add");
		a_c.addText("field");
		a_c.addText("getFields");
		a_c.addText("removeField");
		a_c.addText("tagInfo");
		a_c.addText("removeField");
		a_c.addText("field");
		a_c.addText("tag");
		a_c.addText("matches");
		a_c.addText("findField");
		a_c.addText("tagInfo");
		a_c.addText("findField");
		a_c.addText("field");
		a_c.addText("tag");
		a_c.addText("sortFields");
		a_c.addText("comparator");
		a_c.addText("description");
		a_c.addText("writeItem");
		a_c.addText("-1");
		a_c.addText("field");
		a_c.addText("bos");
		a_c.addText("nextDirectoryOffset");
		a_c.addText("setJpegImageData");
		a_c.addText("rawJpegImageData");
		a_c.addText("getRawJpegImageData");
		a_c.addText("setTiffImageData");
		a_c.addText("rawTiffImageData");
		a_c.addText("getRawTiffImageData");
		a_c.addText("getItemLength");
		a_c.addText("12");
		a_c.addText("getItemDescription");
		a_c.addText("Directory: ");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("dirType");
		a_c.addText("removeFieldIfPresent");
		a_c.addText("tagInfo");
		a_c.addText("field");
		a_c.addText("getOutputItems");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("JPEG image data");
		a_c.addText("lengthValue");
		a_c.addText("jpegLengthField");
		a_c.addText("offsetTag");
		a_c.addText("byteCountsTag");
		a_c.addText("i");
		a_c.addText("stripsNotTiles");
		a_c.addText("offsetTag");
		a_c.addText("byteCountsTag");
		a_c.addText("imageData");
		a_c.addText("imageDataOffsets");
		a_c.addText("imageDataByteCounts");
		a_c.addText("data");
		a_c.addText("byteCountsField");
		a_c.addText("imageDataOffsetField");
		a_c.addText("item");
		a_c.addText("field");
		a_c.addText("item");
		a_c.addText("outputSummary");
		a_c.addText("jpegOffsetField");
		a_c.addText("imageDataInfo");
		a_c.addText("result");
		a_c.addText("lambda$sortFields$1");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("lambda$static$0");
		a_c.addText("o1");
		a_c.addText("o2");
		a_c.addText("<clinit>");
	}
	public void c435_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.Argument, new int[]{1, 601, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.OwnFieldUse, new int[]{90, 627, 628});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 91);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.ConstructorCall, 93);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{95, 104, 116, 125, 142, 154, 167, 179, 192, 204, 217, 229, 242, 254, 267, 279, 292, 304, 317, 329, 342, 354, 367, 380, 393, 406, 419, 432, 445, 458, 471, 480, 489, 499, 513, 531});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{96, 108, 121, 134, 146, 159, 171, 184, 196, 209, 221, 234, 246, 259, 271, 284, 296, 309, 321, 334, 346, 359, 372, 385, 398, 411, 424, 437, 450, 463, 476, 485, 495, 509, 523, 607, 672});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Argument, 96);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{96, 108, 209, 221, 359});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.FieldUse, new int[]{100, 101, 105});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{101, 113, 127, 139, 151, 164, 176, 189, 201, 214, 226, 239, 251, 264, 276, 289, 301, 314, 326, 339, 351, 364, 377, 390, 403, 416, 429, 442, 455, 468, 502, 516, 528});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.MethodCall, 104);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{105, 117, 130, 143, 155, 168, 180, 193, 205, 218, 230, 243, 255, 268, 280, 293, 305, 318, 330, 343, 355, 368, 381, 394, 407, 420, 433, 446, 459, 472, 480, 489, 491, 499, 505, 513, 519, 531, 533, 683, 688, 692, 736, 736, 744, 745});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.ConstructorCall, new int[]{105, 117, 130, 143, 155, 168, 180, 193, 205, 218, 230, 243, 255, 268, 280, 293, 305, 318, 330, 343, 355, 368, 381, 394, 407, 420, 433, 446, 459, 472, 483, 491, 505, 519, 533, 683, 692, 738, 745});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{108, 121, 134, 146, 159, 171, 184, 196, 209, 221, 234, 246, 259, 271, 284, 296, 309, 321, 334, 346, 359, 372, 385, 398, 411, 424, 437, 450, 463, 476, 485, 495, 509, 523, 537, 784, 784});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.LocalVar, new int[]{108, 121, 134, 146, 159, 171, 184, 196, 209, 221, 234, 246, 259, 271, 284, 296, 309, 321, 334, 346, 359, 372, 385, 398, 411, 424, 437, 450, 463, 476, 485, 495, 509, 523, 537, 559, 559, 593, 604, 637, 672, 784, 784, 784, 784, 784});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Argument, 108);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.FieldUse, new int[]{112, 112, 113, 117});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.MethodCall, 116);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Argument, 121);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.MethodCall, 125);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.FieldUse, new int[]{126, 126, 127, 130});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Argument, 134);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("short"), dmDependency.Type.Argument, new int[]{134, 146, 234, 246, 372, 385, 411, 450});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.FieldUse, new int[]{138, 139, 143});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.MethodCall, 142);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Argument, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.FieldUse, new int[]{150, 150, 151, 155});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.MethodCall, 154);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Argument, 159);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.FieldUse, new int[]{163, 164, 168});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.MethodCall, 167);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Argument, 171);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.FieldUse, new int[]{175, 175, 176, 180});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.MethodCall, 179);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Argument, 184);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, new int[]{184, 196, 284, 296, 437, 463, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.FieldUse, new int[]{188, 189, 193});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.MethodCall, 192);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Argument, 196);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.FieldUse, new int[]{200, 200, 201, 205});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.MethodCall, 204);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), dmDependency.Type.Argument, 209);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), dmDependency.Type.FieldUse, new int[]{213, 214, 218});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte"), dmDependency.Type.MethodCall, 217);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.Argument, 221);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.FieldUse, new int[]{225, 225, 226, 230});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), dmDependency.Type.MethodCall, 229);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.Argument, 234);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.FieldUse, new int[]{238, 239, 243});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort"), dmDependency.Type.MethodCall, 242);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.Argument, 246);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.FieldUse, new int[]{250, 250, 251, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts"), dmDependency.Type.MethodCall, 254);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.Argument, 259);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.FieldUse, new int[]{263, 264, 268});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), dmDependency.Type.MethodCall, 267);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.Argument, 271);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.FieldUse, new int[]{275, 275, 276, 280});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs"), dmDependency.Type.MethodCall, 279);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.Argument, 284);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.FieldUse, new int[]{288, 289, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational"), dmDependency.Type.MethodCall, 292);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.Argument, 296);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.FieldUse, new int[]{300, 300, 301, 305});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals"), dmDependency.Type.MethodCall, 304);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.Argument, 309);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.FieldUse, new int[]{313, 314, 318});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), dmDependency.Type.MethodCall, 317);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.Argument, 321);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.FieldUse, new int[]{325, 325, 326, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats"), dmDependency.Type.MethodCall, 329);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.Argument, 334);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.FieldUse, new int[]{338, 339, 343});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble"), dmDependency.Type.MethodCall, 342);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.Argument, 346);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.FieldUse, new int[]{350, 350, 351, 355});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles"), dmDependency.Type.MethodCall, 354);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.Argument, new int[]{359, 372});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.FieldUse, new int[]{363, 363, 364, 368, 376, 376, 377, 381});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.MethodCall, new int[]{367, 380});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Argument, new int[]{385, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.FieldUse, new int[]{389, 389, 390, 394, 402, 402, 403, 407});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.MethodCall, new int[]{393, 406});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.Argument, new int[]{411, 424, 437});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.FieldUse, new int[]{415, 415, 416, 420, 428, 428, 429, 433, 441, 441, 442, 446});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), dmDependency.Type.MethodCall, new int[]{419, 432, 445});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.Argument, new int[]{450, 463});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.FieldUse, new int[]{454, 454, 455, 459, 467, 467, 468, 472});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational"), dmDependency.Type.MethodCall, new int[]{458, 471});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.Argument, 476);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.MethodCall, 480);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.FieldUse, new int[]{482, 482});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.Argument, 485);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.MethodCall, 489);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), dmDependency.Type.FieldUse, 491);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.Argument, 495);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.MethodCall, 499);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte"), dmDependency.Type.FieldUse, new int[]{501, 501, 502, 505});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.Argument, new int[]{509, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.MethodCall, new int[]{513, 531});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational"), dmDependency.Type.FieldUse, new int[]{515, 515, 516, 519, 527, 527, 528, 533});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Argument, new int[]{537, 784, 784});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.Returns, new int[]{541, 559, 573});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Argument, new int[]{544, 559, 664});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.FieldUse, new int[]{548, 573});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.FieldUse, new int[]{554, 589, 598, 598, 599, 599});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, 607);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 607);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, 607);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{614, 633, 635});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.MethodCall, new int[]{618, 762, 766, 601, 601});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("long"), dmDependency.Type.LocalVar, 637);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Argument, 637);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.OwnFieldUse, new int[]{640, 644, 682, 688, 777, 778});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.Returns, 641);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Argument, 644);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.OwnFieldUse, new int[]{648, 652, 708, 709, 723});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.Returns, 649);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.MethodCall, 663);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, 664);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.LocalVar, 664);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.Argument, 672);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.Returns, 672);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{678, 679, 683, 692, 701, 702, 703, 704, 714, 715, 717, 718});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.FieldUse, 688);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.FieldUse, new int[]{689, 736, 744});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.MethodCall, new int[]{688, 738, 744});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.MethodCall, new int[]{709, 723});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.FieldUse, 730);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.ConstructorCall, 752);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.FieldUse, 772);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.MethodCall, new int[]{774, 781});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.JpegImageData"), dmDependency.Type.MethodCall, 779);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value"), dmDependency.Type.ConstructorCall, 779);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.LocalVar, new int[]{784, 784, 784, 784});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.LocalVar, 784);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem"), dmDependency.Type.LocalVar, new int[]{784, 784, 784});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.ImageDataOffsets"), dmDependency.Type.LocalVar, 784);
	}

	public void c436_texts(dmClass a_c) {
		a_c.addText("NEWLINE");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("items");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("items");
		a_c.addText("toString");
		a_c.addText("%sGIF metadata:");
		a_c.addText("%sWidth: %d%s");
		a_c.addText("%sHeight: %d%s");
		a_c.addText("%sImages:");
		a_c.addText("item");
		a_c.addText("prefix");
		a_c.addText("result");
		a_c.addText("getWidth");
		a_c.addText("getHeight");
		a_c.addText("getItems");
		a_c.addText("<clinit>");
		a_c.addText("line.separator");
	}
	public void c436_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.LocalVar, new int[]{35, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.MethodCall, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadata"), m_classes.get("org.apache.commons.imaging.formats.gif.GifImageMetadataItem"), dmDependency.Type.Returns, 58);
	}

	public void c437_texts(dmClass a_c) {
		a_c.addText("invert");
		a_c.addText("<init>");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("invert");
		a_c.addText("interpretPixel");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("imageBuilder");
		a_c.addText("samples");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("sample");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("rgb");
	}
	public void c437_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 54);
	}

	public void c438_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("data");
		a_c.addText("profileSize");
		a_c.addText("cmmTypeSignature");
		a_c.addText("profileVersion");
		a_c.addText("profileDeviceClassSignature");
		a_c.addText("colorSpace");
		a_c.addText("profileConnectionSpace");
		a_c.addText("profileFileSignature");
		a_c.addText("primaryPlatformSignature");
		a_c.addText("variousFlags");
		a_c.addText("deviceManufacturer");
		a_c.addText("deviceModel");
		a_c.addText("renderingIntent");
		a_c.addText("profileCreatorSignature");
		a_c.addText("profileId");
		a_c.addText("tags");
		a_c.addText("<init>");
		a_c.addText("data");
		a_c.addText("profileSize");
		a_c.addText("cmmTypeSignature");
		a_c.addText("profileVersion");
		a_c.addText("profileDeviceClassSignature");
		a_c.addText("colorSpace");
		a_c.addText("profileConnectionSpace");
		a_c.addText("profileFileSignature");
		a_c.addText("primaryPlatformSignature");
		a_c.addText("variousFlags");
		a_c.addText("deviceManufacturer");
		a_c.addText("deviceModel");
		a_c.addText("renderingIntent");
		a_c.addText("profileCreatorSignature");
		a_c.addText("profileId");
		a_c.addText("tags");
		a_c.addText("getData");
		a_c.addText("getProfileId");
		a_c.addText("getTags");
		a_c.addText("issRGB");
		a_c.addText("1229275936");
		a_c.addText("1934772034");
		a_c.addText("printCharQuad");
		a_c.addText(": \'");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("\'");
		a_c.addText("pw");
		a_c.addText("msg");
		a_c.addText("i");
		a_c.addText("dump");
		a_c.addText("prefix");
		a_c.addText("toString");
		a_c.addText("IccProfileInfo: Error");
		a_c.addText("e");
		a_c.addText("toString");
		a_c.addText(": data length: ");
		a_c.addText(": ProfileDeviceClassSignature");
		a_c.addText(": CMMTypeSignature");
		a_c.addText(": ProfileDeviceClassSignature");
		a_c.addText(": ColorSpace");
		a_c.addText(": ProfileConnectionSpace");
		a_c.addText(": ProfileFileSignature");
		a_c.addText(": PrimaryPlatformSignature");
		a_c.addText(": ProfileFileSignature");
		a_c.addText(": DeviceManufacturer");
		a_c.addText(": DeviceModel");
		a_c.addText(": RenderingIntent");
		a_c.addText(": ProfileCreatorSignature");
		a_c.addText("\t");
		a_c.addText(": ");
		a_c.addText(": issRGB: ");
		a_c.addText("tag");
		a_c.addText("i");
		a_c.addText("prefix");
		a_c.addText("sw");
		a_c.addText("pw");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/icc/IccProfileInfo;");
	}
	public void c438_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{54, 69, 75, 79, 115});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.OwnFieldUse, new int[]{71, 83, 130, 131});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{72, 75});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("byte"), dmDependency.Type.MethodCall, new int[]{75, 79});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.Returns, 79);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 87);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{92, 115, 135, 136});
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 106);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 106);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, 112);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, 113);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.MethodCall, 132);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, 138);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("org.apache.commons.imaging.icc.IccTag"), dmDependency.Type.LocalVar, 138);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, 138);
		d(m_classes.get("org.apache.commons.imaging.icc.IccProfileInfo"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, 138);
	}

	public void c439_texts(dmClass a_c) {
		a_c.addText("subblocks");
		a_c.addText("<init>");
		a_c.addText("blockCode");
		a_c.addText("subblocks");
		a_c.addText("appendSubBlocks");
		a_c.addText("appendSubBlocks");
		a_c.addText("subblock");
		a_c.addText("i");
		a_c.addText("includeLengths");
		a_c.addText("out");
	}
	public void c439_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{31, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{31, 34});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.MethodCall, new int[]{43, 45, 48});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("byte"), dmDependency.Type.LocalVar, 48);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.GenericGifBlock"), m_classes.get("java.io.ByteArrayOutputStream"), dmDependency.Type.LocalVar, 48);
	}

	public void c440_texts(dmClass a_c) {
		a_c.addText("LOGGER");
		a_c.addText("failOnError");
		a_c.addText("description");
		a_c.addText("comments");
		a_c.addText("<init>");
		a_c.addText("description");
		a_c.addText("<init>");
		a_c.addText("description");
		a_c.addText("failOnError");
		a_c.addText("getDefault");
		a_c.addText("ignore");
		a_c.addText("addComment");
		a_c.addText("comment");
		a_c.addText("addComment");
		a_c.addText(": ");
		a_c.addText("comment");
		a_c.addText("value");
		a_c.addText("toString");
		a_c.addText("sw");
		a_c.addText("pw");
		a_c.addText("dump");
		a_c.addText("pw");
		a_c.addText("sw");
		a_c.addText("e");
		a_c.addText("dump");
		a_c.addText("Format Compliance: ");
		a_c.addText("\tNo comments.");
		a_c.addText("\t");
		a_c.addText(": ");
		a_c.addText("i");
		a_c.addText("pw");
		a_c.addText("getValueDescription");
		a_c.addText(" (");
		a_c.addText(")");
		a_c.addText("value");
		a_c.addText("compareBytes");
		a_c.addText(": Unexpected length: (expected: ");
		a_c.addText(", actual: ");
		a_c.addText(")");
		a_c.addText(": Unexpected value: (expected: ");
		a_c.addText(", actual: ");
		a_c.addText(")");
		a_c.addText("i");
		a_c.addText("name");
		a_c.addText("expected");
		a_c.addText("actual");
		a_c.addText("checkBounds");
		a_c.addText(": bounds check: ");
		a_c.addText(" <= ");
		a_c.addText(" <= ");
		a_c.addText(": false");
		a_c.addText("name");
		a_c.addText("min");
		a_c.addText("max");
		a_c.addText("actual");
		a_c.addText("compare");
		a_c.addText("10");
		a_c.addText("name");
		a_c.addText("valid");
		a_c.addText("actual");
		a_c.addText("compare");
		a_c.addText("43");
		a_c.addText(": Unexpected value: (valid: ");
		a_c.addText("123");
		a_c.addText(", ");
		a_c.addText("125");
		a_c.addText(", actual: ");
		a_c.addText(")");
		a_c.addText("element");
		a_c.addText("i");
		a_c.addText("name");
		a_c.addText("valid");
		a_c.addText("actual");
		a_c.addText("result");
		a_c.addText("<clinit>");
		a_c.addText("Lorg/apache/commons/imaging/FormatCompliance;");
	}
	public void c440_deps() {
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.Returns, 47);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("org.apache.commons.imaging.FormatCompliance"), dmDependency.Type.ConstructorCall, 50);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{50, 58, 100, 122, 133, 138});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 56);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.StringWriter"), dmDependency.Type.ConstructorCall, new int[]{66, 75});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.ConstructorCall, new int[]{67, 75});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.StringWriter"), dmDependency.Type.MethodCall, new int[]{71, 78, 79, 80, 80, 80, 80});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.StringWriter"), dmDependency.Type.LocalVar, new int[]{71, 83});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.LocalVar, new int[]{71, 83});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{77, 80, 80, 80, 80, 86, 89, 92, 95, 96});
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.IOException"), dmDependency.Type.MethodCall, 81);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 83);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 83);
		d(m_classes.get("org.apache.commons.imaging.FormatCompliance"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{100, 100});
	}

	public void c441_texts(dmClass a_c) {
		a_c.addText("bytes");
		a_c.addText("count");
		a_c.addText("<init>");
		a_c.addText("8");
		a_c.addText("length");
		a_c.addText("write");
		a_c.addText("Write exceeded expected length (");
		a_c.addText(", ");
		a_c.addText(")");
		a_c.addText("value");
		a_c.addText("toByteArray");
		a_c.addText("8");
		a_c.addText("result");
		a_c.addText("getBytesWritten");
	}
	public void c441_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("java.io.OutputStream"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{31, 36, 37, 40, 45, 47, 50});
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 32);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, 37);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.Returns, 42);
		d(m_classes.get("org.apache.commons.imaging.common.FastByteArrayOutputStream"), m_classes.get("byte"), dmDependency.Type.LocalVar, 50);
	}

	public void c442_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("-16777216");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("alpha");
		a_c.addText("getBasicChannelsCount");
	}
	public void c442_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 21);
	}

	public void c443_texts(dmClass a_c) {
		a_c.addText("crc_table");
		a_c.addText("crc_table_computed");
		a_c.addText("<init>");
		a_c.addText("256");
		a_c.addText("11");
		a_c.addText("make_crc_table");
		a_c.addText("256");
		a_c.addText("8");
		a_c.addText("3988292384");
		a_c.addText("c");
		a_c.addText("k");
		a_c.addText("n");
		a_c.addText("update_crc");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("crc");
		a_c.addText("buf");
		a_c.addText("c");
		a_c.addText("n");
		a_c.addText("crc");
		a_c.addText("4294967295");
		a_c.addText("4294967295");
		a_c.addText("buf");
		a_c.addText("len");
		a_c.addText("start_partial_crc");
		a_c.addText("4294967295");
		a_c.addText("buf");
		a_c.addText("len");
		a_c.addText("continue_partial_crc");
		a_c.addText("old_crc");
		a_c.addText("buf");
		a_c.addText("len");
		a_c.addText("finish_partial_crc");
		a_c.addText("4294967295");
		a_c.addText("old_crc");
	}
	public void c443_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("long"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("long"), dmDependency.Type.OwnFieldUse, new int[]{22, 42, 64});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{45, 66});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("long"), dmDependency.Type.Returns, new int[]{45, 71, 75, 79});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("long"), dmDependency.Type.Argument, new int[]{45, 75, 79});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{45, 66, 71, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngCrc"), m_classes.get("byte"), dmDependency.Type.LocalVar, 66);
	}

	public void c445_texts(dmClass a_c) {
		a_c.addText("quantizationTables");
		a_c.addText("huffmanDCTables");
		a_c.addText("huffmanACTables");
		a_c.addText("sofnSegment");
		a_c.addText("sosSegment");
		a_c.addText("scaledQuantizationTables");
		a_c.addText("image");
		a_c.addText("imageReadException");
		a_c.addText("ioException");
		a_c.addText("zz");
		a_c.addText("blockInt");
		a_c.addText("block");
		a_c.addText("<init>");
		a_c.addText("64");
		a_c.addText("10");
		a_c.addText("64");
		a_c.addText("10");
		a_c.addText("64");
		a_c.addText("6");
		a_c.addText("beginSOS");
		a_c.addText("visitSOS");
		a_c.addText("segmentLength");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("SosSegment");
		a_c.addText("Not a Valid JPEG File");
		a_c.addText("10");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("24");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText("10");
		a_c.addText("16711680");
		a_c.addText("65280");
		a_c.addText("255");
		a_c.addText(" components are invalid or unsupported");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Unsupported JPEG with ");
		a_c.addText(" components");
		a_c.addText("Error parsing JPEG");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("bandMasks");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("C");
		a_c.addText("M");
		a_c.addText("Y");
		a_c.addText("K");
		a_c.addText("rgb");
		a_c.addText("Y");
		a_c.addText("Cb");
		a_c.addText("Cr");
		a_c.addText("rgb");
		a_c.addText("Y");
		a_c.addText("x2");
		a_c.addText("y2");
		a_c.addText("srcRowOffset");
		a_c.addText("dstRowOffset");
		a_c.addText("x1");
		a_c.addText("y1");
		a_c.addText("segmentLength");
		a_c.addText("sosSegmentBytes");
		a_c.addText("scanPayload");
		a_c.addText("payloadReadCount");
		a_c.addText("hMax");
		a_c.addText("vMax");
		a_c.addText("hSize");
		a_c.addText("vSize");
		a_c.addText("xMCUs");
		a_c.addText("yMCUs");
		a_c.addText("mcu");
		a_c.addText("scaledMCU");
		a_c.addText("preds");
		a_c.addText("colorModel");
		a_c.addText("raster");
		a_c.addText("dataBuffer");
		a_c.addText("bitInputStreams");
		a_c.addText("bitInputStreamCount");
		a_c.addText("bitInputStream");
		a_c.addText("imageReadEx");
		a_c.addText("ioEx");
		a_c.addText("ex");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("imageData");
		a_c.addText("is");
		a_c.addText("visitSegment");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("65472");
		a_c.addText("65473");
		a_c.addText("65474");
		a_c.addText("65475");
		a_c.addText("65477");
		a_c.addText("65478");
		a_c.addText("6");
		a_c.addText("65479");
		a_c.addText("7");
		a_c.addText("65481");
		a_c.addText("8");
		a_c.addText("65482");
		a_c.addText("9");
		a_c.addText("65483");
		a_c.addText("10");
		a_c.addText("65485");
		a_c.addText("11");
		a_c.addText("65486");
		a_c.addText("12");
		a_c.addText("65487");
		a_c.addText("65472");
		a_c.addText("Only sequential, baseline JPEGs are supported at the moment");
		a_c.addText("65499");
		a_c.addText("Invalid quantization table identifier ");
		a_c.addText("64");
		a_c.addText("10");
		a_c.addText("64");
		a_c.addText("6");
		a_c.addText("64");
		a_c.addText("65476");
		a_c.addText("Invalid huffman table class ");
		a_c.addText("Invalid huffman table identifier ");
		a_c.addText("j");
		a_c.addText("table");
		a_c.addText("quantizationMatrixInt");
		a_c.addText("quantizationMatrixFloat");
		a_c.addText("i");
		a_c.addText("dqtSegment");
		a_c.addText("tables");
		a_c.addText("tables");
		a_c.addText("table");
		a_c.addText("tables");
		a_c.addText("i");
		a_c.addText("dhtSegment");
		a_c.addText("marker");
		a_c.addText("markerBytes");
		a_c.addText("segmentLength");
		a_c.addText("segmentLengthBytes");
		a_c.addText("segmentData");
		a_c.addText("sofnSegments");
		a_c.addText("rescaleMCU");
		a_c.addText("sample");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("srcRowOffset");
		a_c.addText("dstRowOffset");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("dstRowOffset");
		a_c.addText("hScale");
		a_c.addText("vScale");
		a_c.addText("dataUnit");
		a_c.addText("i");
		a_c.addText("dataUnits");
		a_c.addText("hSize");
		a_c.addText("vSize");
		a_c.addText("ret");
		a_c.addText("allocateMCUMemory");
		a_c.addText("Invalid component");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("j");
		a_c.addText("scanComponent");
		a_c.addText("frameComponent");
		a_c.addText("fullBlock");
		a_c.addText("i");
		a_c.addText("mcu");
		a_c.addText("readMCU");
		a_c.addText("Invalid component");
		a_c.addText("15");
		a_c.addText("15");
		a_c.addText("63");
		a_c.addText("64");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("j");
		a_c.addText("rs");
		a_c.addText("ssss");
		a_c.addText("rrrr");
		a_c.addText("r");
		a_c.addText("j");
		a_c.addText("result");
		a_c.addText("result");
		a_c.addText("sample");
		a_c.addText("result");
		a_c.addText("xx");
		a_c.addText("yy");
		a_c.addText("t");
		a_c.addText("diff");
		a_c.addText("k");
		a_c.addText("shift");
		a_c.addText("max");
		a_c.addText("scaledQuantizationTable");
		a_c.addText("dstRowOffset");
		a_c.addText("srcNext");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("scanComponent");
		a_c.addText("frameComponent");
		a_c.addText("fullBlock");
		a_c.addText("i");
		a_c.addText("is");
		a_c.addText("preds");
		a_c.addText("mcu");
		a_c.addText("splitByRstMarkers");
		a_c.addText("to");
		a_c.addText("from");
		a_c.addText("to");
		a_c.addText("interval");
		a_c.addText("i");
		a_c.addText("scanPayload");
		a_c.addText("intervalStarts");
		a_c.addText("intervalCount");
		a_c.addText("streams");
		a_c.addText("getIntervalStartPositions");
		a_c.addText("208");
		a_c.addText("215");
		a_c.addText("255");
		a_c.addText("scanPayload");
		a_c.addText("intervalStarts");
		a_c.addText("foundFF");
		a_c.addText("foundD0toD7");
		a_c.addText("pos");
		a_c.addText("fastRound");
		a_c.addText("0.5");
		a_c.addText("x");
		a_c.addText("extend");
		a_c.addText("v");
		a_c.addText("t");
		a_c.addText("vt");
		a_c.addText("receive");
		a_c.addText("ssss");
		a_c.addText("is");
		a_c.addText("i");
		a_c.addText("v");
		a_c.addText("decode");
		a_c.addText("is");
		a_c.addText("huffmanTable");
		a_c.addText("i");
		a_c.addText("code");
		a_c.addText("j");
		a_c.addText("decode");
		a_c.addText("byteSource");
		a_c.addText("jpegUtils");
	}
	public void c445_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils$Visitor"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.IOException"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.common.BinaryFileParser"), dmDependency.Type.ConstructorCall, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.ConstructorCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.OwnFieldUse, new int[]{55, 240, 246});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.ConstructorCall, new int[]{56, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.OwnFieldUse, new int[]{56, 57, 262, 264, 358, 369});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{70, 70, 208, 208, 208});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 75);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{78, 79});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.ConstructorCall, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.OwnFieldUse, new int[]{80, 318, 319, 320, 341, 342});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.MethodCall, 88);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.OwnFieldUse, new int[]{94, 95, 97, 103, 104, 110, 113, 116, 116, 117, 120, 120, 123, 126, 126, 136, 159, 160, 162, 188, 235, 322, 323, 324, 344, 345, 346, 397, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.FieldUse, new int[]{94, 103, 104, 110, 113, 116, 116, 117, 120, 120, 123, 126, 126, 136, 159, 160, 162, 188, 322, 344, 397, 398});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.MethodCall, new int[]{96, 98, 323, 324, 345, 346});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.FieldUse, new int[]{96, 98, 323, 331, 331, 345, 354, 355, 400, 407, 424});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Block"), dmDependency.Type.ConstructorCall, new int[]{106, 108, 318, 331});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.DirectColorModel"), dmDependency.Type.ConstructorCall, new int[]{114, 118, 124});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.Raster"), dmDependency.Type.MethodCall, new int[]{116, 120, 126});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{136, 182, 206, 232, 242, 266, 271, 329, 351});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.MethodCall, 139);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), dmDependency.Type.MethodCall, new int[]{149, 521, 530, 533});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Block"), dmDependency.Type.FieldUse, new int[]{164, 165, 166, 167, 171, 172, 173, 178, 284, 284, 285, 285, 288, 289, 293, 295, 296, 297, 299, 307, 307, 307, 422});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.color.ColorConversions"), dmDependency.Type.MethodCall, 168);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.MethodCall, new int[]{169, 176, 179});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.YCbCrConverter"), dmDependency.Type.MethodCall, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.MethodCall, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, 193);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.OwnFieldUse, new int[]{193, 550});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.OwnFieldUse, new int[]{201, 206, 544, 545});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.IOException"), dmDependency.Type.OwnFieldUse, new int[]{203, 547, 548});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.ColorModel"), dmDependency.Type.LocalVar, new int[]{208, 208, 208, 208});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.LocalVar, new int[]{208, 208, 208, 208});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("byte"), dmDependency.Type.LocalVar, 208);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Block"), dmDependency.Type.LocalVar, new int[]{208, 208, 315, 336, 336, 429});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.LocalVar, 208);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), dmDependency.Type.LocalVar, new int[]{208, 208, 455});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.LocalVar, 208);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.IOException"), dmDependency.Type.LocalVar, 208);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.LocalVar, 208);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{208, 315, 336, 511, 523, 537});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{208, 336, 511, 523, 537});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment"), dmDependency.Type.ConstructorCall, 235);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), dmDependency.Type.ConstructorCall, 237);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), dmDependency.Type.FieldUse, new int[]{238, 239});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.FieldUse, new int[]{240, 240, 242, 246, 254});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.MethodCall, 248);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.ZigZag"), dmDependency.Type.MethodCall, new int[]{248, 401});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Dct"), dmDependency.Type.MethodCall, new int[]{253, 405});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), dmDependency.Type.ConstructorCall, 257);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), dmDependency.Type.FieldUse, new int[]{258, 259});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.FieldUse, new int[]{261, 263, 266, 269, 269, 271, 275});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment$QuantizationTable"), dmDependency.Type.LocalVar, 278);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DqtSegment"), dmDependency.Type.LocalVar, 278);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.LocalVar, new int[]{278, 278, 278, 278});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment"), dmDependency.Type.LocalVar, 278);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Block"), dmDependency.Type.Argument, new int[]{278, 278, 336});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.Block"), dmDependency.Type.Returns, 315);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.FieldUse, new int[]{318, 319, 341});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment"), dmDependency.Type.MethodCall, new int[]{320, 342});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.FieldUse, new int[]{323, 345, 358, 369});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SosSegment$Component"), dmDependency.Type.LocalVar, new int[]{336, 429});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.SofnSegment$Component"), dmDependency.Type.LocalVar, new int[]{336, 429});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), dmDependency.Type.Argument, new int[]{336, 511, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), dmDependency.Type.Returns, 429);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegInputStream"), dmDependency.Type.ConstructorCall, new int[]{441, 453});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.Argument, 523);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable"), dmDependency.Type.MethodCall, new int[]{531, 535, 536, 537});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 537);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, 537);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.ConstructorCall, 542);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.MethodCall, 543);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.decoder.JpegDecoder"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegUtils"), dmDependency.Type.LocalVar, 550);
	}

	public void c447_texts(dmClass a_c) {
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("bitsPerSample");
		a_c.addText("bitsPerSampleLength");
		a_c.addText("last");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("sampleFormat");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("directory");
		a_c.addText("photometricInterpreter");
		a_c.addText("bitsPerSample");
		a_c.addText("predictor");
		a_c.addText("samplesPerPixel");
		a_c.addText("sampleFormat");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("readImageData");
		a_c.addText("readImageData");
		a_c.addText("isHomogenous");
		a_c.addText("element");
		a_c.addText("size");
		a_c.addText("getSamplesAsBytes");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("sign");
		a_c.addText("bits");
		a_c.addText("sample");
		a_c.addText("i");
		a_c.addText("bis");
		a_c.addText("result");
		a_c.addText("resetPredictor");
		a_c.addText("applyPredictor");
		a_c.addText("255");
		a_c.addText("i");
		a_c.addText("samples");
		a_c.addText("decompress");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("TIFF FillOrder=");
		a_c.addText(" is invalid");
		a_c.addText("T.4 compression with the uncompressed mode extension is not yet supported");
		a_c.addText("T.6 compression with the uncompressed mode extension is not yet supported");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Tiff: unknown/unsupported compression: ");
		a_c.addText("compressedOrdered");
		a_c.addText("i");
		a_c.addText("compressedOrdered");
		a_c.addText("t4Options");
		a_c.addText("field");
		a_c.addText("is2D");
		a_c.addText("usesUncompressedMode");
		a_c.addText("hasFillBitsBeforeEOL");
		a_c.addText("t6Options");
		a_c.addText("field");
		a_c.addText("usesUncompressedMode");
		a_c.addText("is");
		a_c.addText("lzwMinimumCodeSize");
		a_c.addText("myLzwDecompressor");
		a_c.addText("compressedInput");
		a_c.addText("compression");
		a_c.addText("expectedSize");
		a_c.addText("tileWidth");
		a_c.addText("tileHeight");
		a_c.addText("fillOrderField");
		a_c.addText("fillOrder");
		a_c.addText("compressedOrdered");
		a_c.addText("unpackFloatingPointSamples");
		a_c.addText("8");
		a_c.addText("10");
		a_c.addText("32");
		a_c.addText("Imaging does not yet support floating-point data with predictor type 3 for ");
		a_c.addText(" bits per sample");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("64");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("56");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("32");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("255");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("24");
		a_c.addText("16");
		a_c.addText("8");
		a_c.addText("Imaging does not support floating-point samples with ");
		a_c.addText(" bits per sample");
		a_c.addText("j");
		a_c.addText("a");
		a_c.addText("b");
		a_c.addText("c");
		a_c.addText("d");
		a_c.addText("j");
		a_c.addText("aOffset");
		a_c.addText("bOffset");
		a_c.addText("cOffset");
		a_c.addText("dOffset");
		a_c.addText("index");
		a_c.addText("i");
		a_c.addText("bytesInRow");
		a_c.addText("sbits");
		a_c.addText("b0");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("b3");
		a_c.addText("b4");
		a_c.addText("b5");
		a_c.addText("b6");
		a_c.addText("b7");
		a_c.addText("sbits");
		a_c.addText("f");
		a_c.addText("j");
		a_c.addText("i");
		a_c.addText("k");
		a_c.addText("index");
		a_c.addText("sbits");
		a_c.addText("b0");
		a_c.addText("b1");
		a_c.addText("b2");
		a_c.addText("b3");
		a_c.addText("sbits");
		a_c.addText("j");
		a_c.addText("i");
		a_c.addText("k");
		a_c.addText("index");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("scansize");
		a_c.addText("bytes");
		a_c.addText("predictor");
		a_c.addText("bitsPerSample");
		a_c.addText("byteOrder");
		a_c.addText("bytesPerSample");
		a_c.addText("nBytes");
		a_c.addText("length");
		a_c.addText("samples");
		a_c.addText("transferBlockToRaster");
		a_c.addText("j");
		a_c.addText("yR");
		a_c.addText("yB");
		a_c.addText("rOffset");
		a_c.addText("bOffset");
		a_c.addText("i");
		a_c.addText("xBlock");
		a_c.addText("yBlock");
		a_c.addText("blockWidth");
		a_c.addText("blockHeight");
		a_c.addText("blockData");
		a_c.addText("xRaster");
		a_c.addText("yRaster");
		a_c.addText("rasterWidth");
		a_c.addText("rasterHeight");
		a_c.addText("rasterData");
		a_c.addText("xR0");
		a_c.addText("yR0");
		a_c.addText("xR1");
		a_c.addText("yR1");
		a_c.addText("xB0");
		a_c.addText("yB0");
		a_c.addText("w");
		a_c.addText("h");
		a_c.addText("readRasterData");
	}
	public void c447_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.OwnFieldUse, new int[]{164, 245, 273, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter"), dmDependency.Type.OwnFieldUse, 165);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{174, 174, 239, 330, 580});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{174, 174, 196, 239, 580});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 174);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.awt.Rectangle"), dmDependency.Type.Argument, new int[]{174, 580});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.Argument, 196);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream"), dmDependency.Type.MethodCall, 212);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("byte"), dmDependency.Type.Returns, 239);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{239, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{245, 273, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffDirectory"), dmDependency.Type.MethodCall, new int[]{245, 273, 293});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{248, 275, 295});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{260, 280, 299, 330, 380, 491});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), dmDependency.Type.MethodCall, new int[]{269, 285, 288, 302});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 306);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{310, 431, 469});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.ConstructorCall, 310);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.MethodCall, new int[]{313, 315});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.ConstructorCall, 320);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.MethodCall, 320);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), dmDependency.Type.MethodCall, 326);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{330, 330, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.LocalVar, new int[]{330, 330, 330});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 330);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor"), dmDependency.Type.LocalVar, 330);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 330);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("long"), dmDependency.Type.LocalVar, new int[]{496, 496, 496, 496, 496, 496, 496, 496, 496, 496});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffRasterData"), dmDependency.Type.Returns, 580);
	}

	public void c448_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("exifDirectory");
	}
	public void c448_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 24);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 24);
	}

	public void c450_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("type");
		a_c.addText("name");
		a_c.addText("getValue");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("writeData");
		a_c.addText("8");
		a_c.addText("Invalid data");
		a_c.addText("o");
		a_c.addText("byteOrder");
	}
	public void c450_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{31, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("byte"), dmDependency.Type.LocalVar, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("byte"), dmDependency.Type.Returns, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 45);
	}

	public void c451_texts(dmClass a_c) {
		a_c.addText("IPTC_NON_EXTENDED_RECORD_MAXIMUM_SIZE");
		a_c.addText("32767");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PHOTOSHOP2_INFO");
		a_c.addText("1000");
		a_c.addText("IMAGE_RESOURCE_BLOCK_MACINTOSH_PRINT_INFO");
		a_c.addText("1001");
		a_c.addText("IMAGE_RESOURCE_BLOCK_XML_DATA");
		a_c.addText("1002");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PHOTOSHOP2_COLOR_TABLE");
		a_c.addText("1003");
		a_c.addText("IMAGE_RESOURCE_BLOCK_RESOLUTION_INFO");
		a_c.addText("1005");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ALPHA_CHANNELS_NAMES");
		a_c.addText("1006");
		a_c.addText("IMAGE_RESOURCE_BLOCK_DISPLAY_INFO");
		a_c.addText("1007");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PSTRING_CAPTION");
		a_c.addText("1008");
		a_c.addText("IMAGE_RESOURCE_BLOCK_BORDER_INFORMATION");
		a_c.addText("1009");
		a_c.addText("IMAGE_RESOURCE_BLOCK_BACKGROUND_COLOR");
		a_c.addText("1010");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PRINT_FLAGS");
		a_c.addText("1011");
		a_c.addText("IMAGE_RESOURCE_BLOCK_BW_HALFTONING_INFO");
		a_c.addText("1012");
		a_c.addText("IMAGE_RESOURCE_BLOCK_COLOR_HALFTONING_INFO");
		a_c.addText("1013");
		a_c.addText("IMAGE_RESOURCE_BLOCK_DUOTONE_HALFTONING_INFO");
		a_c.addText("1014");
		a_c.addText("IMAGE_RESOURCE_BLOCK_BW_TRANSFER_FUNC");
		a_c.addText("1015");
		a_c.addText("IMAGE_RESOURCE_BLOCK_COLOR_TRANSFER_FUNCS");
		a_c.addText("1016");
		a_c.addText("IMAGE_RESOURCE_BLOCK_DUOTONE_TRANSFER_FUNCS");
		a_c.addText("1017");
		a_c.addText("IMAGE_RESOURCE_BLOCK_DUOTONE_IMAGE_INFO");
		a_c.addText("1018");
		a_c.addText("IMAGE_RESOURCE_BLOCK_EFFECTIVE_BW");
		a_c.addText("1019");
		a_c.addText("IMAGE_RESOURCE_BLOCK_OBSOLETE_PHOTOSHOP_TAG1");
		a_c.addText("1020");
		a_c.addText("IMAGE_RESOURCE_BLOCK_EPS_OPTIONS");
		a_c.addText("1021");
		a_c.addText("IMAGE_RESOURCE_BLOCK_QUICK_MASK_INFO");
		a_c.addText("1022");
		a_c.addText("IMAGE_RESOURCE_BLOCK_OBSOLETE_PHOTOSHOP_TAG2");
		a_c.addText("1023");
		a_c.addText("IMAGE_RESOURCE_BLOCK_LAYER_STATE_INFO");
		a_c.addText("1024");
		a_c.addText("IMAGE_RESOURCE_BLOCK_WORKING_PATH");
		a_c.addText("1025");
		a_c.addText("IMAGE_RESOURCE_BLOCK_LAYERS_GROUP_INFO");
		a_c.addText("1026");
		a_c.addText("IMAGE_RESOURCE_BLOCK_OBSOLETE_PHOTOSHOP_TAG3");
		a_c.addText("1027");
		a_c.addText("IMAGE_RESOURCE_BLOCK_IPTC_DATA");
		a_c.addText("1028");
		a_c.addText("IMAGE_RESOURCE_BLOCK_RAW_IMAGE_MODE");
		a_c.addText("1029");
		a_c.addText("IMAGE_RESOURCE_BLOCK_JPEG_QUALITY");
		a_c.addText("1030");
		a_c.addText("IMAGE_RESOURCE_BLOCK_GRID_GUIDES_INFO");
		a_c.addText("1032");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PHOTOSHOP_BGR_THUMBNAIL");
		a_c.addText("1033");
		a_c.addText("IMAGE_RESOURCE_BLOCK_COPYRIGHT_FLAG");
		a_c.addText("1034");
		a_c.addText("IMAGE_RESOURCE_BLOCK_URL");
		a_c.addText("1035");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PHOTOSHOP_THUMBNAIL");
		a_c.addText("1036");
		a_c.addText("IMAGE_RESOURCE_BLOCK_GLOBAL_ANGLE");
		a_c.addText("1037");
		a_c.addText("IMAGE_RESOURCE_BLOCK_COLOR_SAMPLERS_RESOURCE");
		a_c.addText("1038");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ICC_PROFILE");
		a_c.addText("1039");
		a_c.addText("IMAGE_RESOURCE_BLOCK_WATERMARK");
		a_c.addText("1040");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ICC_UNTAGGED");
		a_c.addText("1041");
		a_c.addText("IMAGE_RESOURCE_BLOCK_EFFECTS_VISIBLE");
		a_c.addText("1042");
		a_c.addText("IMAGE_RESOURCE_BLOCK_SPOT_HALFTONE");
		a_c.addText("1043");
		a_c.addText("IMAGE_RESOURCE_BLOCK_IDS_BASE_VALUE");
		a_c.addText("1044");
		a_c.addText("IMAGE_RESOURCE_BLOCK_UNICODE_ALPHA_NAMES");
		a_c.addText("1045");
		a_c.addText("IMAGE_RESOURCE_BLOCK_INDEXED_COLOUR_TABLE_COUNT");
		a_c.addText("1046");
		a_c.addText("IMAGE_RESOURCE_BLOCK_TRANSPARENT_INDEX");
		a_c.addText("1047");
		a_c.addText("IMAGE_RESOURCE_BLOCK_GLOBAL_ALTITUDE");
		a_c.addText("1049");
		a_c.addText("IMAGE_RESOURCE_BLOCK_SLICES");
		a_c.addText("1050");
		a_c.addText("IMAGE_RESOURCE_BLOCK_WORKFLOW_URL");
		a_c.addText("1051");
		a_c.addText("IMAGE_RESOURCE_BLOCK_JUMP_TO_XPEP");
		a_c.addText("1052");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ALPHA_IDENTIFIERS");
		a_c.addText("1053");
		a_c.addText("IMAGE_RESOURCE_BLOCK_URL_LIST");
		a_c.addText("1054");
		a_c.addText("IMAGE_RESOURCE_BLOCK_VERSION_INFO");
		a_c.addText("1057");
		a_c.addText("IMAGE_RESOURCE_BLOCK_EXIFINFO");
		a_c.addText("1058");
		a_c.addText("IMAGE_RESOURCE_BLOCK_EXIF_INFO2");
		a_c.addText("1059");
		a_c.addText("IMAGE_RESOURCE_BLOCK_XMP");
		a_c.addText("1060");
		a_c.addText("IMAGE_RESOURCE_BLOCK_CAPTION_DIGEST");
		a_c.addText("1061");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PRINT_SCALE");
		a_c.addText("1062");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PIXEL_ASPECT_RATIO");
		a_c.addText("1064");
		a_c.addText("IMAGE_RESOURCE_BLOCK_LAYER_COMPS");
		a_c.addText("1065");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ALTERNATE_DUOTONE_COLORS");
		a_c.addText("1066");
		a_c.addText("IMAGE_RESOURCE_BLOCK_ALTERNATE_SPOT_COLORS");
		a_c.addText("1067");
		a_c.addText("IMAGE_RESOURCE_BLOCK_CLIPPING_PATH_NAME");
		a_c.addText("2999");
		a_c.addText("IMAGE_RESOURCE_BLOCK_PRINT_FLAGS_INFO");
		a_c.addText("10000");
		a_c.addText("IPTC_RECORD_TAG_MARKER");
		a_c.addText("28");
		a_c.addText("IPTC_ENVELOPE_RECORD_NUMBER");
		a_c.addText("1");
		a_c.addText("IPTC_APPLICATION_2_RECORD_NUMBER");
		a_c.addText("2");
		a_c.addText("<init>");
	}

	public void c452_texts(dmClass a_c) {
		a_c.addText("photoshopApp13Data");
		a_c.addText("<init>");
		a_c.addText("element");
		a_c.addText("photoshopApp13Data");
		a_c.addText("records");
		a_c.addText("dump");
	}
	public void c452_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.common.GenericImageMetadata"), dmDependency.Type.ConstructorCall, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.OwnFieldUse, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.MethodCall, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.FieldUse, new int[]{36, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes"), dmDependency.Type.FieldUse, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.MethodCall, new int[]{39, 39});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.LocalVar, new int[]{42, 42});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegPhotoshopMetadata"), m_classes.get("org.apache.commons.imaging.internal.Debug"), dmDependency.Type.MethodCall, 45);
	}

	public void c453_texts(dmClass a_c) {
		a_c.addText("TIFF_TAG_NEW_SUBFILE_TYPE");
		a_c.addText("SUBFILE_TYPE_VALUE_FULL_RESOLUTION_IMAGE");
		a_c.addText("0");
		a_c.addText("SUBFILE_TYPE_VALUE_REDUCED_RESOLUTION_IMAGE");
		a_c.addText("1");
		a_c.addText("SUBFILE_TYPE_VALUE_SINGLE_PAGE_OF_MULTI_PAGE_IMAGE");
		a_c.addText("2");
		a_c.addText("SUBFILE_TYPE_VALUE_SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE");
		a_c.addText("3");
		a_c.addText("SUBFILE_TYPE_VALUE_TRANSPARENCY_MASK");
		a_c.addText("4");
		a_c.addText("SUBFILE_TYPE_VALUE_TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE");
		a_c.addText("5");
		a_c.addText("SUBFILE_TYPE_VALUE_TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE");
		a_c.addText("6");
		a_c.addText("SUBFILE_TYPE_VALUE_TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE");
		a_c.addText("7");
		a_c.addText("TIFF_TAG_SUBFILE_TYPE");
		a_c.addText("OLD_SUBFILE_TYPE_VALUE_FULL_RESOLUTION_IMAGE");
		a_c.addText("1");
		a_c.addText("OLD_SUBFILE_TYPE_VALUE_REDUCED_RESOLUTION_IMAGE");
		a_c.addText("2");
		a_c.addText("OLD_SUBFILE_TYPE_VALUE_SINGLE_PAGE_OF_MULTI_PAGE_IMAGE");
		a_c.addText("3");
		a_c.addText("TIFF_TAG_IMAGE_WIDTH");
		a_c.addText("TIFF_TAG_IMAGE_LENGTH");
		a_c.addText("TIFF_TAG_BITS_PER_SAMPLE");
		a_c.addText("TIFF_TAG_COMPRESSION");
		a_c.addText("COMPRESSION_VALUE_UNCOMPRESSED");
		a_c.addText("1");
		a_c.addText("COMPRESSION_VALUE_CCITT_1D");
		a_c.addText("2");
		a_c.addText("COMPRESSION_VALUE_T4_GROUP_3_FAX");
		a_c.addText("3");
		a_c.addText("COMPRESSION_VALUE_T6_GROUP_4_FAX");
		a_c.addText("4");
		a_c.addText("COMPRESSION_VALUE_LZW");
		a_c.addText("5");
		a_c.addText("COMPRESSION_VALUE_JPEG_OLD_STYLE");
		a_c.addText("6");
		a_c.addText("COMPRESSION_VALUE_JPEG");
		a_c.addText("7");
		a_c.addText("COMPRESSION_VALUE_ADOBE_DEFLATE");
		a_c.addText("8");
		a_c.addText("COMPRESSION_VALUE_JBIG_B_AND_W");
		a_c.addText("9");
		a_c.addText("COMPRESSION_VALUE_JBIG_COLOR");
		a_c.addText("10");
		a_c.addText("COMPRESSION_VALUE_NEXT");
		a_c.addText("32766");
		a_c.addText("COMPRESSION_VALUE_EPSON_ERF_COMPRESSED");
		a_c.addText("32769");
		a_c.addText("COMPRESSION_VALUE_CCIRLEW");
		a_c.addText("32771");
		a_c.addText("COMPRESSION_VALUE_PACK_BITS");
		a_c.addText("32773");
		a_c.addText("COMPRESSION_VALUE_THUNDERSCAN");
		a_c.addText("32809");
		a_c.addText("COMPRESSION_VALUE_IT8CTPAD");
		a_c.addText("32895");
		a_c.addText("COMPRESSION_VALUE_IT8LW");
		a_c.addText("32896");
		a_c.addText("COMPRESSION_VALUE_IT8MP");
		a_c.addText("32897");
		a_c.addText("COMPRESSION_VALUE_IT8BL");
		a_c.addText("32898");
		a_c.addText("COMPRESSION_VALUE_PIXAR_FILM");
		a_c.addText("32908");
		a_c.addText("COMPRESSION_VALUE_PIXAR_LOG");
		a_c.addText("32909");
		a_c.addText("COMPRESSION_VALUE_DEFLATE");
		a_c.addText("32946");
		a_c.addText("COMPRESSION_VALUE_DCS");
		a_c.addText("32947");
		a_c.addText("COMPRESSION_VALUE_JBIG");
		a_c.addText("34661");
		a_c.addText("COMPRESSION_VALUE_SGILOG");
		a_c.addText("34676");
		a_c.addText("COMPRESSION_VALUE_SGILOG_24");
		a_c.addText("34677");
		a_c.addText("COMPRESSION_VALUE_JPEG_2000");
		a_c.addText("34712");
		a_c.addText("COMPRESSION_VALUE_NIKON_NEF_COMPRESSED");
		a_c.addText("34713");
		a_c.addText("COMPRESSION_VALUE_KODAK_DCR_COMPRESSED");
		a_c.addText("65000");
		a_c.addText("COMPRESSION_VALUE_PENTAX_PEF_COMPRESSED");
		a_c.addText("65535");
		a_c.addText("TIFF_TAG_PHOTOMETRIC_INTERPRETATION");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_WHITE_IS_ZERO");
		a_c.addText("0");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_BLACK_IS_ZERO");
		a_c.addText("1");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_RGB");
		a_c.addText("2");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_RGB_PALETTE");
		a_c.addText("3");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_TRANSPARENCY_MASK");
		a_c.addText("4");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_CMYK");
		a_c.addText("5");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_YCB_CR");
		a_c.addText("6");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_CIELAB");
		a_c.addText("8");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_ICCLAB");
		a_c.addText("9");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_ITULAB");
		a_c.addText("10");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_COLOR_FILTER_ARRAY");
		a_c.addText("32803");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_PIXAR_LOG_L");
		a_c.addText("32844");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_PIXAR_LOG_LUV");
		a_c.addText("32845");
		a_c.addText("PHOTOMETRIC_INTERPRETATION_VALUE_LINEAR_RAW");
		a_c.addText("34892");
		a_c.addText("TIFF_TAG_THRESHHOLDING");
		a_c.addText("THRESHOLDING_VALUE_NO_DITHERING_OR_HALFTONING");
		a_c.addText("1");
		a_c.addText("THRESHOLDING_VALUE_ORDERED_DITHER_OR_HALFTONE");
		a_c.addText("2");
		a_c.addText("THRESHOLDING_VALUE_RANDOMIZED_DITHER");
		a_c.addText("3");
		a_c.addText("TIFF_TAG_CELL_WIDTH");
		a_c.addText("TIFF_TAG_CELL_LENGTH");
		a_c.addText("TIFF_TAG_FILL_ORDER");
		a_c.addText("FILL_ORDER_VALUE_NORMAL");
		a_c.addText("1");
		a_c.addText("FILL_ORDER_VALUE_REVERSED");
		a_c.addText("2");
		a_c.addText("TIFF_TAG_DOCUMENT_NAME");
		a_c.addText("TIFF_TAG_IMAGE_DESCRIPTION");
		a_c.addText("TIFF_TAG_MAKE");
		a_c.addText("TIFF_TAG_MODEL");
		a_c.addText("TIFF_TAG_STRIP_OFFSETS");
		a_c.addText("TIFF_TAG_ORIENTATION");
		a_c.addText("ORIENTATION_VALUE_HORIZONTAL_NORMAL");
		a_c.addText("1");
		a_c.addText("ORIENTATION_VALUE_MIRROR_HORIZONTAL");
		a_c.addText("2");
		a_c.addText("ORIENTATION_VALUE_ROTATE_180");
		a_c.addText("3");
		a_c.addText("ORIENTATION_VALUE_MIRROR_VERTICAL");
		a_c.addText("4");
		a_c.addText("ORIENTATION_VALUE_MIRROR_HORIZONTAL_AND_ROTATE_270_CW");
		a_c.addText("5");
		a_c.addText("ORIENTATION_VALUE_ROTATE_90_CW");
		a_c.addText("6");
		a_c.addText("ORIENTATION_VALUE_MIRROR_HORIZONTAL_AND_ROTATE_90_CW");
		a_c.addText("7");
		a_c.addText("ORIENTATION_VALUE_ROTATE_270_CW");
		a_c.addText("8");
		a_c.addText("TIFF_TAG_SAMPLES_PER_PIXEL");
		a_c.addText("TIFF_TAG_ROWS_PER_STRIP");
		a_c.addText("TIFF_TAG_STRIP_BYTE_COUNTS");
		a_c.addText("TIFF_TAG_MIN_SAMPLE_VALUE");
		a_c.addText("TIFF_TAG_MAX_SAMPLE_VALUE");
		a_c.addText("TIFF_TAG_XRESOLUTION");
		a_c.addText("TIFF_TAG_YRESOLUTION");
		a_c.addText("TIFF_TAG_PLANAR_CONFIGURATION");
		a_c.addText("PLANAR_CONFIGURATION_VALUE_CHUNKY");
		a_c.addText("1");
		a_c.addText("PLANAR_CONFIGURATION_VALUE_PLANAR");
		a_c.addText("2");
		a_c.addText("TIFF_TAG_PAGE_NAME");
		a_c.addText("TIFF_TAG_XPOSITION");
		a_c.addText("TIFF_TAG_YPOSITION");
		a_c.addText("TIFF_TAG_FREE_OFFSETS");
		a_c.addText("TIFF_TAG_FREE_BYTE_COUNTS");
		a_c.addText("TIFF_TAG_GRAY_RESPONSE_UNIT");
		a_c.addText("GRAY_RESPONSE_UNIT_VALUE_0_1");
		a_c.addText("1");
		a_c.addText("GRAY_RESPONSE_UNIT_VALUE_0_01");
		a_c.addText("2");
		a_c.addText("GRAY_RESPONSE_UNIT_VALUE_0_001");
		a_c.addText("3");
		a_c.addText("GRAY_RESPONSE_UNIT_VALUE_0_0001");
		a_c.addText("4");
		a_c.addText("GRAY_RESPONSE_UNIT_VALUE_0_00001");
		a_c.addText("5");
		a_c.addText("TIFF_TAG_GRAY_RESPONSE_CURVE");
		a_c.addText("TIFF_TAG_T4_OPTIONS");
		a_c.addText("TIFF_TAG_T6_OPTIONS");
		a_c.addText("TIFF_TAG_RESOLUTION_UNIT");
		a_c.addText("RESOLUTION_UNIT_VALUE_NONE");
		a_c.addText("1");
		a_c.addText("RESOLUTION_UNIT_VALUE_INCHES");
		a_c.addText("2");
		a_c.addText("RESOLUTION_UNIT_VALUE_CM");
		a_c.addText("3");
		a_c.addText("TIFF_TAG_PAGE_NUMBER");
		a_c.addText("TIFF_TAG_TRANSFER_FUNCTION");
		a_c.addText("TIFF_TAG_SOFTWARE");
		a_c.addText("TIFF_TAG_DATE_TIME");
		a_c.addText("TIFF_TAG_ARTIST");
		a_c.addText("TIFF_TAG_HOST_COMPUTER");
		a_c.addText("TIFF_TAG_PREDICTOR");
		a_c.addText("PREDICTOR_VALUE_NONE");
		a_c.addText("1");
		a_c.addText("PREDICTOR_VALUE_HORIZONTAL_DIFFERENCING");
		a_c.addText("2");
		a_c.addText("PREDICTOR_VALUE_FLOATING_POINT_DIFFERENCING");
		a_c.addText("3");
		a_c.addText("TIFF_TAG_WHITE_POINT");
		a_c.addText("TIFF_TAG_PRIMARY_CHROMATICITIES");
		a_c.addText("TIFF_TAG_COLOR_MAP");
		a_c.addText("TIFF_TAG_HALFTONE_HINTS");
		a_c.addText("TIFF_TAG_TILE_WIDTH");
		a_c.addText("TIFF_TAG_TILE_LENGTH");
		a_c.addText("TIFF_TAG_TILE_OFFSETS");
		a_c.addText("TIFF_TAG_TILE_BYTE_COUNTS");
		a_c.addText("TIFF_TAG_INK_SET");
		a_c.addText("INK_SET_VALUE_CMYK");
		a_c.addText("1");
		a_c.addText("INK_SET_VALUE_NOT_CMYK");
		a_c.addText("2");
		a_c.addText("TIFF_TAG_INK_NAMES");
		a_c.addText("TIFF_TAG_NUMBER_OF_INKS");
		a_c.addText("TIFF_TAG_DOT_RANGE");
		a_c.addText("TIFF_TAG_TARGET_PRINTER");
		a_c.addText("TIFF_TAG_EXTRA_SAMPLES");
		a_c.addText("TIFF_TAG_SAMPLE_FORMAT");
		a_c.addText("SAMPLE_FORMAT_VALUE_UNSIGNED_INTEGER");
		a_c.addText("1");
		a_c.addText("SAMPLE_FORMAT_VALUE_TWOS_COMPLEMENT_SIGNED_INTEGER");
		a_c.addText("2");
		a_c.addText("SAMPLE_FORMAT_VALUE_IEEE_FLOATING_POINT");
		a_c.addText("3");
		a_c.addText("SAMPLE_FORMAT_VALUE_UNDEFINED");
		a_c.addText("4");
		a_c.addText("SAMPLE_FORMAT_VALUE_COMPLEX_INTEGER");
		a_c.addText("5");
		a_c.addText("SAMPLE_FORMAT_VALUE_IEEE_FLOATING_POINT_1");
		a_c.addText("6");
		a_c.addText("TIFF_TAG_SMIN_SAMPLE_VALUE");
		a_c.addText("TIFF_TAG_SMAX_SAMPLE_VALUE");
		a_c.addText("TIFF_TAG_TRANSFER_RANGE");
		a_c.addText("TIFF_TAG_JPEG_PROC");
		a_c.addText("JPEGPROC_VALUE_BASELINE");
		a_c.addText("1");
		a_c.addText("JPEGPROC_VALUE_LOSSLESS");
		a_c.addText("14");
		a_c.addText("TIFF_TAG_JPEG_INTERCHANGE_FORMAT");
		a_c.addText("TIFF_TAG_JPEG_INTERCHANGE_FORMAT_LENGTH");
		a_c.addText("TIFF_TAG_JPEG_RESTART_INTERVAL");
		a_c.addText("TIFF_TAG_JPEG_LOSSLESS_PREDICTORS");
		a_c.addText("TIFF_TAG_JPEG_POINT_TRANSFORMS");
		a_c.addText("TIFF_TAG_JPEG_QTABLES");
		a_c.addText("TIFF_TAG_JPEG_DCTABLES");
		a_c.addText("TIFF_TAG_JPEG_ACTABLES");
		a_c.addText("TIFF_TAG_YCBCR_COEFFICIENTS");
		a_c.addText("TIFF_TAG_YCBCR_SUB_SAMPLING");
		a_c.addText("TIFF_TAG_YCBCR_POSITIONING");
		a_c.addText("YCB_CR_POSITIONING_VALUE_CENTERED");
		a_c.addText("1");
		a_c.addText("YCB_CR_POSITIONING_VALUE_CO_SITED");
		a_c.addText("2");
		a_c.addText("TIFF_TAG_REFERENCE_BLACK_WHITE");
		a_c.addText("TIFF_TAG_COPYRIGHT");
		a_c.addText("TIFF_TAG_XMP");
		a_c.addText("TIFF_TAG_UNKNOWN");
		a_c.addText("ALL_TIFF_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("NewSubfileType");
		a_c.addText("254");
		a_c.addText("SubfileType");
		a_c.addText("255");
		a_c.addText("ImageWidth");
		a_c.addText("256");
		a_c.addText("ImageLength");
		a_c.addText("257");
		a_c.addText("BitsPerSample");
		a_c.addText("258");
		a_c.addText("Compression");
		a_c.addText("259");
		a_c.addText("PhotometricInterpretation");
		a_c.addText("262");
		a_c.addText("Threshholding");
		a_c.addText("263");
		a_c.addText("CellWidth");
		a_c.addText("264");
		a_c.addText("CellLength");
		a_c.addText("265");
		a_c.addText("FillOrder");
		a_c.addText("266");
		a_c.addText("DocumentName");
		a_c.addText("269");
		a_c.addText("ImageDescription");
		a_c.addText("270");
		a_c.addText("Make");
		a_c.addText("271");
		a_c.addText("Model");
		a_c.addText("272");
		a_c.addText("StripOffsets");
		a_c.addText("273");
		a_c.addText("Orientation");
		a_c.addText("274");
		a_c.addText("SamplesPerPixel");
		a_c.addText("277");
		a_c.addText("RowsPerStrip");
		a_c.addText("278");
		a_c.addText("StripByteCounts");
		a_c.addText("279");
		a_c.addText("MinSampleValue");
		a_c.addText("280");
		a_c.addText("MaxSampleValue");
		a_c.addText("281");
		a_c.addText("XResolution");
		a_c.addText("282");
		a_c.addText("YResolution");
		a_c.addText("283");
		a_c.addText("PlanarConfiguration");
		a_c.addText("284");
		a_c.addText("PageName");
		a_c.addText("285");
		a_c.addText("XPosition");
		a_c.addText("286");
		a_c.addText("YPosition");
		a_c.addText("287");
		a_c.addText("FreeOffsets");
		a_c.addText("288");
		a_c.addText("FreeByteCounts");
		a_c.addText("289");
		a_c.addText("GrayResponseUnit");
		a_c.addText("290");
		a_c.addText("GrayResponseCurve");
		a_c.addText("291");
		a_c.addText("T4Options");
		a_c.addText("292");
		a_c.addText("T6Options");
		a_c.addText("293");
		a_c.addText("ResolutionUnit");
		a_c.addText("296");
		a_c.addText("PageNumber");
		a_c.addText("297");
		a_c.addText("TransferFunction");
		a_c.addText("301");
		a_c.addText("Software");
		a_c.addText("305");
		a_c.addText("DateTime");
		a_c.addText("306");
		a_c.addText("20");
		a_c.addText("Artist");
		a_c.addText("315");
		a_c.addText("HostComputer");
		a_c.addText("316");
		a_c.addText("Predictor");
		a_c.addText("317");
		a_c.addText("WhitePoint");
		a_c.addText("318");
		a_c.addText("PrimaryChromaticities");
		a_c.addText("319");
		a_c.addText("6");
		a_c.addText("ColorMap");
		a_c.addText("320");
		a_c.addText("HalftoneHints");
		a_c.addText("321");
		a_c.addText("TileWidth");
		a_c.addText("322");
		a_c.addText("TileLength");
		a_c.addText("323");
		a_c.addText("TileOffsets");
		a_c.addText("324");
		a_c.addText("TileByteCounts");
		a_c.addText("325");
		a_c.addText("InkSet");
		a_c.addText("332");
		a_c.addText("InkNames");
		a_c.addText("333");
		a_c.addText("NumberOfInks");
		a_c.addText("334");
		a_c.addText("DotRange");
		a_c.addText("336");
		a_c.addText("TargetPrinter");
		a_c.addText("337");
		a_c.addText("ExtraSamples");
		a_c.addText("338");
		a_c.addText("SampleFormat");
		a_c.addText("339");
		a_c.addText("SMinSampleValue");
		a_c.addText("340");
		a_c.addText("SMaxSampleValue");
		a_c.addText("341");
		a_c.addText("TransferRange");
		a_c.addText("342");
		a_c.addText("6");
		a_c.addText("JPEGProc");
		a_c.addText("512");
		a_c.addText("JPEGInterchangeFormat");
		a_c.addText("513");
		a_c.addText("JPEGInterchangeFormatLength");
		a_c.addText("514");
		a_c.addText("JPEGRestartInterval");
		a_c.addText("515");
		a_c.addText("JPEGLosslessPredictors");
		a_c.addText("517");
		a_c.addText("JPEGPointTransforms");
		a_c.addText("518");
		a_c.addText("JPEGQTables");
		a_c.addText("519");
		a_c.addText("JPEGDCTables");
		a_c.addText("520");
		a_c.addText("JPEGACTables");
		a_c.addText("521");
		a_c.addText("YCbCrCoefficients");
		a_c.addText("529");
		a_c.addText("YCbCrSubSampling");
		a_c.addText("530");
		a_c.addText("YCbCrPositioning");
		a_c.addText("531");
		a_c.addText("ReferenceBlackWhite");
		a_c.addText("532");
		a_c.addText("Copyright");
		a_c.addText("33432");
		a_c.addText("XMP");
		a_c.addText("700");
		a_c.addText("Unknown Tag");
		a_c.addText("75");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("32");
		a_c.addText("33");
		a_c.addText("34");
		a_c.addText("35");
		a_c.addText("36");
		a_c.addText("37");
		a_c.addText("38");
		a_c.addText("39");
		a_c.addText("40");
		a_c.addText("41");
		a_c.addText("42");
		a_c.addText("43");
		a_c.addText("44");
		a_c.addText("45");
		a_c.addText("46");
		a_c.addText("47");
		a_c.addText("48");
		a_c.addText("49");
		a_c.addText("50");
		a_c.addText("51");
		a_c.addText("52");
		a_c.addText("53");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("56");
		a_c.addText("57");
		a_c.addText("58");
		a_c.addText("59");
		a_c.addText("60");
		a_c.addText("61");
		a_c.addText("62");
		a_c.addText("63");
		a_c.addText("64");
		a_c.addText("65");
		a_c.addText("66");
		a_c.addText("67");
		a_c.addText("68");
		a_c.addText("69");
		a_c.addText("70");
		a_c.addText("71");
		a_c.addText("72");
		a_c.addText("73");
		a_c.addText("74");
	}
	public void c453_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{44, 56, 63, 67, 71, 75, 109, 127, 134, 138, 142, 148, 152, 156, 160, 164, 168, 180, 184, 188, 192, 196, 200, 204, 208, 214, 218, 222, 226, 230, 234, 243, 247, 251, 255, 262, 266, 270, 274, 278, 282, 286, 293, 297, 301, 305, 309, 313, 317, 321, 325, 331, 335, 339, 343, 347, 351, 361, 365, 369, 373, 379, 383, 387, 391, 395, 399, 403, 407, 411, 415, 419, 425, 429, 433, 439});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, new int[]{44, 247, 251, 379, 383});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.OwnFieldUse, new int[]{44, 247, 251, 379, 383, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, new int[]{56, 75, 109, 127, 134, 138, 142, 168, 180, 208, 234, 255, 286, 325, 335, 373, 387, 419});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{56, 75, 109, 127, 134, 138, 142, 168, 180, 208, 234, 255, 286, 325, 335, 373, 387, 419, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.ConstructorCall, new int[]{63, 67, 164, 184, 188, 309, 313, 321});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong"), dmDependency.Type.OwnFieldUse, new int[]{63, 67, 164, 184, 188, 309, 313, 321, 443, 443, 443, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.ConstructorCall, new int[]{71, 192, 196, 243, 262, 266, 301, 305, 347, 351, 369, 391, 395, 415});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts"), dmDependency.Type.OwnFieldUse, new int[]{71, 192, 196, 243, 262, 266, 301, 305, 347, 351, 369, 391, 395, 415, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{148, 152, 156, 160, 214, 270, 274, 278, 282, 331, 343, 429});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{148, 152, 156, 160, 214, 270, 274, 278, 282, 331, 343, 429, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, new int[]{200, 204});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{200, 204, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, new int[]{218, 222, 293, 297, 411});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{218, 222, 293, 297, 411, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.ConstructorCall, new int[]{226, 230, 317, 399, 403, 407, 425});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs"), dmDependency.Type.OwnFieldUse, new int[]{226, 230, 317, 399, 403, 407, 425, 443, 443, 443, 443, 443, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.ConstructorCall, 339);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort"), dmDependency.Type.OwnFieldUse, new int[]{339, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), dmDependency.Type.ConstructorCall, new int[]{361, 365});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), dmDependency.Type.OwnFieldUse, new int[]{361, 365, 443, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 433);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{433, 443});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.ConstructorCall, 439);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns"), dmDependency.Type.OwnFieldUse, 439);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 443);
	}

	public void c454_texts(dmClass a_c) {
		a_c.addText("GPS_TAG_GPS_VERSION_ID");
		a_c.addText("GPS_VERSION");
		a_c.addText("GPS_TAG_GPS_LATITUDE_REF");
		a_c.addText("GPS_TAG_GPS_LATITUDE_REF_VALUE_NORTH");
		a_c.addText("N");
		a_c.addText("GPS_TAG_GPS_LATITUDE_REF_VALUE_SOUTH");
		a_c.addText("S");
		a_c.addText("GPS_TAG_GPS_LATITUDE");
		a_c.addText("GPS_TAG_GPS_LONGITUDE_REF");
		a_c.addText("GPS_TAG_GPS_LONGITUDE_REF_VALUE_EAST");
		a_c.addText("E");
		a_c.addText("GPS_TAG_GPS_LONGITUDE_REF_VALUE_WEST");
		a_c.addText("W");
		a_c.addText("GPS_TAG_GPS_LONGITUDE");
		a_c.addText("GPS_TAG_GPS_ALTITUDE_REF");
		a_c.addText("GPS_TAG_GPS_ALTITUDE_REF_VALUE_ABOVE_SEA_LEVEL");
		a_c.addText("0");
		a_c.addText("GPS_TAG_GPS_ALTITUDE_REF_VALUE_BELOW_SEA_LEVEL");
		a_c.addText("1");
		a_c.addText("GPS_TAG_GPS_ALTITUDE");
		a_c.addText("GPS_TAG_GPS_TIME_STAMP");
		a_c.addText("GPS_TAG_GPS_SATELLITES");
		a_c.addText("GPS_TAG_GPS_STATUS");
		a_c.addText("GPS_TAG_GPS_STATUS_VALUE_MEASUREMENT_IN_PROGRESS");
		a_c.addText("A");
		a_c.addText("GPS_TAG_GPS_STATUS_VALUE_MEASUREMENT_INTEROPERABILITY");
		a_c.addText("V");
		a_c.addText("GPS_TAG_GPS_MEASURE_MODE");
		a_c.addText("GPS_TAG_GPS_MEASURE_MODE_VALUE_2_DIMENSIONAL_MEASUREMENT");
		a_c.addText("2");
		a_c.addText("GPS_TAG_GPS_MEASURE_MODE_VALUE_3_DIMENSIONAL_MEASUREMENT");
		a_c.addText("3");
		a_c.addText("GPS_TAG_GPS_DOP");
		a_c.addText("GPS_TAG_GPS_SPEED_REF");
		a_c.addText("GPS_TAG_GPS_SPEED_REF_VALUE_KMPH");
		a_c.addText("K");
		a_c.addText("GPS_TAG_GPS_SPEED_REF_VALUE_MPH");
		a_c.addText("M");
		a_c.addText("GPS_TAG_GPS_SPEED_REF_VALUE_KNOTS");
		a_c.addText("N");
		a_c.addText("GPS_TAG_GPS_SPEED");
		a_c.addText("GPS_TAG_GPS_TRACK_REF");
		a_c.addText("GPS_TAG_GPS_TRACK_REF_VALUE_MAGNETIC_NORTH");
		a_c.addText("M");
		a_c.addText("GPS_TAG_GPS_TRACK_REF_VALUE_TRUE_NORTH");
		a_c.addText("T");
		a_c.addText("GPS_TAG_GPS_TRACK");
		a_c.addText("GPS_TAG_GPS_IMG_DIRECTION_REF");
		a_c.addText("GPS_TAG_GPS_IMG_DIRECTION_REF_VALUE_MAGNETIC_NORTH");
		a_c.addText("M");
		a_c.addText("GPS_TAG_GPS_IMG_DIRECTION_REF_VALUE_TRUE_NORTH");
		a_c.addText("T");
		a_c.addText("GPS_TAG_GPS_IMG_DIRECTION");
		a_c.addText("GPS_TAG_GPS_MAP_DATUM");
		a_c.addText("GPS_TAG_GPS_DEST_LATITUDE_REF");
		a_c.addText("GPS_TAG_GPS_DEST_LATITUDE_REF_VALUE_NORTH");
		a_c.addText("N");
		a_c.addText("GPS_TAG_GPS_DEST_LATITUDE_REF_VALUE_SOUTH");
		a_c.addText("S");
		a_c.addText("GPS_TAG_GPS_DEST_LATITUDE");
		a_c.addText("GPS_TAG_GPS_DEST_LONGITUDE_REF");
		a_c.addText("GPS_TAG_GPS_DEST_LONGITUDE_REF_VALUE_EAST");
		a_c.addText("E");
		a_c.addText("GPS_TAG_GPS_DEST_LONGITUDE_REF_VALUE_WEST");
		a_c.addText("W");
		a_c.addText("GPS_TAG_GPS_DEST_LONGITUDE");
		a_c.addText("GPS_TAG_GPS_DEST_BEARING_REF");
		a_c.addText("GPS_TAG_GPS_DEST_BEARING_REF_VALUE_MAGNETIC_NORTH");
		a_c.addText("M");
		a_c.addText("GPS_TAG_GPS_DEST_BEARING_REF_VALUE_TRUE_NORTH");
		a_c.addText("T");
		a_c.addText("GPS_TAG_GPS_DEST_BEARING");
		a_c.addText("GPS_TAG_GPS_DEST_DISTANCE_REF");
		a_c.addText("GPS_TAG_GPS_DEST_DISTANCE_REF_VALUE_KILOMETERS");
		a_c.addText("K");
		a_c.addText("GPS_TAG_GPS_DEST_DISTANCE_REF_VALUE_MILES");
		a_c.addText("M");
		a_c.addText("GPS_TAG_GPS_DEST_DISTANCE_REF_VALUE_NAUTICAL_MILES");
		a_c.addText("N");
		a_c.addText("GPS_TAG_GPS_DEST_DISTANCE");
		a_c.addText("GPS_TAG_GPS_PROCESSING_METHOD");
		a_c.addText("GPS_TAG_GPS_AREA_INFORMATION");
		a_c.addText("GPS_TAG_GPS_DATE_STAMP");
		a_c.addText("GPS_TAG_GPS_DIFFERENTIAL");
		a_c.addText("GPS_TAG_GPS_DIFFERENTIAL_VALUE_NO_CORRECTION");
		a_c.addText("0");
		a_c.addText("GPS_TAG_GPS_DIFFERENTIAL_VALUE_DIFFERENTIAL_CORRECTED");
		a_c.addText("1");
		a_c.addText("ALL_GPS_TAGS");
		a_c.addText("gpsVersion");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("GPSVersionID");
		a_c.addText("8");
		a_c.addText("GPSLatitudeRef");
		a_c.addText("GPSLatitude");
		a_c.addText("GPSLongitudeRef");
		a_c.addText("GPSLongitude");
		a_c.addText("GPSAltitudeRef");
		a_c.addText("GPSAltitude");
		a_c.addText("6");
		a_c.addText("GPSTimeStamp");
		a_c.addText("7");
		a_c.addText("GPSSatellites");
		a_c.addText("8");
		a_c.addText("GPSStatus");
		a_c.addText("9");
		a_c.addText("GPSMeasureMode");
		a_c.addText("10");
		a_c.addText("GPSDOP");
		a_c.addText("11");
		a_c.addText("GPSSpeedRef");
		a_c.addText("12");
		a_c.addText("GPSSpeed");
		a_c.addText("13");
		a_c.addText("GPSTrackRef");
		a_c.addText("14");
		a_c.addText("GPSTrack");
		a_c.addText("15");
		a_c.addText("GPSImgDirectionRef");
		a_c.addText("16");
		a_c.addText("GPSImgDirection");
		a_c.addText("17");
		a_c.addText("GPSMapDatum");
		a_c.addText("18");
		a_c.addText("GPSDestLatitudeRef");
		a_c.addText("19");
		a_c.addText("GPSDestLatitude");
		a_c.addText("20");
		a_c.addText("GPSDestLongitudeRef");
		a_c.addText("21");
		a_c.addText("GPSDestLongitude");
		a_c.addText("22");
		a_c.addText("GPSDestBearingRef");
		a_c.addText("23");
		a_c.addText("GPSDestBearing");
		a_c.addText("24");
		a_c.addText("GPSDestDistanceRef");
		a_c.addText("25");
		a_c.addText("GPSDestDistance");
		a_c.addText("26");
		a_c.addText("GPSProcessingMethod");
		a_c.addText("27");
		a_c.addText("GPSAreaInformation");
		a_c.addText("28");
		a_c.addText("GPSDateStamp");
		a_c.addText("29");
		a_c.addText("11");
		a_c.addText("GPSDifferential");
		a_c.addText("30");
		a_c.addText("31");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("11");
		a_c.addText("12");
		a_c.addText("13");
		a_c.addText("14");
		a_c.addText("15");
		a_c.addText("16");
		a_c.addText("17");
		a_c.addText("18");
		a_c.addText("19");
		a_c.addText("20");
		a_c.addText("21");
		a_c.addText("22");
		a_c.addText("23");
		a_c.addText("24");
		a_c.addText("25");
		a_c.addText("26");
		a_c.addText("27");
		a_c.addText("28");
		a_c.addText("29");
		a_c.addText("30");
	}
	public void c454_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.Field, new int[]{1, 1, 1, 1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("byte"), dmDependency.Type.Returns, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{41, 38});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("byte"), dmDependency.Type.MethodCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{34, 45, 52, 57, 64, 69, 76, 81, 86, 91, 98, 105, 110, 118, 123, 130, 135, 142, 147, 152, 159, 164, 171, 176, 183, 188, 196, 201, 206, 211, 216});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.ConstructorCall, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes"), dmDependency.Type.OwnFieldUse, new int[]{34, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{45, 57, 86, 91, 98, 110, 123, 135, 147, 152, 164, 176, 188, 211});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{45, 57, 86, 91, 98, 110, 123, 135, 147, 152, 164, 176, 188, 211, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.ConstructorCall, new int[]{52, 64, 81, 159, 171});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals"), dmDependency.Type.OwnFieldUse, new int[]{52, 64, 81, 159, 171, 224, 224, 224, 224, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.ConstructorCall, 69);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte"), dmDependency.Type.OwnFieldUse, new int[]{69, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.ConstructorCall, new int[]{76, 105, 118, 130, 142, 183, 196});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational"), dmDependency.Type.OwnFieldUse, new int[]{76, 105, 118, 130, 142, 183, 196, 224, 224, 224, 224, 224, 224, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.ConstructorCall, new int[]{201, 206});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText"), dmDependency.Type.OwnFieldUse, new int[]{201, 206, 224, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.ConstructorCall, 216);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort"), dmDependency.Type.OwnFieldUse, new int[]{216, 224});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 224);
	}

	public void c455_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("parseData");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("data");
		a_c.addText("bi");
		a_c.addText("imageContents");
		a_c.addText("buffer");
		a_c.addText("header");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("getRGB");
		a_c.addText("getBasicChannelsCount");
	}
	public void c455_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 25);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, new int[]{25, 40});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("java.awt.image.WritableRaster"), dmDependency.Type.MethodCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.FieldUse, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.FieldUse, new int[]{31, 32});
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.MethodCall, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("java.awt.image.DataBuffer"), dmDependency.Type.LocalVar, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdHeaderInfo"), dmDependency.Type.LocalVar, 40);
	}

	public void c456_texts(dmClass a_c) {
		a_c.addText("coversSingleEntry");
		a_c.addText("isCovered");
		a_c.addText("getARGB");
		a_c.addText("getColor");
		a_c.addText("getLowerBound");
		a_c.addText("getUpperBound");
	}
	public void c456_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntry"), m_classes.get("java.awt.Color"), dmDependency.Type.Returns, 1);
	}

	public void c457_texts(dmClass a_c) {
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("rawbits");
		a_c.addText("<init>");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("rawbits");
		a_c.addText("hasAlpha");
		a_c.addText("getNumComponents");
		a_c.addText("getBitDepth");
		a_c.addText("getImageType");
		a_c.addText("getImageTypeDescription");
		a_c.addText("getMIMEType");
		a_c.addText("getColorType");
		a_c.addText("getRGB");
		a_c.addText("getRGB");
		a_c.addText("newline");
		a_c.addText("readSample");
		a_c.addText("PNM: Unexpected EOF");
		a_c.addText("8");
		a_c.addText("nextByte");
		a_c.addText("i");
		a_c.addText("is");
		a_c.addText("bytesPerSample");
		a_c.addText("sample");
		a_c.addText("scaleSample");
		a_c.addText("Negative pixel values are invalid in PNM files");
		a_c.addText("0.5");
		a_c.addText("sample");
		a_c.addText("scale");
		a_c.addText("max");
		a_c.addText("readImage");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("wsr");
		a_c.addText("rgb");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageBuilder");
		a_c.addText("is");
	}
	public void c457_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Returns, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{35, 35, 57, 69, 80});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.Argument, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, new int[]{35, 57, 80});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 62);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("java.io.IOException"), dmDependency.Type.ConstructorCall, new int[]{64, 75});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.Argument, 80);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.ConstructorCall, 92);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, new int[]{98, 108});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.LocalVar, 120);
	}

	public void c458_texts(dmClass a_c) {
		a_c.addText("performNextMedianCut");
	}
	public void c458_deps() {
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCut"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.palette.MedianCut"), m_classes.get("org.apache.commons.imaging.palette.ColorGroup"), dmDependency.Type.Argument, 1);
	}

	public void c459_texts(dmClass a_c) {
		a_c.addText("EXIF_TAG_OCE_SCANJOB_DESCRIPTION");
		a_c.addText("EXIF_TAG_OCE_APPLICATION_SELECTOR");
		a_c.addText("EXIF_TAG_OCE_IDENTIFICATION_NUMBER");
		a_c.addText("EXIF_TAG_OCE_IMAGE_LOGIC_CHARACTERISTICS");
		a_c.addText("ALL_OCE_SCANJOB_TAGS");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("Oce Scanjob Description");
		a_c.addText("50215");
		a_c.addText("Oce Application Selector");
		a_c.addText("50216");
		a_c.addText("Oce Identification Number");
		a_c.addText("50217");
		a_c.addText("Oce ImageLogic Characteristics");
		a_c.addText("50218");
	}
	public void c459_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.FieldUse, new int[]{33, 37, 41, 45});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.ConstructorCall, new int[]{33, 37, 41, 45});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii"), dmDependency.Type.OwnFieldUse, new int[]{33, 37, 41, 45, 49, 49, 49, 49});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 49);
	}

	public void c460_texts(dmClass a_c) {
		a_c.addText("DEFAULT_TIFF_BYTE_ORDER");
		a_c.addText("TIFF_HEADER_SIZE");
		a_c.addText("8");
		a_c.addText("TIFF_DIRECTORY_HEADER_LENGTH");
		a_c.addText("2");
		a_c.addText("TIFF_DIRECTORY_FOOTER_LENGTH");
		a_c.addText("4");
		a_c.addText("TIFF_ENTRY_LENGTH");
		a_c.addText("12");
		a_c.addText("TIFF_ENTRY_MAX_VALUE_LENGTH");
		a_c.addText("4");
		a_c.addText("TIFF_COMPRESSION_UNCOMPRESSED_1");
		a_c.addText("1");
		a_c.addText("TIFF_COMPRESSION_UNCOMPRESSED");
		a_c.addText("1");
		a_c.addText("TIFF_COMPRESSION_CCITT_1D");
		a_c.addText("2");
		a_c.addText("TIFF_COMPRESSION_CCITT_GROUP_3");
		a_c.addText("3");
		a_c.addText("TIFF_COMPRESSION_CCITT_GROUP_4");
		a_c.addText("4");
		a_c.addText("TIFF_COMPRESSION_LZW");
		a_c.addText("5");
		a_c.addText("TIFF_COMPRESSION_JPEG");
		a_c.addText("6");
		a_c.addText("TIFF_COMPRESSION_UNCOMPRESSED_2");
		a_c.addText("32771");
		a_c.addText("TIFF_COMPRESSION_PACKBITS");
		a_c.addText("32773");
		a_c.addText("TIFF_COMPRESSION_DEFLATE_PKZIP");
		a_c.addText("32946");
		a_c.addText("TIFF_COMPRESSION_DEFLATE_ADOBE");
		a_c.addText("8");
		a_c.addText("PARAM_KEY_T4_OPTIONS");
		a_c.addText("T4_OPTIONS");
		a_c.addText("PARAM_KEY_T6_OPTIONS");
		a_c.addText("T6_OPTIONS");
		a_c.addText("TIFF_FLAG_T4_OPTIONS_2D");
		a_c.addText("1");
		a_c.addText("TIFF_FLAG_T4_OPTIONS_UNCOMPRESSED_MODE");
		a_c.addText("2");
		a_c.addText("TIFF_FLAG_T4_OPTIONS_FILL");
		a_c.addText("4");
		a_c.addText("TIFF_FLAG_T6_OPTIONS_UNCOMPRESSED_MODE");
		a_c.addText("2");
		a_c.addText("PARAM_KEY_SUBIMAGE_X");
		a_c.addText("SUBIMAGE_X");
		a_c.addText("PARAM_KEY_SUBIMAGE_Y");
		a_c.addText("SUBIMAGE_Y");
		a_c.addText("PARAM_KEY_SUBIMAGE_WIDTH");
		a_c.addText("SUBIMAGE_WIDTH");
		a_c.addText("PARAM_KEY_SUBIMAGE_HEIGHT");
		a_c.addText("SUBIMAGE_HEIGHT");
		a_c.addText("PARAM_KEY_CUSTOM_PHOTOMETRIC_INTERPRETER");
		a_c.addText("CUSTOM_PHOTOMETRIC_INTERPRETER");
		a_c.addText("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
		a_c.addText("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
		a_c.addText("TIFF_LZW_COMPRESSION_BLOCK_SIZE_MEDIUM");
		a_c.addText("32768");
		a_c.addText("TIFF_LZW_COMPRESSION_BLOCK_SIZE_LARGE");
		a_c.addText("65536");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
	}
	public void c460_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffConstants"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffConstants"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 23);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffConstants"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, 23);
	}

	public void c462_texts(dmClass a_c) {
		a_c.addText("byteOrder");
		a_c.addText("<init>");
		a_c.addText("<init>");
		a_c.addText("byteOrder");
		a_c.addText("imageDataPaddingLength");
		a_c.addText("dataLength");
		a_c.addText("write");
		a_c.addText("validateDirectories");
		a_c.addText("No directories.");
		a_c.addText("More than one EXIF directory.");
		a_c.addText("More than one GPS directory.");
		a_c.addText("More than one Interoperability directory.");
		a_c.addText("Unknown directory: ");
		a_c.addText("More than one directory with index: ");
		a_c.addText(".");
		a_c.addText("Tag (");
		a_c.addText(") appears twice in directory.");
		a_c.addText("More than one Exif directory offset field.");
		a_c.addText("More than one Interoperability directory offset field.");
		a_c.addText("More than one GPS directory offset field.");
		a_c.addText("Missing root directory.");
		a_c.addText("Missing directory: ");
		a_c.addText(".");
		a_c.addText("Output set has Interoperability Directory Offset field, but no Interoperability Directory");
		a_c.addText("Output set has Exif Directory Offset field, but no Exif Directory");
		a_c.addText("Output set has GPS Directory Offset field, but no GPS Directory");
		a_c.addText("field");
		a_c.addText("dirType");
		a_c.addText("fieldTags");
		a_c.addText("fields");
		a_c.addText("directory");
		a_c.addText("index");
		a_c.addText("directory");
		a_c.addText("i");
		a_c.addText("outputSet");
		a_c.addText("directories");
		a_c.addText("exifDirectory");
		a_c.addText("gpsDirectory");
		a_c.addText("interoperabilityDirectory");
		a_c.addText("exifDirectoryOffsetField");
		a_c.addText("gpsDirectoryOffsetField");
		a_c.addText("interoperabilityDirectoryOffsetField");
		a_c.addText("directoryIndices");
		a_c.addText("directoryTypeMap");
		a_c.addText("previousDirectory");
		a_c.addText("rootDirectory");
		a_c.addText("result");
		a_c.addText("writeImage");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("EXIF");
		a_c.addText("EXIF");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("XMP_XML");
		a_c.addText("PIXEL_DENSITY");
		a_c.addText("72.0");
		a_c.addText("72.0");
		a_c.addText("64000");
		a_c.addText("COMPRESSION");
		a_c.addText("COMPRESSION");
		a_c.addText("Invalid compression parameter, must be numeric: ");
		a_c.addText("COMPRESSION");
		a_c.addText("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
		a_c.addText("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
		a_c.addText("Invalid compression block-size parameter: ");
		a_c.addText("8000");
		a_c.addText("Block size parameter ");
		a_c.addText(" is less than 8000 minimum");
		a_c.addText("8");
		a_c.addText("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
		a_c.addText("T4_OPTIONS");
		a_c.addText("T6_OPTIONS");
		a_c.addText("Unknown parameter: ");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("T4_OPTIONS");
		a_c.addText("7");
		a_c.addText("T.4 compression with the uncompressed mode extension is not yet supported");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("T6_OPTIONS");
		a_c.addText("T.6 compression with the uncompressed mode extension is not yet supported");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("32773");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("Invalid compression parameter (Only CCITT 1D/Group 3/Group 4, LZW, Packbits, Zlib Deflate and uncompressed supported).");
		a_c.addText("10");
		a_c.addText("10");
		a_c.addText("9");
		a_c.addText("9");
		a_c.addText("10");
		a_c.addText("bValue");
		a_c.addText("stripSizeInBytes");
		a_c.addText("value");
		a_c.addText("firstKey");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("photometricInterpretation");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("t4Parameter");
		a_c.addText("is2D");
		a_c.addText("usesUncompressedMode");
		a_c.addText("hasFillBitsBeforeEOL");
		a_c.addText("i");
		a_c.addText("t6Parameter");
		a_c.addText("usesUncompressedMode");
		a_c.addText("i");
		a_c.addText("uncompressed");
		a_c.addText("LZW_MINIMUM_CODE_SIZE");
		a_c.addText("compressor");
		a_c.addText("compressed");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("i");
		a_c.addText("xmpXmlBytes");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("userExif");
		a_c.addText("xmpXml");
		a_c.addText("pixelDensity");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("compression");
		a_c.addText("stripSizeInBits");
		a_c.addText("rawParams");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("photometricInterpretation");
		a_c.addText("rowsPerStrip");
		a_c.addText("strips");
		a_c.addText("t4Options");
		a_c.addText("t6Options");
		a_c.addText("imageData");
		a_c.addText("outputSet");
		a_c.addText("directory");
		a_c.addText("tiffImageData");
		a_c.addText("combineUserExifIntoFinalExif");
		a_c.addText("userField");
		a_c.addText("outputDirectory");
		a_c.addText("location");
		a_c.addText("userDirectory");
		a_c.addText("userExif");
		a_c.addText("outputSet");
		a_c.addText("outputDirectories");
		a_c.addText("getStrips");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("16");
		a_c.addText("255");
		a_c.addText("8");
		a_c.addText("255");
		a_c.addText("127");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("sample");
		a_c.addText("rgb");
		a_c.addText("red");
		a_c.addText("green");
		a_c.addText("blue");
		a_c.addText("x");
		a_c.addText("bitCache");
		a_c.addText("bitsInCache");
		a_c.addText("rowsInStrip");
		a_c.addText("bitsInRow");
		a_c.addText("bytesPerRow");
		a_c.addText("bytesInStrip");
		a_c.addText("uncompressed");
		a_c.addText("counter");
		a_c.addText("y");
		a_c.addText("stop");
		a_c.addText("i");
		a_c.addText("remainingRows");
		a_c.addText("src");
		a_c.addText("samplesPerPixel");
		a_c.addText("bitsPerSample");
		a_c.addText("rowsPerStrip");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("stripCount");
		a_c.addText("result");
		a_c.addText("writeImageFileHeader");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("bos");
		a_c.addText("offsetToFirstIFD");
		a_c.addText("writeImageFileHeader");
		a_c.addText("73");
		a_c.addText("73");
		a_c.addText("77");
		a_c.addText("77");
		a_c.addText("42");
		a_c.addText("bos");
		a_c.addText("offsetToFirstIFD");
	}
	public void c462_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffConstants"), dmDependency.Type.FieldUse, 65);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.OwnFieldUse, new int[]{65, 69, 201, 215, 233, 247, 432, 618});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 66);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{73, 255, 606, 614});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, new int[]{73, 73, 255, 516});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, new int[]{73, 255});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.Argument, new int[]{73, 73, 516, 516});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.Returns, 73);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.MethodCall, new int[]{81, 211, 433, 520, 522, 526});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, new int[]{84, 106, 114, 122, 128, 133, 146, 153, 159, 165, 175, 186, 207, 229, 243, 296, 307, 312, 325, 370, 393, 423});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.FieldUse, new int[]{97, 521, 523});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.MethodCall, new int[]{142, 192, 219, 235, 249, 439, 440, 441, 443, 445, 449, 453, 469, 472, 474, 476, 479, 481, 483, 486, 488, 490, 494, 497, 502, 509, 529, 530, 531});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.FieldUse, new int[]{144, 145, 149, 151, 157, 163, 530});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.MethodCall, 146);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants"), dmDependency.Type.FieldUse, new int[]{151, 157, 163, 215, 233, 247});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), dmDependency.Type.FieldUse, new int[]{151, 157, 163});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.ConstructorCall, 201);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.MethodCall, new int[]{216, 233, 247});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.MethodCall, new int[]{222, 238, 252});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputField"), dmDependency.Type.LocalVar, new int[]{255, 255, 255, 255, 255, 536});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory"), dmDependency.Type.LocalVar, new int[]{255, 255, 255, 255, 255, 255, 255, 255, 255, 516, 536, 536, 536});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary"), dmDependency.Type.LocalVar, 255);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, new int[]{255, 536});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.MethodCall, new int[]{284, 471, 475, 477, 478, 482, 484, 489, 491});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.MethodCall, new int[]{287, 288, 540, 541, 569});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression"), dmDependency.Type.MethodCall, new int[]{358, 376, 380, 397});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.ConstructorCall, 402);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.PackBits"), dmDependency.Type.MethodCall, 402);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, new int[]{410, 618});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.ConstructorCall, 410);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.MethodCall, 412);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.ZlibDeflate"), dmDependency.Type.MethodCall, 418);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.ConstructorCall, 427);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Data"), dmDependency.Type.ConstructorCall, 429);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.ConstructorCall, 432);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants"), dmDependency.Type.FieldUse, new int[]{439, 440, 441, 443, 445, 449, 453, 469, 472, 474, 476, 479, 481, 483, 486, 488, 490, 494, 497, 502});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.MethodCall, new int[]{475, 477, 482, 484, 489, 491});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, 501);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips"), dmDependency.Type.ConstructorCall, 507);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{516, 516, 516, 516, 606, 606});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.mylzw.MyLzwCompressor"), dmDependency.Type.LocalVar, 516);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.PixelDensity"), dmDependency.Type.LocalVar, 516);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffElement$DataElement"), dmDependency.Type.LocalVar, 516);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet"), dmDependency.Type.LocalVar, 516);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffImageData"), dmDependency.Type.LocalVar, 516);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("byte"), dmDependency.Type.Returns, 536);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("byte"), dmDependency.Type.ConstructorCall, 547);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.Argument, new int[]{606, 614});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("long"), dmDependency.Type.Argument, 614);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase"), m_classes.get("org.apache.commons.imaging.common.BinaryOutputStream"), dmDependency.Type.MethodCall, new int[]{619, 620, 622, 623, 626, 628});
	}

	public void c463_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getRGB");
		a_c.addText("data");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("imageContents");
		a_c.addText("getBasicChannelsCount");
	}
	public void c463_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub"), m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParser"), dmDependency.Type.ConstructorCall, 21);
		d(m_classes.get("org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub"), m_classes.get("org.apache.commons.imaging.formats.psd.PsdImageContents"), dmDependency.Type.Argument, 21);
	}

	public void c464_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c464_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("byte"), dmDependency.Type.Returns, new int[]{29, 32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{29, 32, 36});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("short"), dmDependency.Type.Argument, 29);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{32, 36, 40});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational"), m_classes.get("org.apache.commons.imaging.common.RationalNumber"), dmDependency.Type.Argument, 36);
	}

	public void c465_texts(dmClass a_c) {
		a_c.addText("textChunks");
		a_c.addText("physicalScale");
		a_c.addText("<init>");
		a_c.addText("formatDetails");
		a_c.addText("bitsPerPixel");
		a_c.addText("comments");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("height");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("width");
		a_c.addText("progressive");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("textChunks");
		a_c.addText("physicalScale");
		a_c.addText("getTextChunks");
		a_c.addText("getPhysicalScale");
	}
	public void c465_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 37);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.OwnFieldUse, new int[]{44, 58});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.LocalVar, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.LocalVar, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Returns, 45);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngImageInfo"), m_classes.get("org.apache.commons.imaging.formats.png.PhysicalScale"), dmDependency.Type.Returns, 48);
	}

	public void c466_texts(dmClass a_c) {
		a_c.addText("DCT_SCALING_FACTORS");
		a_c.addText("IDCT_SCALING_FACTORS");
		a_c.addText("A1");
		a_c.addText("A2");
		a_c.addText("A3");
		a_c.addText("A4");
		a_c.addText("A5");
		a_c.addText("C2");
		a_c.addText("C4");
		a_c.addText("C6");
		a_c.addText("Q");
		a_c.addText("R");
		a_c.addText("<init>");
		a_c.addText("scaleQuantizationVector");
		a_c.addText("8");
		a_c.addText("x");
		a_c.addText("vector");
		a_c.addText("scaleDequantizationVector");
		a_c.addText("8");
		a_c.addText("x");
		a_c.addText("vector");
		a_c.addText("scaleQuantizationMatrix");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("matrix");
		a_c.addText("scaleDequantizationMatrix");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("x");
		a_c.addText("y");
		a_c.addText("matrix");
		a_c.addText("forwardDCT8");
		a_c.addText("7");
		a_c.addText("6");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("vector");
		a_c.addText("a00");
		a_c.addText("a10");
		a_c.addText("a20");
		a_c.addText("a30");
		a_c.addText("a40");
		a_c.addText("a50");
		a_c.addText("a60");
		a_c.addText("a70");
		a_c.addText("a01");
		a_c.addText("a11");
		a_c.addText("a21");
		a_c.addText("a31");
		a_c.addText("neg_a41");
		a_c.addText("a51");
		a_c.addText("a61");
		a_c.addText("a22");
		a_c.addText("a23");
		a_c.addText("mul5");
		a_c.addText("a43");
		a_c.addText("a53");
		a_c.addText("a63");
		a_c.addText("a54");
		a_c.addText("a74");
		a_c.addText("forwardDCT8x8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("8");
		a_c.addText("48");
		a_c.addText("16");
		a_c.addText("40");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("16");
		a_c.addText("40");
		a_c.addText("8");
		a_c.addText("48");
		a_c.addText("56");
		a_c.addText("32");
		a_c.addText("16");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("24");
		a_c.addText("a00");
		a_c.addText("a10");
		a_c.addText("a20");
		a_c.addText("a30");
		a_c.addText("a40");
		a_c.addText("a50");
		a_c.addText("a60");
		a_c.addText("a70");
		a_c.addText("a01");
		a_c.addText("a11");
		a_c.addText("a21");
		a_c.addText("a31");
		a_c.addText("neg_a41");
		a_c.addText("a51");
		a_c.addText("a61");
		a_c.addText("a22");
		a_c.addText("a23");
		a_c.addText("mul5");
		a_c.addText("a43");
		a_c.addText("a53");
		a_c.addText("a63");
		a_c.addText("a54");
		a_c.addText("a74");
		a_c.addText("i");
		a_c.addText("a00");
		a_c.addText("a10");
		a_c.addText("a20");
		a_c.addText("a30");
		a_c.addText("a40");
		a_c.addText("a50");
		a_c.addText("a60");
		a_c.addText("a70");
		a_c.addText("a01");
		a_c.addText("a11");
		a_c.addText("a21");
		a_c.addText("a31");
		a_c.addText("neg_a41");
		a_c.addText("a51");
		a_c.addText("a61");
		a_c.addText("a22");
		a_c.addText("a23");
		a_c.addText("mul5");
		a_c.addText("a43");
		a_c.addText("a53");
		a_c.addText("a63");
		a_c.addText("a54");
		a_c.addText("a74");
		a_c.addText("i");
		a_c.addText("matrix");
		a_c.addText("inverseDCT8");
		a_c.addText("6");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("7");
		a_c.addText("6");
		a_c.addText("7");
		a_c.addText("vector");
		a_c.addText("a2");
		a_c.addText("a3");
		a_c.addText("a4");
		a_c.addText("tmp1");
		a_c.addText("tmp2");
		a_c.addText("a5");
		a_c.addText("a6");
		a_c.addText("a7");
		a_c.addText("tmp4");
		a_c.addText("neg_b4");
		a_c.addText("b6");
		a_c.addText("b2");
		a_c.addText("b5");
		a_c.addText("tmp3");
		a_c.addText("n0");
		a_c.addText("n1");
		a_c.addText("n2");
		a_c.addText("n3");
		a_c.addText("neg_n5");
		a_c.addText("m3");
		a_c.addText("m4");
		a_c.addText("m5");
		a_c.addText("m6");
		a_c.addText("neg_m7");
		a_c.addText("inverseDCT8x8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8");
		a_c.addText("7");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("48");
		a_c.addText("16");
		a_c.addText("48");
		a_c.addText("40");
		a_c.addText("24");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("24");
		a_c.addText("40");
		a_c.addText("8");
		a_c.addText("56");
		a_c.addText("32");
		a_c.addText("32");
		a_c.addText("8");
		a_c.addText("16");
		a_c.addText("24");
		a_c.addText("32");
		a_c.addText("40");
		a_c.addText("48");
		a_c.addText("56");
		a_c.addText("a2");
		a_c.addText("a3");
		a_c.addText("a4");
		a_c.addText("tmp1");
		a_c.addText("tmp2");
		a_c.addText("a5");
		a_c.addText("a6");
		a_c.addText("a7");
		a_c.addText("tmp4");
		a_c.addText("neg_b4");
		a_c.addText("b6");
		a_c.addText("b2");
		a_c.addText("b5");
		a_c.addText("tmp3");
		a_c.addText("n0");
		a_c.addText("n1");
		a_c.addText("n2");
		a_c.addText("n3");
		a_c.addText("neg_n5");
		a_c.addText("m3");
		a_c.addText("m4");
		a_c.addText("m5");
		a_c.addText("m6");
		a_c.addText("neg_m7");
		a_c.addText("i");
		a_c.addText("a2");
		a_c.addText("a3");
		a_c.addText("a4");
		a_c.addText("tmp1");
		a_c.addText("tmp2");
		a_c.addText("a5");
		a_c.addText("a6");
		a_c.addText("a7");
		a_c.addText("tmp4");
		a_c.addText("neg_b4");
		a_c.addText("b6");
		a_c.addText("b2");
		a_c.addText("b5");
		a_c.addText("tmp3");
		a_c.addText("n0");
		a_c.addText("n1");
		a_c.addText("n2");
		a_c.addText("n3");
		a_c.addText("neg_n5");
		a_c.addText("m3");
		a_c.addText("m4");
		a_c.addText("m5");
		a_c.addText("m6");
		a_c.addText("neg_m7");
		a_c.addText("i");
		a_c.addText("matrix");
		a_c.addText("<clinit>");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("0.5");
		a_c.addText("2.0");
		a_c.addText("0.25");
		a_c.addText("0.19634954084936207");
		a_c.addText("0.25");
		a_c.addText("0.39269908169872414");
		a_c.addText("0.25");
		a_c.addText("0.5890486225480862");
		a_c.addText("0.25");
		a_c.addText("0.7853981633974483");
		a_c.addText("0.25");
		a_c.addText("0.9817477042468103");
		a_c.addText("6");
		a_c.addText("0.25");
		a_c.addText("1.1780972450961724");
		a_c.addText("7");
		a_c.addText("0.25");
		a_c.addText("1.3744467859455345");
		a_c.addText("8");
		a_c.addText("6");
		a_c.addText("8.0");
		a_c.addText("2.0");
		a_c.addText("0.0625");
		a_c.addText("4.0");
		a_c.addText("0.19634954084936207");
		a_c.addText("0.125");
		a_c.addText("4.0");
		a_c.addText("0.39269908169872414");
		a_c.addText("0.125");
		a_c.addText("4.0");
		a_c.addText("0.5890486225480862");
		a_c.addText("0.125");
		a_c.addText("4.0");
		a_c.addText("0.7853981633974483");
		a_c.addText("0.125");
		a_c.addText("4.0");
		a_c.addText("0.9817477042468103");
		a_c.addText("0.125");
		a_c.addText("6");
		a_c.addText("4.0");
		a_c.addText("1.1780972450961724");
		a_c.addText("0.125");
		a_c.addText("7");
		a_c.addText("4.0");
		a_c.addText("1.3744467859455345");
		a_c.addText("0.125");
		a_c.addText("0.7853981633974483");
		a_c.addText("0.39269908169872414");
		a_c.addText("1.1780972450961724");
		a_c.addText("0.39269908169872414");
		a_c.addText("1.1780972450961724");
		a_c.addText("1.1780972450961724");
		a_c.addText("2.0");
		a_c.addText("0.39269908169872414");
		a_c.addText("2.0");
		a_c.addText("0.7853981633974483");
		a_c.addText("2.0");
		a_c.addText("1.1780972450961724");
	}

	public void c467_texts(dmClass a_c) {
		a_c.addText("keyword");
		a_c.addText("text");
		a_c.addText("<init>");
		a_c.addText("PNG zTXt chunk keyword is unterminated.");
		a_c.addText("PNG zTXt chunk has unexpected compression method: ");
		a_c.addText("8");
		a_c.addText("length");
		a_c.addText("chunkType");
		a_c.addText("crc");
		a_c.addText("bytes");
		a_c.addText("index");
		a_c.addText("compressionMethod");
		a_c.addText("compressedTextLength");
		a_c.addText("compressedText");
		a_c.addText("getKeyword");
		a_c.addText("getText");
		a_c.addText("getContents");
	}
	public void c467_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngTextChunk"), dmDependency.Type.ConstructorCall, 38);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{40, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{42, 51});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{46, 60});
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 60);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("byte"), dmDependency.Type.LocalVar, 61);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText"), dmDependency.Type.Returns, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.png.chunks.PngChunkZtxt"), m_classes.get("org.apache.commons.imaging.formats.png.PngText$Ztxt"), dmDependency.Type.ConstructorCall, 81);
	}

	public void c468_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
	}
	public void c468_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 25);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 25);
	}

	public void c469_texts(dmClass a_c) {
		a_c.addText("iptcType");
		a_c.addText("value");
		a_c.addText("COMPARATOR");
		a_c.addText("<init>");
		a_c.addText("iptcType");
		a_c.addText("value");
		a_c.addText("getValue");
		a_c.addText("getIptcTypeName");
		a_c.addText("lambda$static$0");
		a_c.addText("e1");
		a_c.addText("e2");
		a_c.addText("<clinit>");
	}
	public void c469_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.OwnFieldUse, new int[]{30, 39, 27, 27});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcType"), dmDependency.Type.MethodCall, new int[]{39, 27, 27});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord"), dmDependency.Type.Argument, new int[]{39, 39});
	}

	public void c470_texts(dmClass a_c) {
		a_c.addText("DEFAULT_EXTENSION");
		a_c.addText(".pnm");
		a_c.addText("ACCEPTED_EXTENSIONS");
		a_c.addText("PARAM_KEY_PNM_RAWBITS");
		a_c.addText("PNM_RAWBITS");
		a_c.addText("PARAM_VALUE_PNM_RAWBITS_YES");
		a_c.addText("YES");
		a_c.addText("PARAM_VALUE_PNM_RAWBITS_NO");
		a_c.addText("NO");
		a_c.addText("<init>");
		a_c.addText("getName");
		a_c.addText("Pbm-Custom");
		a_c.addText("getDefaultExtension");
		a_c.addText(".pnm");
		a_c.addText("getAcceptedExtensions");
		a_c.addText("getAcceptedTypes");
		a_c.addText("readHeader");
		a_c.addText("Identifier1");
		a_c.addText("Not a Valid PNM File");
		a_c.addText("Identifier2");
		a_c.addText("Not a Valid PNM File");
		a_c.addText("80");
		a_c.addText("PNM file has invalid prefix byte 1");
		a_c.addText("49");
		a_c.addText("52");
		a_c.addText("50");
		a_c.addText("53");
		a_c.addText("51");
		a_c.addText("54");
		a_c.addText("Invalid width specified.");
		a_c.addText("Invalid height specified.");
		a_c.addText("49");
		a_c.addText("52");
		a_c.addText("50");
		a_c.addText("53");
		a_c.addText("51");
		a_c.addText("54");
		a_c.addText("55");
		a_c.addText("35");
		a_c.addText(" ");
		a_c.addText("WIDTH");
		a_c.addText("PAM header has no WIDTH value");
		a_c.addText("HEIGHT");
		a_c.addText("PAM header has no HEIGHT value");
		a_c.addText("DEPTH");
		a_c.addText("PAM header has no DEPTH value");
		a_c.addText("MAXVAL");
		a_c.addText("PAM header has no MAXVAL value");
		a_c.addText("TUPLTYPE");
		a_c.addText("PAM header has no TUPLTYPE value");
		a_c.addText("ENDHDR");
		a_c.addText("Invalid PAM file header type ");
		a_c.addText("PAM header has no WIDTH");
		a_c.addText("PAM header has no HEIGHT");
		a_c.addText("PAM header has no DEPTH");
		a_c.addText("PAM header has no MAXVAL");
		a_c.addText("PAM header has no TUPLTYPE");
		a_c.addText("PNM file has invalid prefix byte 2");
		a_c.addText("width");
		a_c.addText("e");
		a_c.addText("height");
		a_c.addText("e");
		a_c.addText("maxgray");
		a_c.addText("maxgray");
		a_c.addText("max");
		a_c.addText("max");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("tokenizer");
		a_c.addText("type");
		a_c.addText("width");
		a_c.addText("seenWidth");
		a_c.addText("height");
		a_c.addText("seenHeight");
		a_c.addText("depth");
		a_c.addText("seenDepth");
		a_c.addText("maxVal");
		a_c.addText("seenMaxVal");
		a_c.addText("tupleType");
		a_c.addText("seenTupleType");
		a_c.addText("line");
		a_c.addText("is");
		a_c.addText("identifier1");
		a_c.addText("identifier2");
		a_c.addText("wsr");
		a_c.addText("readHeader");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("getICCProfileBytes");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageSize");
		a_c.addText("PNM: Couldn\'t read Header");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("info");
		a_c.addText("getMetadata");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("getImageInfo");
		a_c.addText("PNM: Couldn\'t read Header");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("72");
		a_c.addText("72.0");
		a_c.addText("72");
		a_c.addText("72");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("info");
		a_c.addText("comments");
		a_c.addText("bitsPerPixel");
		a_c.addText("format");
		a_c.addText("formatName");
		a_c.addText("mimeType");
		a_c.addText("numberOfImages");
		a_c.addText("progressive");
		a_c.addText("physicalWidthDpi");
		a_c.addText("physicalWidthInch");
		a_c.addText("physicalHeightDpi");
		a_c.addText("physicalHeightInch");
		a_c.addText("formatDetails");
		a_c.addText("transparent");
		a_c.addText("usesPalette");
		a_c.addText("colorType");
		a_c.addText("compressionAlgorithm");
		a_c.addText("dumpImageFile");
		a_c.addText("pnm.dumpImageFile");
		a_c.addText("pw");
		a_c.addText("byteSource");
		a_c.addText("imageData");
		a_c.addText("getBufferedImage");
		a_c.addText("info");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("imageBuilder");
		a_c.addText("ret");
		a_c.addText("is");
		a_c.addText("byteSource");
		a_c.addText("params");
		a_c.addText("writeImage");
		a_c.addText("PNM_RAWBITS");
		a_c.addText("NO");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("FORMAT");
		a_c.addText("PNM_RAWBITS");
		a_c.addText("PNM_RAWBITS");
		a_c.addText("Unknown parameter: ");
		a_c.addText("useRawbitsParam");
		a_c.addText("subtype");
		a_c.addText("hasAlpha");
		a_c.addText("firstKey");
		a_c.addText("src");
		a_c.addText("os");
		a_c.addText("params");
		a_c.addText("writer");
		a_c.addText("useRawbits");
		a_c.addText("<clinit>");
		a_c.addText(".pbm");
		a_c.addText(".pgm");
		a_c.addText(".ppm");
		a_c.addText(".pnm");
		a_c.addText(".pam");
	}
	public void c470_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.ConstructorCall, 54);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.FieldUse, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageParser"), dmDependency.Type.MethodCall, 55);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.Returns, 71);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.ConstructorCall, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormats"), dmDependency.Type.FieldUse, new int[]{76, 76, 76, 76, 76, 332, 334, 336, 338});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{76, 206, 213, 219, 231, 237, 273, 294});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{76, 206, 213, 219, 231, 237, 273, 294, 313});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.Returns, new int[]{76, 206});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 76);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{87, 88});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, new int[]{91, 107, 113, 158, 164, 170, 176, 182, 188, 193, 195, 197, 199, 201, 206, 228, 246});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.ConstructorCall, 94);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.MethodCall, new int[]{105, 111, 121, 124, 127, 130, 146, 148});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PbmFileInfo"), dmDependency.Type.ConstructorCall, new int[]{117, 119});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PgmFileInfo"), dmDependency.Type.ConstructorCall, new int[]{122, 125});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PpmFileInfo"), dmDependency.Type.ConstructorCall, new int[]{128, 131});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamFileInfo"), dmDependency.Type.ConstructorCall, 204);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{206, 206});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader"), dmDependency.Type.LocalVar, 206);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.Argument, new int[]{206, 213, 219, 231, 237, 273, 294});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.bytesource.ByteSource"), dmDependency.Type.MethodCall, new int[]{211, 300});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, new int[]{213, 213, 213, 213, 313, 313, 313, 313});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.InputStream"), dmDependency.Type.LocalVar, 213);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("byte"), dmDependency.Type.Returns, 213);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.Returns, 219);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.FieldUse, new int[]{231, 231, 261, 263, 273, 273, 303, 304});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.awt.Dimension"), dmDependency.Type.ConstructorCall, 231);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageMetadata"), dmDependency.Type.Returns, 231);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.Returns, 237);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.MethodCall, new int[]{251, 251, 252, 253, 254, 265, 267, 270, 306, 309});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.FieldUse, 271);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.ConstructorCall, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageFormat"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$ColorType"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo$CompressionAlgorithm"), dmDependency.Type.LocalVar, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.Argument, 273);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.PrintWriter"), dmDependency.Type.MethodCall, new int[]{283, 292});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.MethodCall, 290);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageInfo"), dmDependency.Type.LocalVar, 294);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, 294);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.ConstructorCall, 307);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.MethodCall, 311);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.FileInfo"), dmDependency.Type.LocalVar, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.common.ImageBuilder"), dmDependency.Type.LocalVar, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.LocalVar, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Argument, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("java.io.OutputStream"), dmDependency.Type.Argument, 313);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PbmWriter"), dmDependency.Type.ConstructorCall, 333);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PgmWriter"), dmDependency.Type.ConstructorCall, 335);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PpmWriter"), dmDependency.Type.ConstructorCall, new int[]{337, 349});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PamWriter"), dmDependency.Type.ConstructorCall, new int[]{339, 347});
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.ConstructorCall, 345);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.palette.PaletteFactory"), dmDependency.Type.MethodCall, 345);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 372);
		d(m_classes.get("org.apache.commons.imaging.formats.pnm.PnmImageParser"), m_classes.get("org.apache.commons.imaging.formats.pnm.PnmWriter"), dmDependency.Type.MethodCall, 375);
	}

	public void c471_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c471_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c472_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("Text value not String");
		a_c.addText("8");
		a_c.addText("fieldType");
		a_c.addText("value");
		a_c.addText("byteOrder");
		a_c.addText("s");
		a_c.addText("bytes");
		a_c.addText("paddedBytes");
		a_c.addText("getValue");
		a_c.addText("Text field not encoded as bytes.");
		a_c.addText("length");
		a_c.addText("entry");
		a_c.addText("bytes");
		a_c.addText("length");
		a_c.addText("getValue");
	}
	public void c472_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{34, 52});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 34);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.Throws, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("byte"), dmDependency.Type.Returns, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Argument, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.ImageWriteException"), dmDependency.Type.ConstructorCall, 41);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("java.nio.charset.StandardCharsets"), dmDependency.Type.FieldUse, new int[]{44, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("byte"), dmDependency.Type.LocalVar, new int[]{47, 47, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, new int[]{47, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.Argument, new int[]{47, 62});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.formats.tiff.TiffField"), dmDependency.Type.MethodCall, new int[]{52, 55});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 53);
	}

	public void c473_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("length");
		a_c.addText("directoryType");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("values");
	}
	public void c473_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 26);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("byte"), dmDependency.Type.Returns, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes"), m_classes.get("byte"), dmDependency.Type.Argument, 27);
	}

	public void c474_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("getValue");
		a_c.addText("byteOrder");
		a_c.addText("bytes");
		a_c.addText("encodeValue");
		a_c.addText("byteOrder");
		a_c.addText("value");
	}
	public void c474_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo"), dmDependency.Type.ConstructorCall, 27);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("java.nio.ByteOrder"), dmDependency.Type.Argument, new int[]{28, 31});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("byte"), dmDependency.Type.Argument, 28);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("org.apache.commons.imaging.common.ByteConversions"), dmDependency.Type.MethodCall, new int[]{31, 35});
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat"), m_classes.get("byte"), dmDependency.Type.Returns, 31);
	}

	public void c475_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("getColorBufferedImage");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
		a_c.addText("getGrayscaleBufferedImage");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("hasAlpha");
	}
	public void c475_deps() {
		d(m_classes.get("org.apache.commons.imaging.common.RgbBufferedImageFactory"), m_classes.get("org.apache.commons.imaging.common.BufferedImageFactory"), dmDependency.Type.Implements, 1);
		d(m_classes.get("org.apache.commons.imaging.common.RgbBufferedImageFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.Returns, new int[]{22, 29});
		d(m_classes.get("org.apache.commons.imaging.common.RgbBufferedImageFactory"), m_classes.get("java.awt.image.BufferedImage"), dmDependency.Type.ConstructorCall, new int[]{27, 29});
	}

	public void c476_texts(dmClass a_c) {
		a_c.addText("<init>");
		a_c.addText("parser");
		a_c.addText("marker");
		a_c.addText("segmentData");
		a_c.addText("<init>");
		a_c.addText("marker");
		a_c.addText("markerLength");
		a_c.addText("is");
		a_c.addText("isPhotoshopJpegSegment");
		a_c.addText("parsePhotoshopSegment");
		a_c.addText("params");
	}
	public void c476_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, new int[]{1, 35, 57});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.JpegImageParser"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("java.io.ByteArrayInputStream"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), dmDependency.Type.ConstructorCall, 33);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 35);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.AppnSegment"), dmDependency.Type.ConstructorCall, 39);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.ConstructorCall, new int[]{57, 71});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.IptcParser"), dmDependency.Type.MethodCall, new int[]{57, 71});
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 57);
		d(m_classes.get("org.apache.commons.imaging.formats.jpeg.segments.App13Segment"), m_classes.get("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data"), dmDependency.Type.Returns, 57);
	}

	public void c477_texts(dmClass a_c) {
		a_c.addText("samples");
		a_c.addText("width");
		a_c.addText("height");
		a_c.addText("<init>");
		a_c.addText("10");
		a_c.addText("width");
		a_c.addText("height");
	}

	public void c479_texts(dmClass a_c) {
		a_c.addText("imageLeftPosition");
		a_c.addText("imageTopPosition");
		a_c.addText("imageWidth");
		a_c.addText("imageHeight");
		a_c.addText("packedFields");
		a_c.addText("localColorTableFlag");
		a_c.addText("interlaceFlag");
		a_c.addText("sortFlag");
		a_c.addText("sizeOfLocalColorTable");
		a_c.addText("localColorTable");
		a_c.addText("imageData");
		a_c.addText("<init>");
		a_c.addText("blockCode");
		a_c.addText("imageLeftPosition");
		a_c.addText("imageTopPosition");
		a_c.addText("imageWidth");
		a_c.addText("imageHeight");
		a_c.addText("packedFields");
		a_c.addText("localColorTableFlag");
		a_c.addText("interlaceFlag");
		a_c.addText("sortFlag");
		a_c.addText("sizeofLocalColorTable");
		a_c.addText("localColorTable");
		a_c.addText("imageData");
	}
	public void c479_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), m_classes.get("byte"), dmDependency.Type.Argument, new int[]{1, 1, 1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), m_classes.get("org.apache.commons.imaging.formats.gif.GifBlock"), dmDependency.Type.ConstructorCall, 40);
		d(m_classes.get("org.apache.commons.imaging.formats.gif.ImageDescriptor"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{46, 50, 52, 53});
	}

	public void c480_texts(dmClass a_c) {
		a_c.addText("isCompressed");
		a_c.addText("count");
		a_c.addText("sample");
		a_c.addText("<init>");
		a_c.addText("isCompressed");
		a_c.addText("read");
		a_c.addText("RleByte");
		a_c.addText("Error reading image data");
		a_c.addText("192");
		a_c.addText("192");
		a_c.addText("63");
		a_c.addText("RleValue");
		a_c.addText("Error reading image data");
		a_c.addText("Premature end of file reading image data");
		a_c.addText("b");
		a_c.addText("samplesToAdd");
		a_c.addText("bytesRead");
		a_c.addText("prefill");
		a_c.addText("r");
		a_c.addText("bytesRead");
		a_c.addText("is");
		a_c.addText("samples");
	}
	public void c480_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("byte"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.Argument, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("byte"), dmDependency.Type.Argument, 32);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("byte"), dmDependency.Type.OwnFieldUse, new int[]{37, 44, 47, 50});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("org.apache.commons.imaging.common.BinaryFunctions"), dmDependency.Type.MethodCall, new int[]{41, 44});
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("java.io.InputStream"), dmDependency.Type.MethodCall, 57);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.ConstructorCall, 59);
		d(m_classes.get("org.apache.commons.imaging.formats.pcx.RleReader"), m_classes.get("byte"), dmDependency.Type.LocalVar, 64);
	}

	public void c481_texts(dmClass a_c) {
		a_c.addText("COMPRESSION_DEFLATE_INFLATE");
		a_c.addText("0");
		a_c.addText("PNG_SIGNATURE");
		a_c.addText("PARAM_KEY_PNG_BIT_DEPTH");
		a_c.addText("PNG_BIT_DEPTH");
		a_c.addText("PARAM_KEY_PNG_FORCE_INDEXED_COLOR");
		a_c.addText("PNG_FORCE_INDEXED_COLOR");
		a_c.addText("PARAM_KEY_PNG_FORCE_TRUE_COLOR");
		a_c.addText("PNG_FORCE_TRUE_COLOR");
		a_c.addText("COMPRESSION_TYPE_INFLATE_DEFLATE");
		a_c.addText("0");
		a_c.addText("FILTER_METHOD_ADAPTIVE");
		a_c.addText("0");
		a_c.addText("XMP_KEYWORD");
		a_c.addText("XML:com.adobe.xmp");
		a_c.addText("PARAM_KEY_PNG_TEXT_CHUNKS");
		a_c.addText("PNG_TEXT_CHUNKS");
		a_c.addText("PARAM_KEY_PHYSICAL_SCALE");
		a_c.addText("PHYSICAL_SCALE_CHUNK");
		a_c.addText("PARAM_KEY_PNG_COMPRESSION_LEVEL");
		a_c.addText("PNG_COMPRESSION_LEVEL");
		a_c.addText("<init>");
		a_c.addText("<clinit>");
		a_c.addText("8");
		a_c.addText("8");
		a_c.addText("-119");
		a_c.addText("80");
		a_c.addText("78");
		a_c.addText("71");
		a_c.addText("13");
		a_c.addText("10");
		a_c.addText("6");
		a_c.addText("26");
		a_c.addText("7");
		a_c.addText("10");
	}
	public void c481_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), m_classes.get("byte"), dmDependency.Type.Field, new int[]{1, 1});
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.ConstructorCall, 25);
		d(m_classes.get("org.apache.commons.imaging.formats.png.PngConstants"), m_classes.get("org.apache.commons.imaging.common.BinaryConstant"), dmDependency.Type.OwnFieldUse, 25);
	}

	public void c482_texts(dmClass a_c) {
		a_c.addText("getName");
		a_c.addText("getSignature");
		a_c.addText("dump");
	}
	public void c482_deps() {
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), m_classes.get("org.apache.commons.imaging.ImageReadException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), m_classes.get("java.io.IOException"), dmDependency.Type.Throws, 1);
		d(m_classes.get("org.apache.commons.imaging.icc.IccTagDataType"), m_classes.get("byte"), dmDependency.Type.Argument, 1);
	}

	public void c483_texts(dmClass a_c) {
		a_c.addText("fieldList");
		a_c.addText("<init>");
		a_c.addText("name");
		a_c.addText("tag");
		a_c.addText("directoryType");
		a_c.addText("<clinit>");
	}
	public void c483_deps() {
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.Extends, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.Field, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType"), dmDependency.Type.Argument, 1);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong"), dmDependency.Type.ConstructorCall, 36);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong"), dmDependency.Type.ConstructorCall, 30);
		d(m_classes.get("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory"), m_classes.get("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType"), dmDependency.Type.FieldUse, new int[]{30, 30});
	}
	public void createArch() {
		m_a = new ArchDef();
		ArchDef.Component c0 = m_a.addComponent("base");
		ArchDef.Component c1 = m_a.addComponent("color");
		ArchDef.Component c2 = m_a.addComponent("common");
		ArchDef.Component c3 = m_a.addComponent("bmp");
		ArchDef.Component c4 = m_a.addComponent("dcx");
		ArchDef.Component c5 = m_a.addComponent("gif");
		ArchDef.Component c6 = m_a.addComponent("icns");
		ArchDef.Component c7 = m_a.addComponent("ico");
		ArchDef.Component c8 = m_a.addComponent("jpeg");
		ArchDef.Component c9 = m_a.addComponent("pcx");
		ArchDef.Component c10 = m_a.addComponent("png");
		ArchDef.Component c11 = m_a.addComponent("pnm");
		ArchDef.Component c12 = m_a.addComponent("psd");
		ArchDef.Component c13 = m_a.addComponent("rgbe");
		ArchDef.Component c14 = m_a.addComponent("tiff");
		ArchDef.Component c15 = m_a.addComponent("wbmp");
		ArchDef.Component c16 = m_a.addComponent("xbm");
		ArchDef.Component c17 = m_a.addComponent("xpm");
		ArchDef.Component c18 = m_a.addComponent("icc");
		ArchDef.Component c19 = m_a.addComponent("internal");
		ArchDef.Component c20 = m_a.addComponent("palette");
		c0.addDependencyTo(c3);
		c0.addDependencyTo(c5);
		c0.addDependencyTo(c8);
		c0.addDependencyTo(c10);
		c0.addDependencyTo(c12);
		c0.addDependencyTo(c14);
		c2.addDependencyTo(c0);
		c3.addDependencyTo(c0);
		c3.addDependencyTo(c8);
		c8.addDependencyTo(c0);
		c8.addDependencyTo(c2);
		c8.addDependencyTo(c5);
		c8.addDependencyTo(c14);
		c10.addDependencyTo(c0);
		c12.addDependencyTo(c0);
		c12.addDependencyTo(c5);
		c12.addDependencyTo(c8);
		c14.addDependencyTo(c0);
		c14.addDependencyTo(c2);
		c14.addDependencyTo(c5);
		c14.addDependencyTo(c8);
	}
}
